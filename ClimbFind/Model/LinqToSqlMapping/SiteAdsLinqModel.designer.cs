#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ClimbFind.Model.LinqToSqlMapping
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="CFLive06.16")]
	public partial class SiteAdsLinqModelDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAdUnit(AdUnit instance);
    partial void UpdateAdUnit(AdUnit instance);
    partial void DeleteAdUnit(AdUnit instance);
    partial void InsertAdClient(AdClient instance);
    partial void UpdateAdClient(AdClient instance);
    partial void DeleteAdClient(AdClient instance);
    partial void InsertAdProduct(AdProduct instance);
    partial void UpdateAdProduct(AdProduct instance);
    partial void DeleteAdProduct(AdProduct instance);
    partial void InsertAdClick(AdClick instance);
    partial void UpdateAdClick(AdClick instance);
    partial void DeleteAdClick(AdClick instance);
    partial void InsertAd(Ad instance);
    partial void UpdateAd(Ad instance);
    partial void DeleteAd(Ad instance);
    #endregion
		
		public SiteAdsLinqModelDataContext() : 
				base(global::ClimbFind.Properties.Settings.Default.CFLive06_16ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public SiteAdsLinqModelDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SiteAdsLinqModelDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SiteAdsLinqModelDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SiteAdsLinqModelDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<AdUnit> AdUnits
		{
			get
			{
				return this.GetTable<AdUnit>();
			}
		}
		
		public System.Data.Linq.Table<AdClient> AdClients
		{
			get
			{
				return this.GetTable<AdClient>();
			}
		}
		
		public System.Data.Linq.Table<AdProduct> AdProducts
		{
			get
			{
				return this.GetTable<AdProduct>();
			}
		}
		
		public System.Data.Linq.Table<AdClick> AdClicks
		{
			get
			{
				return this.GetTable<AdClick>();
			}
		}
		
		public System.Data.Linq.Table<Ad> Ads
		{
			get
			{
				return this.GetTable<Ad>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="SiteAds.AdUnit")]
	public partial class AdUnit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _ClimbfindPageName;
		
		private string _ClimbfindPageLocation;
		
		private string _Description;
		
		private System.Nullable<int> _MaxX;
		
		private System.Nullable<int> _MaxY;
		
		private bool _Active;
		
		private EntitySet<Ad> _Ads;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnClimbfindPageNameChanging(string value);
    partial void OnClimbfindPageNameChanged();
    partial void OnClimbfindPageLocationChanging(string value);
    partial void OnClimbfindPageLocationChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnMaxXChanging(System.Nullable<int> value);
    partial void OnMaxXChanged();
    partial void OnMaxYChanging(System.Nullable<int> value);
    partial void OnMaxYChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    #endregion
		
		public AdUnit()
		{
			this._Ads = new EntitySet<Ad>(new Action<Ad>(this.attach_Ads), new Action<Ad>(this.detach_Ads));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="NVarChar(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClimbfindPageName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string ClimbfindPageName
		{
			get
			{
				return this._ClimbfindPageName;
			}
			set
			{
				if ((this._ClimbfindPageName != value))
				{
					this.OnClimbfindPageNameChanging(value);
					this.SendPropertyChanging();
					this._ClimbfindPageName = value;
					this.SendPropertyChanged("ClimbfindPageName");
					this.OnClimbfindPageNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClimbfindPageLocation", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string ClimbfindPageLocation
		{
			get
			{
				return this._ClimbfindPageLocation;
			}
			set
			{
				if ((this._ClimbfindPageLocation != value))
				{
					this.OnClimbfindPageLocationChanging(value);
					this.SendPropertyChanging();
					this._ClimbfindPageLocation = value;
					this.SendPropertyChanged("ClimbfindPageLocation");
					this.OnClimbfindPageLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(555)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxX", DbType="Int")]
		public System.Nullable<int> MaxX
		{
			get
			{
				return this._MaxX;
			}
			set
			{
				if ((this._MaxX != value))
				{
					this.OnMaxXChanging(value);
					this.SendPropertyChanging();
					this._MaxX = value;
					this.SendPropertyChanged("MaxX");
					this.OnMaxXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxY", DbType="Int")]
		public System.Nullable<int> MaxY
		{
			get
			{
				return this._MaxY;
			}
			set
			{
				if ((this._MaxY != value))
				{
					this.OnMaxYChanging(value);
					this.SendPropertyChanging();
					this._MaxY = value;
					this.SendPropertyChanged("MaxY");
					this.OnMaxYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AdUnit_Ad", Storage="_Ads", ThisKey="ID", OtherKey="SrcAdUnitID")]
		public EntitySet<Ad> Ads
		{
			get
			{
				return this._Ads;
			}
			set
			{
				this._Ads.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Ads(Ad entity)
		{
			this.SendPropertyChanging();
			entity.AdUnit = this;
		}
		
		private void detach_Ads(Ad entity)
		{
			this.SendPropertyChanging();
			entity.AdUnit = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="SiteAds.AdClient")]
	public partial class AdClient : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private string _Website;
		
		private string _ContactPerson;
		
		private string _ContactEmail;
		
		private EntitySet<AdProduct> _AdProducts;
		
		private EntitySet<Ad> _Ads;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnWebsiteChanging(string value);
    partial void OnWebsiteChanged();
    partial void OnContactPersonChanging(string value);
    partial void OnContactPersonChanged();
    partial void OnContactEmailChanging(string value);
    partial void OnContactEmailChanged();
    #endregion
		
		public AdClient()
		{
			this._AdProducts = new EntitySet<AdProduct>(new Action<AdProduct>(this.attach_AdProducts), new Action<AdProduct>(this.detach_AdProducts));
			this._Ads = new EntitySet<Ad>(new Action<Ad>(this.attach_Ads), new Action<Ad>(this.detach_Ads));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Website", DbType="NVarChar(255)")]
		public string Website
		{
			get
			{
				return this._Website;
			}
			set
			{
				if ((this._Website != value))
				{
					this.OnWebsiteChanging(value);
					this.SendPropertyChanging();
					this._Website = value;
					this.SendPropertyChanged("Website");
					this.OnWebsiteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactPerson", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string ContactPerson
		{
			get
			{
				return this._ContactPerson;
			}
			set
			{
				if ((this._ContactPerson != value))
				{
					this.OnContactPersonChanging(value);
					this.SendPropertyChanging();
					this._ContactPerson = value;
					this.SendPropertyChanged("ContactPerson");
					this.OnContactPersonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactEmail", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string ContactEmail
		{
			get
			{
				return this._ContactEmail;
			}
			set
			{
				if ((this._ContactEmail != value))
				{
					this.OnContactEmailChanging(value);
					this.SendPropertyChanging();
					this._ContactEmail = value;
					this.SendPropertyChanged("ContactEmail");
					this.OnContactEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AdClient_AdProduct", Storage="_AdProducts", ThisKey="ID", OtherKey="ClientID")]
		public EntitySet<AdProduct> AdProducts
		{
			get
			{
				return this._AdProducts;
			}
			set
			{
				this._AdProducts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AdClient_Ad", Storage="_Ads", ThisKey="ID", OtherKey="ClientID")]
		public EntitySet<Ad> Ads
		{
			get
			{
				return this._Ads;
			}
			set
			{
				this._Ads.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AdProducts(AdProduct entity)
		{
			this.SendPropertyChanging();
			entity.AdClient = this;
		}
		
		private void detach_AdProducts(AdProduct entity)
		{
			this.SendPropertyChanging();
			entity.AdClient = null;
		}
		
		private void attach_Ads(Ad entity)
		{
			this.SendPropertyChanging();
			entity.AdClient = this;
		}
		
		private void detach_Ads(Ad entity)
		{
			this.SendPropertyChanging();
			entity.AdClient = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="SiteAds.AdProduct")]
	public partial class AdProduct : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _ClientID;
		
		private string _Name;
		
		private EntitySet<Ad> _Ads;
		
		private EntityRef<AdClient> _AdClient;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnClientIDChanging(int value);
    partial void OnClientIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public AdProduct()
		{
			this._Ads = new EntitySet<Ad>(new Action<Ad>(this.attach_Ads), new Action<Ad>(this.detach_Ads));
			this._AdClient = default(EntityRef<AdClient>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientID", DbType="Int NOT NULL")]
		public int ClientID
		{
			get
			{
				return this._ClientID;
			}
			set
			{
				if ((this._ClientID != value))
				{
					if (this._AdClient.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClientIDChanging(value);
					this.SendPropertyChanging();
					this._ClientID = value;
					this.SendPropertyChanged("ClientID");
					this.OnClientIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AdProduct_Ad", Storage="_Ads", ThisKey="ID", OtherKey="ProductID")]
		public EntitySet<Ad> Ads
		{
			get
			{
				return this._Ads;
			}
			set
			{
				this._Ads.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AdClient_AdProduct", Storage="_AdClient", ThisKey="ClientID", OtherKey="ID", IsForeignKey=true)]
		public AdClient AdClient
		{
			get
			{
				return this._AdClient.Entity;
			}
			set
			{
				AdClient previousValue = this._AdClient.Entity;
				if (((previousValue != value) 
							|| (this._AdClient.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AdClient.Entity = null;
						previousValue.AdProducts.Remove(this);
					}
					this._AdClient.Entity = value;
					if ((value != null))
					{
						value.AdProducts.Add(this);
						this._ClientID = value.ID;
					}
					else
					{
						this._ClientID = default(int);
					}
					this.SendPropertyChanged("AdClient");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Ads(Ad entity)
		{
			this.SendPropertyChanging();
			entity.AdProduct = this;
		}
		
		private void detach_Ads(Ad entity)
		{
			this.SendPropertyChanging();
			entity.AdProduct = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="SiteAds.AdClick")]
	public partial class AdClick : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _AdID;
		
		private string _SrcUrl;
		
		private System.DateTime _ClickDateTime;
		
		private System.Guid _UserID;
		
		private EntityRef<Ad> _Ad;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnAdIDChanging(int value);
    partial void OnAdIDChanged();
    partial void OnSrcUrlChanging(string value);
    partial void OnSrcUrlChanged();
    partial void OnClickDateTimeChanging(System.DateTime value);
    partial void OnClickDateTimeChanged();
    partial void OnUserIDChanging(System.Guid value);
    partial void OnUserIDChanged();
    #endregion
		
		public AdClick()
		{
			this._Ad = default(EntityRef<Ad>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdID", DbType="Int NOT NULL")]
		public int AdID
		{
			get
			{
				return this._AdID;
			}
			set
			{
				if ((this._AdID != value))
				{
					if (this._Ad.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAdIDChanging(value);
					this.SendPropertyChanging();
					this._AdID = value;
					this.SendPropertyChanged("AdID");
					this.OnAdIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SrcUrl", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string SrcUrl
		{
			get
			{
				return this._SrcUrl;
			}
			set
			{
				if ((this._SrcUrl != value))
				{
					this.OnSrcUrlChanging(value);
					this.SendPropertyChanging();
					this._SrcUrl = value;
					this.SendPropertyChanged("SrcUrl");
					this.OnSrcUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClickDateTime", DbType="SmallDateTime NOT NULL")]
		public System.DateTime ClickDateTime
		{
			get
			{
				return this._ClickDateTime;
			}
			set
			{
				if ((this._ClickDateTime != value))
				{
					this.OnClickDateTimeChanging(value);
					this.SendPropertyChanging();
					this._ClickDateTime = value;
					this.SendPropertyChanged("ClickDateTime");
					this.OnClickDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ad_AdClick", Storage="_Ad", ThisKey="AdID", OtherKey="ID", IsForeignKey=true)]
		public Ad Ad
		{
			get
			{
				return this._Ad.Entity;
			}
			set
			{
				Ad previousValue = this._Ad.Entity;
				if (((previousValue != value) 
							|| (this._Ad.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Ad.Entity = null;
						previousValue.AdClicks.Remove(this);
					}
					this._Ad.Entity = value;
					if ((value != null))
					{
						value.AdClicks.Add(this);
						this._AdID = value.ID;
					}
					else
					{
						this._AdID = default(int);
					}
					this.SendPropertyChanged("Ad");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="SiteAds.Ad")]
	public partial class Ad : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _SrcAdUnitID;
		
		private int _ClientID;
		
		private int _ProductID;
		
		private string _ProductName;
		
		private string _DestinationPageUrl;
		
		private System.DateTime _DateStart;
		
		private System.DateTime _DateEnd;
		
		private int _Impressions;
		
		private string _ImageFileName;
		
		private string _ImageTagStyles;
		
		private EntitySet<AdClick> _AdClicks;
		
		private EntityRef<AdClient> _AdClient;
		
		private EntityRef<AdProduct> _AdProduct;
		
		private EntityRef<AdUnit> _AdUnit;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnSrcAdUnitIDChanging(string value);
    partial void OnSrcAdUnitIDChanged();
    partial void OnClientIDChanging(int value);
    partial void OnClientIDChanged();
    partial void OnProductIDChanging(int value);
    partial void OnProductIDChanged();
    partial void OnProductNameChanging(string value);
    partial void OnProductNameChanged();
    partial void OnDestinationPageUrlChanging(string value);
    partial void OnDestinationPageUrlChanged();
    partial void OnDateStartChanging(System.DateTime value);
    partial void OnDateStartChanged();
    partial void OnDateEndChanging(System.DateTime value);
    partial void OnDateEndChanged();
    partial void OnImpressionsChanging(int value);
    partial void OnImpressionsChanged();
    partial void OnImageFileNameChanging(string value);
    partial void OnImageFileNameChanged();
    partial void OnImageTagStylesChanging(string value);
    partial void OnImageTagStylesChanged();
    #endregion
		
		public Ad()
		{
			this._AdClicks = new EntitySet<AdClick>(new Action<AdClick>(this.attach_AdClicks), new Action<AdClick>(this.detach_AdClicks));
			this._AdClient = default(EntityRef<AdClient>);
			this._AdProduct = default(EntityRef<AdProduct>);
			this._AdUnit = default(EntityRef<AdUnit>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SrcAdUnitID", DbType="NVarChar(16) NOT NULL", CanBeNull=false)]
		public string SrcAdUnitID
		{
			get
			{
				return this._SrcAdUnitID;
			}
			set
			{
				if ((this._SrcAdUnitID != value))
				{
					if (this._AdUnit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSrcAdUnitIDChanging(value);
					this.SendPropertyChanging();
					this._SrcAdUnitID = value;
					this.SendPropertyChanged("SrcAdUnitID");
					this.OnSrcAdUnitIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientID", DbType="Int NOT NULL")]
		public int ClientID
		{
			get
			{
				return this._ClientID;
			}
			set
			{
				if ((this._ClientID != value))
				{
					if (this._AdClient.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClientIDChanging(value);
					this.SendPropertyChanging();
					this._ClientID = value;
					this.SendPropertyChanged("ClientID");
					this.OnClientIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="Int NOT NULL")]
		public int ProductID
		{
			get
			{
				return this._ProductID;
			}
			set
			{
				if ((this._ProductID != value))
				{
					if (this._AdProduct.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductIDChanging(value);
					this.SendPropertyChanging();
					this._ProductID = value;
					this.SendPropertyChanged("ProductID");
					this.OnProductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductName", DbType="NVarChar(40) NOT NULL", CanBeNull=false)]
		public string ProductName
		{
			get
			{
				return this._ProductName;
			}
			set
			{
				if ((this._ProductName != value))
				{
					this.OnProductNameChanging(value);
					this.SendPropertyChanging();
					this._ProductName = value;
					this.SendPropertyChanged("ProductName");
					this.OnProductNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DestinationPageUrl", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string DestinationPageUrl
		{
			get
			{
				return this._DestinationPageUrl;
			}
			set
			{
				if ((this._DestinationPageUrl != value))
				{
					this.OnDestinationPageUrlChanging(value);
					this.SendPropertyChanging();
					this._DestinationPageUrl = value;
					this.SendPropertyChanged("DestinationPageUrl");
					this.OnDestinationPageUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateStart", DbType="SmallDateTime NOT NULL")]
		public System.DateTime DateStart
		{
			get
			{
				return this._DateStart;
			}
			set
			{
				if ((this._DateStart != value))
				{
					this.OnDateStartChanging(value);
					this.SendPropertyChanging();
					this._DateStart = value;
					this.SendPropertyChanged("DateStart");
					this.OnDateStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateEnd", DbType="SmallDateTime NOT NULL")]
		public System.DateTime DateEnd
		{
			get
			{
				return this._DateEnd;
			}
			set
			{
				if ((this._DateEnd != value))
				{
					this.OnDateEndChanging(value);
					this.SendPropertyChanging();
					this._DateEnd = value;
					this.SendPropertyChanged("DateEnd");
					this.OnDateEndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Impressions", DbType="Int NOT NULL")]
		public int Impressions
		{
			get
			{
				return this._Impressions;
			}
			set
			{
				if ((this._Impressions != value))
				{
					this.OnImpressionsChanging(value);
					this.SendPropertyChanging();
					this._Impressions = value;
					this.SendPropertyChanged("Impressions");
					this.OnImpressionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageFileName", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string ImageFileName
		{
			get
			{
				return this._ImageFileName;
			}
			set
			{
				if ((this._ImageFileName != value))
				{
					this.OnImageFileNameChanging(value);
					this.SendPropertyChanging();
					this._ImageFileName = value;
					this.SendPropertyChanged("ImageFileName");
					this.OnImageFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageTagStyles", DbType="NVarChar(200)")]
		public string ImageTagStyles
		{
			get
			{
				return this._ImageTagStyles;
			}
			set
			{
				if ((this._ImageTagStyles != value))
				{
					this.OnImageTagStylesChanging(value);
					this.SendPropertyChanging();
					this._ImageTagStyles = value;
					this.SendPropertyChanged("ImageTagStyles");
					this.OnImageTagStylesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ad_AdClick", Storage="_AdClicks", ThisKey="ID", OtherKey="AdID")]
		public EntitySet<AdClick> AdClicks
		{
			get
			{
				return this._AdClicks;
			}
			set
			{
				this._AdClicks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AdClient_Ad", Storage="_AdClient", ThisKey="ClientID", OtherKey="ID", IsForeignKey=true)]
		public AdClient AdClient
		{
			get
			{
				return this._AdClient.Entity;
			}
			set
			{
				AdClient previousValue = this._AdClient.Entity;
				if (((previousValue != value) 
							|| (this._AdClient.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AdClient.Entity = null;
						previousValue.Ads.Remove(this);
					}
					this._AdClient.Entity = value;
					if ((value != null))
					{
						value.Ads.Add(this);
						this._ClientID = value.ID;
					}
					else
					{
						this._ClientID = default(int);
					}
					this.SendPropertyChanged("AdClient");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AdProduct_Ad", Storage="_AdProduct", ThisKey="ProductID", OtherKey="ID", IsForeignKey=true)]
		public AdProduct AdProduct
		{
			get
			{
				return this._AdProduct.Entity;
			}
			set
			{
				AdProduct previousValue = this._AdProduct.Entity;
				if (((previousValue != value) 
							|| (this._AdProduct.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AdProduct.Entity = null;
						previousValue.Ads.Remove(this);
					}
					this._AdProduct.Entity = value;
					if ((value != null))
					{
						value.Ads.Add(this);
						this._ProductID = value.ID;
					}
					else
					{
						this._ProductID = default(int);
					}
					this.SendPropertyChanged("AdProduct");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AdUnit_Ad", Storage="_AdUnit", ThisKey="SrcAdUnitID", OtherKey="ID", IsForeignKey=true)]
		public AdUnit AdUnit
		{
			get
			{
				return this._AdUnit.Entity;
			}
			set
			{
				AdUnit previousValue = this._AdUnit.Entity;
				if (((previousValue != value) 
							|| (this._AdUnit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AdUnit.Entity = null;
						previousValue.Ads.Remove(this);
					}
					this._AdUnit.Entity = value;
					if ((value != null))
					{
						value.Ads.Add(this);
						this._SrcAdUnitID = value.ID;
					}
					else
					{
						this._SrcAdUnitID = default(string);
					}
					this.SendPropertyChanged("AdUnit");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AdClicks(AdClick entity)
		{
			this.SendPropertyChanging();
			entity.Ad = this;
		}
		
		private void detach_AdClicks(AdClick entity)
		{
			this.SendPropertyChanging();
			entity.Ad = null;
		}
	}
}
#pragma warning restore 1591
