#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ClimbFind.Model.LinqToSqlMapping
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="CFLive10.01")]
	public partial class ClimbfindLinqModelDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAdvertisement(Advertisement instance);
    partial void UpdateAdvertisement(Advertisement instance);
    partial void DeleteAdvertisement(Advertisement instance);
    partial void InsertAdvertisementCategory(AdvertisementCategory instance);
    partial void UpdateAdvertisementCategory(AdvertisementCategory instance);
    partial void DeleteAdvertisementCategory(AdvertisementCategory instance);
    partial void InsertAreaTag(AreaTag instance);
    partial void UpdateAreaTag(AreaTag instance);
    partial void DeleteAreaTag(AreaTag instance);
    partial void InsertClimberProfile(ClimberProfile instance);
    partial void UpdateClimberProfile(ClimberProfile instance);
    partial void DeleteClimberProfile(ClimberProfile instance);
    partial void InsertClimberProfileExtended(ClimberProfileExtended instance);
    partial void UpdateClimberProfileExtended(ClimberProfileExtended instance);
    partial void DeleteClimberProfileExtended(ClimberProfileExtended instance);
    partial void InsertClimberProfilePartnerStatus(ClimberProfilePartnerStatus instance);
    partial void UpdateClimberProfilePartnerStatus(ClimberProfilePartnerStatus instance);
    partial void DeleteClimberProfilePartnerStatus(ClimberProfilePartnerStatus instance);
    partial void InsertClub(Club instance);
    partial void UpdateClub(Club instance);
    partial void DeleteClub(Club instance);
    partial void InsertClubInArea(ClubInArea instance);
    partial void UpdateClubInArea(ClubInArea instance);
    partial void DeleteClubInArea(ClubInArea instance);
    partial void InsertCompetition(Competition instance);
    partial void UpdateCompetition(Competition instance);
    partial void DeleteCompetition(Competition instance);
    partial void InsertFeatureArticle(FeatureArticle instance);
    partial void UpdateFeatureArticle(FeatureArticle instance);
    partial void DeleteFeatureArticle(FeatureArticle instance);
    partial void InsertFeatureArticlePhotoSet(FeatureArticlePhotoSet instance);
    partial void UpdateFeatureArticlePhotoSet(FeatureArticlePhotoSet instance);
    partial void DeleteFeatureArticlePhotoSet(FeatureArticlePhotoSet instance);
    partial void InsertFeedback(Feedback instance);
    partial void UpdateFeedback(Feedback instance);
    partial void DeleteFeedback(Feedback instance);
    partial void InsertLogEvent(LogEvent instance);
    partial void UpdateLogEvent(LogEvent instance);
    partial void DeleteLogEvent(LogEvent instance);
    partial void InsertLogExceptionEvent(LogExceptionEvent instance);
    partial void UpdateLogExceptionEvent(LogExceptionEvent instance);
    partial void DeleteLogExceptionEvent(LogExceptionEvent instance);
    partial void InsertMainNewsFeedItem(MainNewsFeedItem instance);
    partial void UpdateMainNewsFeedItem(MainNewsFeedItem instance);
    partial void DeleteMainNewsFeedItem(MainNewsFeedItem instance);
    partial void InsertMediaShare(MediaShare instance);
    partial void UpdateMediaShare(MediaShare instance);
    partial void DeleteMediaShare(MediaShare instance);
    partial void InsertMessageBoard(MessageBoard instance);
    partial void UpdateMessageBoard(MessageBoard instance);
    partial void DeleteMessageBoard(MessageBoard instance);
    partial void InsertMessageBoardMessage(MessageBoardMessage instance);
    partial void UpdateMessageBoardMessage(MessageBoardMessage instance);
    partial void DeleteMessageBoardMessage(MessageBoardMessage instance);
    partial void InsertOutdoorCragMediaShare(OutdoorCragMediaShare instance);
    partial void UpdateOutdoorCragMediaShare(OutdoorCragMediaShare instance);
    partial void DeleteOutdoorCragMediaShare(OutdoorCragMediaShare instance);
    partial void InsertPartnerCallPlace(PartnerCallPlace instance);
    partial void UpdatePartnerCallPlace(PartnerCallPlace instance);
    partial void DeletePartnerCallPlace(PartnerCallPlace instance);
    partial void InsertPartnerCallReply(PartnerCallReply instance);
    partial void UpdatePartnerCallReply(PartnerCallReply instance);
    partial void DeletePartnerCallReply(PartnerCallReply instance);
    partial void InsertPartnerCallSubscription(PartnerCallSubscription instance);
    partial void UpdatePartnerCallSubscription(PartnerCallSubscription instance);
    partial void DeletePartnerCallSubscription(PartnerCallSubscription instance);
    partial void InsertPlaceIndoorDetail(PlaceIndoorDetail instance);
    partial void UpdatePlaceIndoorDetail(PlaceIndoorDetail instance);
    partial void DeletePlaceIndoorDetail(PlaceIndoorDetail instance);
    partial void InsertPlaceMediaShare(PlaceMediaShare instance);
    partial void UpdatePlaceMediaShare(PlaceMediaShare instance);
    partial void DeletePlaceMediaShare(PlaceMediaShare instance);
    partial void InsertPlaceOutdoorAuthority(PlaceOutdoorAuthority instance);
    partial void UpdatePlaceOutdoorAuthority(PlaceOutdoorAuthority instance);
    partial void DeletePlaceOutdoorAuthority(PlaceOutdoorAuthority instance);
    partial void InsertPlaceOutdoorCrag(PlaceOutdoorCrag instance);
    partial void UpdatePlaceOutdoorCrag(PlaceOutdoorCrag instance);
    partial void DeletePlaceOutdoorCrag(PlaceOutdoorCrag instance);
    partial void InsertPlaceOutdoorDetail(PlaceOutdoorDetail instance);
    partial void UpdatePlaceOutdoorDetail(PlaceOutdoorDetail instance);
    partial void DeletePlaceOutdoorDetail(PlaceOutdoorDetail instance);
    partial void InsertPlacesInArea(PlacesInArea instance);
    partial void UpdatePlacesInArea(PlacesInArea instance);
    partial void DeletePlacesInArea(PlacesInArea instance);
    partial void InsertPlaceUserClimb(PlaceUserClimb instance);
    partial void UpdatePlaceUserClimb(PlaceUserClimb instance);
    partial void DeletePlaceUserClimb(PlaceUserClimb instance);
    partial void InsertUserInClub(UserInClub instance);
    partial void UpdateUserInClub(UserInClub instance);
    partial void DeleteUserInClub(UserInClub instance);
    partial void InsertUserMessage(UserMessage instance);
    partial void UpdateUserMessage(UserMessage instance);
    partial void DeleteUserMessage(UserMessage instance);
    partial void InsertUserSetting(UserSetting instance);
    partial void UpdateUserSetting(UserSetting instance);
    partial void DeleteUserSetting(UserSetting instance);
    partial void Insertaspnet_Application(aspnet_Application instance);
    partial void Updateaspnet_Application(aspnet_Application instance);
    partial void Deleteaspnet_Application(aspnet_Application instance);
    partial void Insertaspnet_Membership(aspnet_Membership instance);
    partial void Updateaspnet_Membership(aspnet_Membership instance);
    partial void Deleteaspnet_Membership(aspnet_Membership instance);
    partial void Insertaspnet_Profile(aspnet_Profile instance);
    partial void Updateaspnet_Profile(aspnet_Profile instance);
    partial void Deleteaspnet_Profile(aspnet_Profile instance);
    partial void Insertaspnet_User(aspnet_User instance);
    partial void Updateaspnet_User(aspnet_User instance);
    partial void Deleteaspnet_User(aspnet_User instance);
    partial void InsertPlace(Place instance);
    partial void UpdatePlace(Place instance);
    partial void DeletePlace(Place instance);
    partial void InsertPartnerCallSurvey(PartnerCallSurvey instance);
    partial void UpdatePartnerCallSurvey(PartnerCallSurvey instance);
    partial void DeletePartnerCallSurvey(PartnerCallSurvey instance);
    partial void InsertPartnerCall(PartnerCall instance);
    partial void UpdatePartnerCall(PartnerCall instance);
    partial void DeletePartnerCall(PartnerCall instance);
    partial void InsertPartnerWidgetCSS(PartnerWidgetCSS instance);
    partial void UpdatePartnerWidgetCSS(PartnerWidgetCSS instance);
    partial void DeletePartnerWidgetCSS(PartnerWidgetCSS instance);
    #endregion
		
		public ClimbfindLinqModelDataContext() : 
				base(global::ClimbFind.Properties.Settings.Default.CFLive10_01ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public ClimbfindLinqModelDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ClimbfindLinqModelDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ClimbfindLinqModelDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ClimbfindLinqModelDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Advertisement> Advertisements
		{
			get
			{
				return this.GetTable<Advertisement>();
			}
		}
		
		public System.Data.Linq.Table<AdvertisementCategory> AdvertisementCategories
		{
			get
			{
				return this.GetTable<AdvertisementCategory>();
			}
		}
		
		public System.Data.Linq.Table<AreaTag> AreaTags
		{
			get
			{
				return this.GetTable<AreaTag>();
			}
		}
		
		public System.Data.Linq.Table<ClimberProfile> ClimberProfiles
		{
			get
			{
				return this.GetTable<ClimberProfile>();
			}
		}
		
		public System.Data.Linq.Table<ClimberProfileExtended> ClimberProfileExtendeds
		{
			get
			{
				return this.GetTable<ClimberProfileExtended>();
			}
		}
		
		public System.Data.Linq.Table<ClimberProfilePartnerStatus> ClimberProfilePartnerStatus
		{
			get
			{
				return this.GetTable<ClimberProfilePartnerStatus>();
			}
		}
		
		public System.Data.Linq.Table<Club> Clubs
		{
			get
			{
				return this.GetTable<Club>();
			}
		}
		
		public System.Data.Linq.Table<ClubInArea> ClubInAreas
		{
			get
			{
				return this.GetTable<ClubInArea>();
			}
		}
		
		public System.Data.Linq.Table<Competition> Competitions
		{
			get
			{
				return this.GetTable<Competition>();
			}
		}
		
		public System.Data.Linq.Table<FeatureArticle> FeatureArticles
		{
			get
			{
				return this.GetTable<FeatureArticle>();
			}
		}
		
		public System.Data.Linq.Table<FeatureArticlePhotoSet> FeatureArticlePhotoSets
		{
			get
			{
				return this.GetTable<FeatureArticlePhotoSet>();
			}
		}
		
		public System.Data.Linq.Table<Feedback> Feedbacks
		{
			get
			{
				return this.GetTable<Feedback>();
			}
		}
		
		public System.Data.Linq.Table<LogEvent> LogEvents
		{
			get
			{
				return this.GetTable<LogEvent>();
			}
		}
		
		public System.Data.Linq.Table<LogExceptionEvent> LogExceptionEvents
		{
			get
			{
				return this.GetTable<LogExceptionEvent>();
			}
		}
		
		public System.Data.Linq.Table<MainNewsFeedItem> MainNewsFeedItems
		{
			get
			{
				return this.GetTable<MainNewsFeedItem>();
			}
		}
		
		public System.Data.Linq.Table<MediaShare> MediaShares
		{
			get
			{
				return this.GetTable<MediaShare>();
			}
		}
		
		public System.Data.Linq.Table<MessageBoard> MessageBoards
		{
			get
			{
				return this.GetTable<MessageBoard>();
			}
		}
		
		public System.Data.Linq.Table<MessageBoardMessage> MessageBoardMessages
		{
			get
			{
				return this.GetTable<MessageBoardMessage>();
			}
		}
		
		public System.Data.Linq.Table<OutdoorCragMediaShare> OutdoorCragMediaShares
		{
			get
			{
				return this.GetTable<OutdoorCragMediaShare>();
			}
		}
		
		public System.Data.Linq.Table<PartnerCallPlace> PartnerCallPlaces
		{
			get
			{
				return this.GetTable<PartnerCallPlace>();
			}
		}
		
		public System.Data.Linq.Table<PartnerCallReply> PartnerCallReplies
		{
			get
			{
				return this.GetTable<PartnerCallReply>();
			}
		}
		
		public System.Data.Linq.Table<PartnerCallSubscription> PartnerCallSubscriptions
		{
			get
			{
				return this.GetTable<PartnerCallSubscription>();
			}
		}
		
		public System.Data.Linq.Table<PlaceIndoorDetail> PlaceIndoorDetails
		{
			get
			{
				return this.GetTable<PlaceIndoorDetail>();
			}
		}
		
		public System.Data.Linq.Table<PlaceMediaShare> PlaceMediaShares
		{
			get
			{
				return this.GetTable<PlaceMediaShare>();
			}
		}
		
		public System.Data.Linq.Table<PlaceOutdoorAuthority> PlaceOutdoorAuthorities
		{
			get
			{
				return this.GetTable<PlaceOutdoorAuthority>();
			}
		}
		
		public System.Data.Linq.Table<PlaceOutdoorCrag> PlaceOutdoorCrags
		{
			get
			{
				return this.GetTable<PlaceOutdoorCrag>();
			}
		}
		
		public System.Data.Linq.Table<PlaceOutdoorDetail> PlaceOutdoorDetails
		{
			get
			{
				return this.GetTable<PlaceOutdoorDetail>();
			}
		}
		
		public System.Data.Linq.Table<PlacesInArea> PlacesInAreas
		{
			get
			{
				return this.GetTable<PlacesInArea>();
			}
		}
		
		public System.Data.Linq.Table<PlaceUserClimb> PlaceUserClimbs
		{
			get
			{
				return this.GetTable<PlaceUserClimb>();
			}
		}
		
		public System.Data.Linq.Table<SpecialPagesHTML> SpecialPagesHTMLs
		{
			get
			{
				return this.GetTable<SpecialPagesHTML>();
			}
		}
		
		public System.Data.Linq.Table<UserInClub> UserInClubs
		{
			get
			{
				return this.GetTable<UserInClub>();
			}
		}
		
		public System.Data.Linq.Table<UserMessage> UserMessages
		{
			get
			{
				return this.GetTable<UserMessage>();
			}
		}
		
		public System.Data.Linq.Table<UserSetting> UserSettings
		{
			get
			{
				return this.GetTable<UserSetting>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_Application> aspnet_Applications
		{
			get
			{
				return this.GetTable<aspnet_Application>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_Membership> aspnet_Memberships
		{
			get
			{
				return this.GetTable<aspnet_Membership>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_Profile> aspnet_Profiles
		{
			get
			{
				return this.GetTable<aspnet_Profile>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_User> aspnet_Users
		{
			get
			{
				return this.GetTable<aspnet_User>();
			}
		}
		
		public System.Data.Linq.Table<Place> Places
		{
			get
			{
				return this.GetTable<Place>();
			}
		}
		
		public System.Data.Linq.Table<PartnerCallSurvey> PartnerCallSurveys
		{
			get
			{
				return this.GetTable<PartnerCallSurvey>();
			}
		}
		
		public System.Data.Linq.Table<PartnerCall> PartnerCalls
		{
			get
			{
				return this.GetTable<PartnerCall>();
			}
		}
		
		public System.Data.Linq.Table<PartnerWidgetCSS> PartnerWidgetCSSes
		{
			get
			{
				return this.GetTable<PartnerWidgetCSS>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="ClimbFind.Advertisement")]
	public partial class Advertisement : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private byte _CategoryID;
		
		private System.Guid _SubmittedByUserID;
		
		private string _Text;
		
		private string _Link;
		
		private string _ImageUrl;
		
		private EntityRef<AdvertisementCategory> _AdvertisementCategory;
		
		private EntityRef<ClimberProfile> _ClimberProfile;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnCategoryIDChanging(byte value);
    partial void OnCategoryIDChanged();
    partial void OnSubmittedByUserIDChanging(System.Guid value);
    partial void OnSubmittedByUserIDChanged();
    partial void OnTextChanging(string value);
    partial void OnTextChanged();
    partial void OnLinkChanging(string value);
    partial void OnLinkChanged();
    partial void OnImageUrlChanging(string value);
    partial void OnImageUrlChanged();
    #endregion
		
		public Advertisement()
		{
			this._AdvertisementCategory = default(EntityRef<AdvertisementCategory>);
			this._ClimberProfile = default(EntityRef<ClimberProfile>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryID", DbType="TinyInt NOT NULL")]
		public byte CategoryID
		{
			get
			{
				return this._CategoryID;
			}
			set
			{
				if ((this._CategoryID != value))
				{
					if (this._AdvertisementCategory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCategoryIDChanging(value);
					this.SendPropertyChanging();
					this._CategoryID = value;
					this.SendPropertyChanged("CategoryID");
					this.OnCategoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubmittedByUserID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid SubmittedByUserID
		{
			get
			{
				return this._SubmittedByUserID;
			}
			set
			{
				if ((this._SubmittedByUserID != value))
				{
					if (this._ClimberProfile.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSubmittedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._SubmittedByUserID = value;
					this.SendPropertyChanged("SubmittedByUserID");
					this.OnSubmittedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Text", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Text
		{
			get
			{
				return this._Text;
			}
			set
			{
				if ((this._Text != value))
				{
					this.OnTextChanging(value);
					this.SendPropertyChanging();
					this._Text = value;
					this.SendPropertyChanged("Text");
					this.OnTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Link", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Link
		{
			get
			{
				return this._Link;
			}
			set
			{
				if ((this._Link != value))
				{
					this.OnLinkChanging(value);
					this.SendPropertyChanging();
					this._Link = value;
					this.SendPropertyChanged("Link");
					this.OnLinkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageUrl", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string ImageUrl
		{
			get
			{
				return this._ImageUrl;
			}
			set
			{
				if ((this._ImageUrl != value))
				{
					this.OnImageUrlChanging(value);
					this.SendPropertyChanging();
					this._ImageUrl = value;
					this.SendPropertyChanged("ImageUrl");
					this.OnImageUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AdvertisementCategory_Advertisement", Storage="_AdvertisementCategory", ThisKey="CategoryID", OtherKey="ID", IsForeignKey=true)]
		public AdvertisementCategory AdvertisementCategory
		{
			get
			{
				return this._AdvertisementCategory.Entity;
			}
			set
			{
				AdvertisementCategory previousValue = this._AdvertisementCategory.Entity;
				if (((previousValue != value) 
							|| (this._AdvertisementCategory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AdvertisementCategory.Entity = null;
						previousValue.Advertisements.Remove(this);
					}
					this._AdvertisementCategory.Entity = value;
					if ((value != null))
					{
						value.Advertisements.Add(this);
						this._CategoryID = value.ID;
					}
					else
					{
						this._CategoryID = default(byte);
					}
					this.SendPropertyChanged("AdvertisementCategory");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClimberProfile_Advertisement", Storage="_ClimberProfile", ThisKey="SubmittedByUserID", OtherKey="ID", IsForeignKey=true)]
		public ClimberProfile ClimberProfile
		{
			get
			{
				return this._ClimberProfile.Entity;
			}
			set
			{
				ClimberProfile previousValue = this._ClimberProfile.Entity;
				if (((previousValue != value) 
							|| (this._ClimberProfile.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ClimberProfile.Entity = null;
						previousValue.Advertisements.Remove(this);
					}
					this._ClimberProfile.Entity = value;
					if ((value != null))
					{
						value.Advertisements.Add(this);
						this._SubmittedByUserID = value.ID;
					}
					else
					{
						this._SubmittedByUserID = default(System.Guid);
					}
					this.SendPropertyChanged("ClimberProfile");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="ClimbFind.AdvertisementCategory")]
	public partial class AdvertisementCategory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private byte _ID;
		
		private string _Name;
		
		private string _AdTitle;
		
		private EntitySet<Advertisement> _Advertisements;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(byte value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnAdTitleChanging(string value);
    partial void OnAdTitleChanged();
    #endregion
		
		public AdvertisementCategory()
		{
			this._Advertisements = new EntitySet<Advertisement>(new Action<Advertisement>(this.attach_Advertisements), new Action<Advertisement>(this.detach_Advertisements));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="TinyInt NOT NULL", IsPrimaryKey=true)]
		public byte ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdTitle", DbType="NVarChar(80) NOT NULL", CanBeNull=false)]
		public string AdTitle
		{
			get
			{
				return this._AdTitle;
			}
			set
			{
				if ((this._AdTitle != value))
				{
					this.OnAdTitleChanging(value);
					this.SendPropertyChanging();
					this._AdTitle = value;
					this.SendPropertyChanged("AdTitle");
					this.OnAdTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AdvertisementCategory_Advertisement", Storage="_Advertisements", ThisKey="ID", OtherKey="CategoryID")]
		public EntitySet<Advertisement> Advertisements
		{
			get
			{
				return this._Advertisements;
			}
			set
			{
				this._Advertisements.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Advertisements(Advertisement entity)
		{
			this.SendPropertyChanging();
			entity.AdvertisementCategory = this;
		}
		
		private void detach_Advertisements(Advertisement entity)
		{
			this.SendPropertyChanging();
			entity.AdvertisementCategory = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="ClimbFind.AreaTag")]
	public partial class AreaTag : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private short _CountryID;
		
		private bool _IsCountry;
		
		private string _Name;
		
		private string _ParagraphName;
		
		private string _FriendlyUrlName;
		
		private decimal _Latitude;
		
		private decimal _Longitude;
		
		private short _DefaultVirtualEarthZoom;
		
		private EntitySet<ClubInArea> _ClubInAreas;
		
		private EntitySet<PlacesInArea> _PlacesInAreas;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCountryIDChanging(short value);
    partial void OnCountryIDChanged();
    partial void OnIsCountryChanging(bool value);
    partial void OnIsCountryChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnParagraphNameChanging(string value);
    partial void OnParagraphNameChanged();
    partial void OnFriendlyUrlNameChanging(string value);
    partial void OnFriendlyUrlNameChanged();
    partial void OnLatitudeChanging(decimal value);
    partial void OnLatitudeChanged();
    partial void OnLongitudeChanging(decimal value);
    partial void OnLongitudeChanged();
    partial void OnDefaultVirtualEarthZoomChanging(short value);
    partial void OnDefaultVirtualEarthZoomChanged();
    #endregion
		
		public AreaTag()
		{
			this._ClubInAreas = new EntitySet<ClubInArea>(new Action<ClubInArea>(this.attach_ClubInAreas), new Action<ClubInArea>(this.detach_ClubInAreas));
			this._PlacesInAreas = new EntitySet<PlacesInArea>(new Action<PlacesInArea>(this.attach_PlacesInAreas), new Action<PlacesInArea>(this.detach_PlacesInAreas));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryID", DbType="SmallInt NOT NULL")]
		public short CountryID
		{
			get
			{
				return this._CountryID;
			}
			set
			{
				if ((this._CountryID != value))
				{
					this.OnCountryIDChanging(value);
					this.SendPropertyChanging();
					this._CountryID = value;
					this.SendPropertyChanged("CountryID");
					this.OnCountryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCountry", DbType="Bit NOT NULL")]
		public bool IsCountry
		{
			get
			{
				return this._IsCountry;
			}
			set
			{
				if ((this._IsCountry != value))
				{
					this.OnIsCountryChanging(value);
					this.SendPropertyChanging();
					this._IsCountry = value;
					this.SendPropertyChanged("IsCountry");
					this.OnIsCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParagraphName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string ParagraphName
		{
			get
			{
				return this._ParagraphName;
			}
			set
			{
				if ((this._ParagraphName != value))
				{
					this.OnParagraphNameChanging(value);
					this.SendPropertyChanging();
					this._ParagraphName = value;
					this.SendPropertyChanged("ParagraphName");
					this.OnParagraphNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FriendlyUrlName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string FriendlyUrlName
		{
			get
			{
				return this._FriendlyUrlName;
			}
			set
			{
				if ((this._FriendlyUrlName != value))
				{
					this.OnFriendlyUrlNameChanging(value);
					this.SendPropertyChanging();
					this._FriendlyUrlName = value;
					this.SendPropertyChanged("FriendlyUrlName");
					this.OnFriendlyUrlNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Latitude", DbType="Decimal(18,12) NOT NULL")]
		public decimal Latitude
		{
			get
			{
				return this._Latitude;
			}
			set
			{
				if ((this._Latitude != value))
				{
					this.OnLatitudeChanging(value);
					this.SendPropertyChanging();
					this._Latitude = value;
					this.SendPropertyChanged("Latitude");
					this.OnLatitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Longitude", DbType="Decimal(18,12) NOT NULL")]
		public decimal Longitude
		{
			get
			{
				return this._Longitude;
			}
			set
			{
				if ((this._Longitude != value))
				{
					this.OnLongitudeChanging(value);
					this.SendPropertyChanging();
					this._Longitude = value;
					this.SendPropertyChanged("Longitude");
					this.OnLongitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefaultVirtualEarthZoom", DbType="SmallInt NOT NULL")]
		public short DefaultVirtualEarthZoom
		{
			get
			{
				return this._DefaultVirtualEarthZoom;
			}
			set
			{
				if ((this._DefaultVirtualEarthZoom != value))
				{
					this.OnDefaultVirtualEarthZoomChanging(value);
					this.SendPropertyChanging();
					this._DefaultVirtualEarthZoom = value;
					this.SendPropertyChanged("DefaultVirtualEarthZoom");
					this.OnDefaultVirtualEarthZoomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AreaTag_ClubInArea", Storage="_ClubInAreas", ThisKey="ID", OtherKey="AreaTagID")]
		public EntitySet<ClubInArea> ClubInAreas
		{
			get
			{
				return this._ClubInAreas;
			}
			set
			{
				this._ClubInAreas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AreaTag_PlacesInArea", Storage="_PlacesInAreas", ThisKey="ID", OtherKey="AreaTagID")]
		public EntitySet<PlacesInArea> PlacesInAreas
		{
			get
			{
				return this._PlacesInAreas;
			}
			set
			{
				this._PlacesInAreas.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ClubInAreas(ClubInArea entity)
		{
			this.SendPropertyChanging();
			entity.AreaTag = this;
		}
		
		private void detach_ClubInAreas(ClubInArea entity)
		{
			this.SendPropertyChanging();
			entity.AreaTag = null;
		}
		
		private void attach_PlacesInAreas(PlacesInArea entity)
		{
			this.SendPropertyChanging();
			entity.AreaTag = this;
		}
		
		private void detach_PlacesInAreas(PlacesInArea entity)
		{
			this.SendPropertyChanging();
			entity.AreaTag = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="ClimbFind.ClimberProfile")]
	public partial class ClimberProfile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private string _FullName;
		
		private string _NickName;
		
		private System.Nullable<short> _Nationality;
		
		private System.Nullable<bool> _IsMale;
		
		private string _ProfilePictureFile;
		
		private string _ClimbingLevel;
		
		private System.Nullable<int> _ClimbingGradeLower;
		
		private System.Nullable<int> _ClimbingGradeUpper;
		
		private string _ContractPhoneNumber;
		
		private System.Guid _MessageBoardID;
		
		private string _Email;
		
		private bool _EmailVerificationSent;
		
		private bool _EmailVerified;
		
		private byte _PartnerStatusID;
		
		private bool _IsModerator;
		
		private EntitySet<Advertisement> _Advertisements;
		
		private EntityRef<ClimberProfileExtended> _ClimberProfileExtended;
		
		private EntitySet<Club> _Clubs;
		
		private EntitySet<MediaShare> _MediaShares;
		
		private EntitySet<MessageBoardMessage> _MessageBoardMessages;
		
		private EntitySet<PartnerCallReply> _PartnerCallReplies;
		
		private EntitySet<PartnerCallSubscription> _PartnerCallSubscriptions;
		
		private EntitySet<PlaceOutdoorCrag> _PlaceOutdoorCrags;
		
		private EntitySet<PlaceOutdoorCrag> _PlaceOutdoorCrags1;
		
		private EntitySet<PlaceOutdoorCrag> _PlaceOutdoorCrags2;
		
		private EntitySet<PlaceOutdoorCrag> _PlaceOutdoorCrags3;
		
		private EntitySet<PlaceOutdoorDetail> _PlaceOutdoorDetails;
		
		private EntitySet<PlaceOutdoorDetail> _PlaceOutdoorDetails1;
		
		private EntitySet<PlaceOutdoorDetail> _PlaceOutdoorDetails2;
		
		private EntitySet<PlaceOutdoorDetail> _PlaceOutdoorDetails3;
		
		private EntitySet<UserInClub> _UserInClubs;
		
		private EntitySet<Place> _Places;
		
		private EntitySet<PartnerCall> _PartnerCalls;
		
		private EntityRef<MessageBoard> _MessageBoard;
		
		private EntityRef<aspnet_Membership> _aspnet_Membership;
		
		private EntityRef<aspnet_User> _aspnet_User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnFullNameChanging(string value);
    partial void OnFullNameChanged();
    partial void OnNickNameChanging(string value);
    partial void OnNickNameChanged();
    partial void OnNationalityChanging(System.Nullable<short> value);
    partial void OnNationalityChanged();
    partial void OnIsMaleChanging(System.Nullable<bool> value);
    partial void OnIsMaleChanged();
    partial void OnProfilePictureFileChanging(string value);
    partial void OnProfilePictureFileChanged();
    partial void OnClimbingLevelChanging(string value);
    partial void OnClimbingLevelChanged();
    partial void OnClimbingGradeLowerChanging(System.Nullable<int> value);
    partial void OnClimbingGradeLowerChanged();
    partial void OnClimbingGradeUpperChanging(System.Nullable<int> value);
    partial void OnClimbingGradeUpperChanged();
    partial void OnContractPhoneNumberChanging(string value);
    partial void OnContractPhoneNumberChanged();
    partial void OnMessageBoardIDChanging(System.Guid value);
    partial void OnMessageBoardIDChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnEmailVerificationSentChanging(bool value);
    partial void OnEmailVerificationSentChanged();
    partial void OnEmailVerifiedChanging(bool value);
    partial void OnEmailVerifiedChanged();
    partial void OnPartnerStatusIDChanging(byte value);
    partial void OnPartnerStatusIDChanged();
    partial void OnIsModeratorChanging(bool value);
    partial void OnIsModeratorChanged();
    #endregion
		
		public ClimberProfile()
		{
			this._Advertisements = new EntitySet<Advertisement>(new Action<Advertisement>(this.attach_Advertisements), new Action<Advertisement>(this.detach_Advertisements));
			this._ClimberProfileExtended = default(EntityRef<ClimberProfileExtended>);
			this._Clubs = new EntitySet<Club>(new Action<Club>(this.attach_Clubs), new Action<Club>(this.detach_Clubs));
			this._MediaShares = new EntitySet<MediaShare>(new Action<MediaShare>(this.attach_MediaShares), new Action<MediaShare>(this.detach_MediaShares));
			this._MessageBoardMessages = new EntitySet<MessageBoardMessage>(new Action<MessageBoardMessage>(this.attach_MessageBoardMessages), new Action<MessageBoardMessage>(this.detach_MessageBoardMessages));
			this._PartnerCallReplies = new EntitySet<PartnerCallReply>(new Action<PartnerCallReply>(this.attach_PartnerCallReplies), new Action<PartnerCallReply>(this.detach_PartnerCallReplies));
			this._PartnerCallSubscriptions = new EntitySet<PartnerCallSubscription>(new Action<PartnerCallSubscription>(this.attach_PartnerCallSubscriptions), new Action<PartnerCallSubscription>(this.detach_PartnerCallSubscriptions));
			this._PlaceOutdoorCrags = new EntitySet<PlaceOutdoorCrag>(new Action<PlaceOutdoorCrag>(this.attach_PlaceOutdoorCrags), new Action<PlaceOutdoorCrag>(this.detach_PlaceOutdoorCrags));
			this._PlaceOutdoorCrags1 = new EntitySet<PlaceOutdoorCrag>(new Action<PlaceOutdoorCrag>(this.attach_PlaceOutdoorCrags1), new Action<PlaceOutdoorCrag>(this.detach_PlaceOutdoorCrags1));
			this._PlaceOutdoorCrags2 = new EntitySet<PlaceOutdoorCrag>(new Action<PlaceOutdoorCrag>(this.attach_PlaceOutdoorCrags2), new Action<PlaceOutdoorCrag>(this.detach_PlaceOutdoorCrags2));
			this._PlaceOutdoorCrags3 = new EntitySet<PlaceOutdoorCrag>(new Action<PlaceOutdoorCrag>(this.attach_PlaceOutdoorCrags3), new Action<PlaceOutdoorCrag>(this.detach_PlaceOutdoorCrags3));
			this._PlaceOutdoorDetails = new EntitySet<PlaceOutdoorDetail>(new Action<PlaceOutdoorDetail>(this.attach_PlaceOutdoorDetails), new Action<PlaceOutdoorDetail>(this.detach_PlaceOutdoorDetails));
			this._PlaceOutdoorDetails1 = new EntitySet<PlaceOutdoorDetail>(new Action<PlaceOutdoorDetail>(this.attach_PlaceOutdoorDetails1), new Action<PlaceOutdoorDetail>(this.detach_PlaceOutdoorDetails1));
			this._PlaceOutdoorDetails2 = new EntitySet<PlaceOutdoorDetail>(new Action<PlaceOutdoorDetail>(this.attach_PlaceOutdoorDetails2), new Action<PlaceOutdoorDetail>(this.detach_PlaceOutdoorDetails2));
			this._PlaceOutdoorDetails3 = new EntitySet<PlaceOutdoorDetail>(new Action<PlaceOutdoorDetail>(this.attach_PlaceOutdoorDetails3), new Action<PlaceOutdoorDetail>(this.detach_PlaceOutdoorDetails3));
			this._UserInClubs = new EntitySet<UserInClub>(new Action<UserInClub>(this.attach_UserInClubs), new Action<UserInClub>(this.detach_UserInClubs));
			this._Places = new EntitySet<Place>(new Action<Place>(this.attach_Places), new Action<Place>(this.detach_Places));
			this._PartnerCalls = new EntitySet<PartnerCall>(new Action<PartnerCall>(this.attach_PartnerCalls), new Action<PartnerCall>(this.detach_PartnerCalls));
			this._MessageBoard = default(EntityRef<MessageBoard>);
			this._aspnet_Membership = default(EntityRef<aspnet_Membership>);
			this._aspnet_User = default(EntityRef<aspnet_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					if ((this._aspnet_Membership.HasLoadedOrAssignedValue || this._aspnet_User.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullName", DbType="NVarChar(50)")]
		public string FullName
		{
			get
			{
				return this._FullName;
			}
			set
			{
				if ((this._FullName != value))
				{
					this.OnFullNameChanging(value);
					this.SendPropertyChanging();
					this._FullName = value;
					this.SendPropertyChanged("FullName");
					this.OnFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NickName", DbType="NVarChar(50)")]
		public string NickName
		{
			get
			{
				return this._NickName;
			}
			set
			{
				if ((this._NickName != value))
				{
					this.OnNickNameChanging(value);
					this.SendPropertyChanging();
					this._NickName = value;
					this.SendPropertyChanged("NickName");
					this.OnNickNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nationality", DbType="SmallInt")]
		public System.Nullable<short> Nationality
		{
			get
			{
				return this._Nationality;
			}
			set
			{
				if ((this._Nationality != value))
				{
					this.OnNationalityChanging(value);
					this.SendPropertyChanging();
					this._Nationality = value;
					this.SendPropertyChanged("Nationality");
					this.OnNationalityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsMale", DbType="Bit")]
		public System.Nullable<bool> IsMale
		{
			get
			{
				return this._IsMale;
			}
			set
			{
				if ((this._IsMale != value))
				{
					this.OnIsMaleChanging(value);
					this.SendPropertyChanging();
					this._IsMale = value;
					this.SendPropertyChanged("IsMale");
					this.OnIsMaleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProfilePictureFile", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string ProfilePictureFile
		{
			get
			{
				return this._ProfilePictureFile;
			}
			set
			{
				if ((this._ProfilePictureFile != value))
				{
					this.OnProfilePictureFileChanging(value);
					this.SendPropertyChanging();
					this._ProfilePictureFile = value;
					this.SendPropertyChanged("ProfilePictureFile");
					this.OnProfilePictureFileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClimbingLevel", DbType="NVarChar(50)")]
		public string ClimbingLevel
		{
			get
			{
				return this._ClimbingLevel;
			}
			set
			{
				if ((this._ClimbingLevel != value))
				{
					this.OnClimbingLevelChanging(value);
					this.SendPropertyChanging();
					this._ClimbingLevel = value;
					this.SendPropertyChanged("ClimbingLevel");
					this.OnClimbingLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClimbingGradeLower", DbType="Int")]
		public System.Nullable<int> ClimbingGradeLower
		{
			get
			{
				return this._ClimbingGradeLower;
			}
			set
			{
				if ((this._ClimbingGradeLower != value))
				{
					this.OnClimbingGradeLowerChanging(value);
					this.SendPropertyChanging();
					this._ClimbingGradeLower = value;
					this.SendPropertyChanged("ClimbingGradeLower");
					this.OnClimbingGradeLowerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClimbingGradeUpper", DbType="Int")]
		public System.Nullable<int> ClimbingGradeUpper
		{
			get
			{
				return this._ClimbingGradeUpper;
			}
			set
			{
				if ((this._ClimbingGradeUpper != value))
				{
					this.OnClimbingGradeUpperChanging(value);
					this.SendPropertyChanging();
					this._ClimbingGradeUpper = value;
					this.SendPropertyChanged("ClimbingGradeUpper");
					this.OnClimbingGradeUpperChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContractPhoneNumber", DbType="NVarChar(50)")]
		public string ContractPhoneNumber
		{
			get
			{
				return this._ContractPhoneNumber;
			}
			set
			{
				if ((this._ContractPhoneNumber != value))
				{
					this.OnContractPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._ContractPhoneNumber = value;
					this.SendPropertyChanged("ContractPhoneNumber");
					this.OnContractPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MessageBoardID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid MessageBoardID
		{
			get
			{
				return this._MessageBoardID;
			}
			set
			{
				if ((this._MessageBoardID != value))
				{
					if (this._MessageBoard.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMessageBoardIDChanging(value);
					this.SendPropertyChanging();
					this._MessageBoardID = value;
					this.SendPropertyChanged("MessageBoardID");
					this.OnMessageBoardIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailVerificationSent", DbType="Bit NOT NULL")]
		public bool EmailVerificationSent
		{
			get
			{
				return this._EmailVerificationSent;
			}
			set
			{
				if ((this._EmailVerificationSent != value))
				{
					this.OnEmailVerificationSentChanging(value);
					this.SendPropertyChanging();
					this._EmailVerificationSent = value;
					this.SendPropertyChanged("EmailVerificationSent");
					this.OnEmailVerificationSentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailVerified", DbType="Bit NOT NULL")]
		public bool EmailVerified
		{
			get
			{
				return this._EmailVerified;
			}
			set
			{
				if ((this._EmailVerified != value))
				{
					this.OnEmailVerifiedChanging(value);
					this.SendPropertyChanging();
					this._EmailVerified = value;
					this.SendPropertyChanged("EmailVerified");
					this.OnEmailVerifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartnerStatusID", DbType="TinyInt NOT NULL")]
		public byte PartnerStatusID
		{
			get
			{
				return this._PartnerStatusID;
			}
			set
			{
				if ((this._PartnerStatusID != value))
				{
					this.OnPartnerStatusIDChanging(value);
					this.SendPropertyChanging();
					this._PartnerStatusID = value;
					this.SendPropertyChanged("PartnerStatusID");
					this.OnPartnerStatusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsModerator", DbType="Bit NOT NULL")]
		public bool IsModerator
		{
			get
			{
				return this._IsModerator;
			}
			set
			{
				if ((this._IsModerator != value))
				{
					this.OnIsModeratorChanging(value);
					this.SendPropertyChanging();
					this._IsModerator = value;
					this.SendPropertyChanged("IsModerator");
					this.OnIsModeratorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClimberProfile_Advertisement", Storage="_Advertisements", ThisKey="ID", OtherKey="SubmittedByUserID")]
		public EntitySet<Advertisement> Advertisements
		{
			get
			{
				return this._Advertisements;
			}
			set
			{
				this._Advertisements.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClimberProfile_ClimberProfileExtended", Storage="_ClimberProfileExtended", ThisKey="ID", OtherKey="ID", IsUnique=true, IsForeignKey=false)]
		public ClimberProfileExtended ClimberProfileExtended
		{
			get
			{
				return this._ClimberProfileExtended.Entity;
			}
			set
			{
				ClimberProfileExtended previousValue = this._ClimberProfileExtended.Entity;
				if (((previousValue != value) 
							|| (this._ClimberProfileExtended.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ClimberProfileExtended.Entity = null;
						previousValue.ClimberProfile = null;
					}
					this._ClimberProfileExtended.Entity = value;
					if ((value != null))
					{
						value.ClimberProfile = this;
					}
					this.SendPropertyChanged("ClimberProfileExtended");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClimberProfile_Club", Storage="_Clubs", ThisKey="ID", OtherKey="CreatedByUserID")]
		public EntitySet<Club> Clubs
		{
			get
			{
				return this._Clubs;
			}
			set
			{
				this._Clubs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClimberProfile_MediaShare", Storage="_MediaShares", ThisKey="ID", OtherKey="SubmittedByUserID")]
		public EntitySet<MediaShare> MediaShares
		{
			get
			{
				return this._MediaShares;
			}
			set
			{
				this._MediaShares.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClimberProfile_MessageBoardMessage", Storage="_MessageBoardMessages", ThisKey="ID", OtherKey="UserID")]
		public EntitySet<MessageBoardMessage> MessageBoardMessages
		{
			get
			{
				return this._MessageBoardMessages;
			}
			set
			{
				this._MessageBoardMessages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClimberProfile_PartnerCallReply", Storage="_PartnerCallReplies", ThisKey="ID", OtherKey="ReplyingUserID")]
		public EntitySet<PartnerCallReply> PartnerCallReplies
		{
			get
			{
				return this._PartnerCallReplies;
			}
			set
			{
				this._PartnerCallReplies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClimberProfile_PartnerCallSubscription", Storage="_PartnerCallSubscriptions", ThisKey="ID", OtherKey="UserID")]
		public EntitySet<PartnerCallSubscription> PartnerCallSubscriptions
		{
			get
			{
				return this._PartnerCallSubscriptions;
			}
			set
			{
				this._PartnerCallSubscriptions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClimberProfile_PlaceOutdoorCrag", Storage="_PlaceOutdoorCrags", ThisKey="ID", OtherKey="CreatedByUserID")]
		public EntitySet<PlaceOutdoorCrag> PlaceOutdoorCrags
		{
			get
			{
				return this._PlaceOutdoorCrags;
			}
			set
			{
				this._PlaceOutdoorCrags.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClimberProfile_PlaceOutdoorCrag1", Storage="_PlaceOutdoorCrags1", ThisKey="ID", OtherKey="DescriptionImageFile1ByUserID")]
		public EntitySet<PlaceOutdoorCrag> PlaceOutdoorCrags1
		{
			get
			{
				return this._PlaceOutdoorCrags1;
			}
			set
			{
				this._PlaceOutdoorCrags1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClimberProfile_PlaceOutdoorCrag2", Storage="_PlaceOutdoorCrags2", ThisKey="ID", OtherKey="DescriptionImageFile2ByUserID")]
		public EntitySet<PlaceOutdoorCrag> PlaceOutdoorCrags2
		{
			get
			{
				return this._PlaceOutdoorCrags2;
			}
			set
			{
				this._PlaceOutdoorCrags2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClimberProfile_PlaceOutdoorCrag3", Storage="_PlaceOutdoorCrags3", ThisKey="ID", OtherKey="DescriptionImageFile3ByUserID")]
		public EntitySet<PlaceOutdoorCrag> PlaceOutdoorCrags3
		{
			get
			{
				return this._PlaceOutdoorCrags3;
			}
			set
			{
				this._PlaceOutdoorCrags3.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClimberProfile_PlaceOutdoorDetail", Storage="_PlaceOutdoorDetails", ThisKey="ID", OtherKey="DescriptionByUserID")]
		public EntitySet<PlaceOutdoorDetail> PlaceOutdoorDetails
		{
			get
			{
				return this._PlaceOutdoorDetails;
			}
			set
			{
				this._PlaceOutdoorDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClimberProfile_PlaceOutdoorDetail1", Storage="_PlaceOutdoorDetails1", ThisKey="ID", OtherKey="DescriptionImageFileByUserID")]
		public EntitySet<PlaceOutdoorDetail> PlaceOutdoorDetails1
		{
			get
			{
				return this._PlaceOutdoorDetails1;
			}
			set
			{
				this._PlaceOutdoorDetails1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClimberProfile_PlaceOutdoorDetail2", Storage="_PlaceOutdoorDetails2", ThisKey="ID", OtherKey="DescriptionImageFile2ByUserID")]
		public EntitySet<PlaceOutdoorDetail> PlaceOutdoorDetails2
		{
			get
			{
				return this._PlaceOutdoorDetails2;
			}
			set
			{
				this._PlaceOutdoorDetails2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClimberProfile_PlaceOutdoorDetail3", Storage="_PlaceOutdoorDetails3", ThisKey="ID", OtherKey="DescriptionImageFile3ByUserID")]
		public EntitySet<PlaceOutdoorDetail> PlaceOutdoorDetails3
		{
			get
			{
				return this._PlaceOutdoorDetails3;
			}
			set
			{
				this._PlaceOutdoorDetails3.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClimberProfile_UserInClub", Storage="_UserInClubs", ThisKey="ID", OtherKey="UserID")]
		public EntitySet<UserInClub> UserInClubs
		{
			get
			{
				return this._UserInClubs;
			}
			set
			{
				this._UserInClubs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClimberProfile_Place", Storage="_Places", ThisKey="ID", OtherKey="CreatedByUserID")]
		public EntitySet<Place> Places
		{
			get
			{
				return this._Places;
			}
			set
			{
				this._Places.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClimberProfile_PartnerCall", Storage="_PartnerCalls", ThisKey="ID", OtherKey="ClimberProfileID")]
		public EntitySet<PartnerCall> PartnerCalls
		{
			get
			{
				return this._PartnerCalls;
			}
			set
			{
				this._PartnerCalls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MessageBoard_ClimberProfile", Storage="_MessageBoard", ThisKey="MessageBoardID", OtherKey="ID", IsForeignKey=true)]
		public MessageBoard MessageBoard
		{
			get
			{
				return this._MessageBoard.Entity;
			}
			set
			{
				MessageBoard previousValue = this._MessageBoard.Entity;
				if (((previousValue != value) 
							|| (this._MessageBoard.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MessageBoard.Entity = null;
						previousValue.ClimberProfiles.Remove(this);
					}
					this._MessageBoard.Entity = value;
					if ((value != null))
					{
						value.ClimberProfiles.Add(this);
						this._MessageBoardID = value.ID;
					}
					else
					{
						this._MessageBoardID = default(System.Guid);
					}
					this.SendPropertyChanged("MessageBoard");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Membership_ClimberProfile", Storage="_aspnet_Membership", ThisKey="ID", OtherKey="UserId", IsForeignKey=true)]
		public aspnet_Membership aspnet_Membership
		{
			get
			{
				return this._aspnet_Membership.Entity;
			}
			set
			{
				aspnet_Membership previousValue = this._aspnet_Membership.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Membership.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Membership.Entity = null;
						previousValue.ClimberProfile = null;
					}
					this._aspnet_Membership.Entity = value;
					if ((value != null))
					{
						value.ClimberProfile = this;
						this._ID = value.UserId;
					}
					else
					{
						this._ID = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_Membership");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_ClimberProfile", Storage="_aspnet_User", ThisKey="ID", OtherKey="UserId", IsForeignKey=true)]
		public aspnet_User aspnet_User
		{
			get
			{
				return this._aspnet_User.Entity;
			}
			set
			{
				aspnet_User previousValue = this._aspnet_User.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_User.Entity = null;
						previousValue.ClimberProfile = null;
					}
					this._aspnet_User.Entity = value;
					if ((value != null))
					{
						value.ClimberProfile = this;
						this._ID = value.UserId;
					}
					else
					{
						this._ID = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Advertisements(Advertisement entity)
		{
			this.SendPropertyChanging();
			entity.ClimberProfile = this;
		}
		
		private void detach_Advertisements(Advertisement entity)
		{
			this.SendPropertyChanging();
			entity.ClimberProfile = null;
		}
		
		private void attach_Clubs(Club entity)
		{
			this.SendPropertyChanging();
			entity.ClimberProfile = this;
		}
		
		private void detach_Clubs(Club entity)
		{
			this.SendPropertyChanging();
			entity.ClimberProfile = null;
		}
		
		private void attach_MediaShares(MediaShare entity)
		{
			this.SendPropertyChanging();
			entity.ClimberProfile = this;
		}
		
		private void detach_MediaShares(MediaShare entity)
		{
			this.SendPropertyChanging();
			entity.ClimberProfile = null;
		}
		
		private void attach_MessageBoardMessages(MessageBoardMessage entity)
		{
			this.SendPropertyChanging();
			entity.ClimberProfile = this;
		}
		
		private void detach_MessageBoardMessages(MessageBoardMessage entity)
		{
			this.SendPropertyChanging();
			entity.ClimberProfile = null;
		}
		
		private void attach_PartnerCallReplies(PartnerCallReply entity)
		{
			this.SendPropertyChanging();
			entity.ClimberProfile = this;
		}
		
		private void detach_PartnerCallReplies(PartnerCallReply entity)
		{
			this.SendPropertyChanging();
			entity.ClimberProfile = null;
		}
		
		private void attach_PartnerCallSubscriptions(PartnerCallSubscription entity)
		{
			this.SendPropertyChanging();
			entity.ClimberProfile = this;
		}
		
		private void detach_PartnerCallSubscriptions(PartnerCallSubscription entity)
		{
			this.SendPropertyChanging();
			entity.ClimberProfile = null;
		}
		
		private void attach_PlaceOutdoorCrags(PlaceOutdoorCrag entity)
		{
			this.SendPropertyChanging();
			entity.ClimberProfile = this;
		}
		
		private void detach_PlaceOutdoorCrags(PlaceOutdoorCrag entity)
		{
			this.SendPropertyChanging();
			entity.ClimberProfile = null;
		}
		
		private void attach_PlaceOutdoorCrags1(PlaceOutdoorCrag entity)
		{
			this.SendPropertyChanging();
			entity.ClimberProfile1 = this;
		}
		
		private void detach_PlaceOutdoorCrags1(PlaceOutdoorCrag entity)
		{
			this.SendPropertyChanging();
			entity.ClimberProfile1 = null;
		}
		
		private void attach_PlaceOutdoorCrags2(PlaceOutdoorCrag entity)
		{
			this.SendPropertyChanging();
			entity.ClimberProfile2 = this;
		}
		
		private void detach_PlaceOutdoorCrags2(PlaceOutdoorCrag entity)
		{
			this.SendPropertyChanging();
			entity.ClimberProfile2 = null;
		}
		
		private void attach_PlaceOutdoorCrags3(PlaceOutdoorCrag entity)
		{
			this.SendPropertyChanging();
			entity.ClimberProfile3 = this;
		}
		
		private void detach_PlaceOutdoorCrags3(PlaceOutdoorCrag entity)
		{
			this.SendPropertyChanging();
			entity.ClimberProfile3 = null;
		}
		
		private void attach_PlaceOutdoorDetails(PlaceOutdoorDetail entity)
		{
			this.SendPropertyChanging();
			entity.ClimberProfile = this;
		}
		
		private void detach_PlaceOutdoorDetails(PlaceOutdoorDetail entity)
		{
			this.SendPropertyChanging();
			entity.ClimberProfile = null;
		}
		
		private void attach_PlaceOutdoorDetails1(PlaceOutdoorDetail entity)
		{
			this.SendPropertyChanging();
			entity.ClimberProfile1 = this;
		}
		
		private void detach_PlaceOutdoorDetails1(PlaceOutdoorDetail entity)
		{
			this.SendPropertyChanging();
			entity.ClimberProfile1 = null;
		}
		
		private void attach_PlaceOutdoorDetails2(PlaceOutdoorDetail entity)
		{
			this.SendPropertyChanging();
			entity.ClimberProfile2 = this;
		}
		
		private void detach_PlaceOutdoorDetails2(PlaceOutdoorDetail entity)
		{
			this.SendPropertyChanging();
			entity.ClimberProfile2 = null;
		}
		
		private void attach_PlaceOutdoorDetails3(PlaceOutdoorDetail entity)
		{
			this.SendPropertyChanging();
			entity.ClimberProfile3 = this;
		}
		
		private void detach_PlaceOutdoorDetails3(PlaceOutdoorDetail entity)
		{
			this.SendPropertyChanging();
			entity.ClimberProfile3 = null;
		}
		
		private void attach_UserInClubs(UserInClub entity)
		{
			this.SendPropertyChanging();
			entity.ClimberProfile = this;
		}
		
		private void detach_UserInClubs(UserInClub entity)
		{
			this.SendPropertyChanging();
			entity.ClimberProfile = null;
		}
		
		private void attach_Places(Place entity)
		{
			this.SendPropertyChanging();
			entity.ClimberProfile = this;
		}
		
		private void detach_Places(Place entity)
		{
			this.SendPropertyChanging();
			entity.ClimberProfile = null;
		}
		
		private void attach_PartnerCalls(PartnerCall entity)
		{
			this.SendPropertyChanging();
			entity.ClimberProfile = this;
		}
		
		private void detach_PartnerCalls(PartnerCall entity)
		{
			this.SendPropertyChanging();
			entity.ClimberProfile = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="ClimbFind.ClimberProfileExtended")]
	public partial class ClimberProfileExtended : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private string _BestMoment;
		
		private string _ClimbingHistory;
		
		private string _ClimbingAmbitions;
		
		private string _FavoritePlaces;
		
		private string _PlacesIWouldLikeToClimb;
		
		private string _CurrentProjects;
		
		private string _LikeToClimb;
		
		private string _Grades;
		
		private string _CompetitionsICompeteIn;
		
		private string _RoleModels;
		
		private string _FavoriteBrands;
		
		private string _LikeAboutClimbfind;
		
		private string _DislikeAboutClimbfind;
		
		private EntityRef<ClimberProfile> _ClimberProfile;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnBestMomentChanging(string value);
    partial void OnBestMomentChanged();
    partial void OnClimbingHistoryChanging(string value);
    partial void OnClimbingHistoryChanged();
    partial void OnClimbingAmbitionsChanging(string value);
    partial void OnClimbingAmbitionsChanged();
    partial void OnFavoritePlacesChanging(string value);
    partial void OnFavoritePlacesChanged();
    partial void OnPlacesIWouldLikeToClimbChanging(string value);
    partial void OnPlacesIWouldLikeToClimbChanged();
    partial void OnCurrentProjectsChanging(string value);
    partial void OnCurrentProjectsChanged();
    partial void OnLikeToClimbChanging(string value);
    partial void OnLikeToClimbChanged();
    partial void OnGradesChanging(string value);
    partial void OnGradesChanged();
    partial void OnCompetitionsICompeteInChanging(string value);
    partial void OnCompetitionsICompeteInChanged();
    partial void OnRoleModelsChanging(string value);
    partial void OnRoleModelsChanged();
    partial void OnFavoriteBrandsChanging(string value);
    partial void OnFavoriteBrandsChanged();
    partial void OnLikeAboutClimbfindChanging(string value);
    partial void OnLikeAboutClimbfindChanged();
    partial void OnDislikeAboutClimbfindChanging(string value);
    partial void OnDislikeAboutClimbfindChanged();
    #endregion
		
		public ClimberProfileExtended()
		{
			this._ClimberProfile = default(EntityRef<ClimberProfile>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					if (this._ClimberProfile.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BestMoment", DbType="NVarChar(MAX)")]
		public string BestMoment
		{
			get
			{
				return this._BestMoment;
			}
			set
			{
				if ((this._BestMoment != value))
				{
					this.OnBestMomentChanging(value);
					this.SendPropertyChanging();
					this._BestMoment = value;
					this.SendPropertyChanged("BestMoment");
					this.OnBestMomentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClimbingHistory", DbType="NVarChar(MAX)")]
		public string ClimbingHistory
		{
			get
			{
				return this._ClimbingHistory;
			}
			set
			{
				if ((this._ClimbingHistory != value))
				{
					this.OnClimbingHistoryChanging(value);
					this.SendPropertyChanging();
					this._ClimbingHistory = value;
					this.SendPropertyChanged("ClimbingHistory");
					this.OnClimbingHistoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClimbingAmbitions", DbType="NVarChar(MAX)")]
		public string ClimbingAmbitions
		{
			get
			{
				return this._ClimbingAmbitions;
			}
			set
			{
				if ((this._ClimbingAmbitions != value))
				{
					this.OnClimbingAmbitionsChanging(value);
					this.SendPropertyChanging();
					this._ClimbingAmbitions = value;
					this.SendPropertyChanged("ClimbingAmbitions");
					this.OnClimbingAmbitionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FavoritePlaces", DbType="NVarChar(MAX)")]
		public string FavoritePlaces
		{
			get
			{
				return this._FavoritePlaces;
			}
			set
			{
				if ((this._FavoritePlaces != value))
				{
					this.OnFavoritePlacesChanging(value);
					this.SendPropertyChanging();
					this._FavoritePlaces = value;
					this.SendPropertyChanged("FavoritePlaces");
					this.OnFavoritePlacesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlacesIWouldLikeToClimb", DbType="NVarChar(MAX)")]
		public string PlacesIWouldLikeToClimb
		{
			get
			{
				return this._PlacesIWouldLikeToClimb;
			}
			set
			{
				if ((this._PlacesIWouldLikeToClimb != value))
				{
					this.OnPlacesIWouldLikeToClimbChanging(value);
					this.SendPropertyChanging();
					this._PlacesIWouldLikeToClimb = value;
					this.SendPropertyChanged("PlacesIWouldLikeToClimb");
					this.OnPlacesIWouldLikeToClimbChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentProjects", DbType="NVarChar(MAX)")]
		public string CurrentProjects
		{
			get
			{
				return this._CurrentProjects;
			}
			set
			{
				if ((this._CurrentProjects != value))
				{
					this.OnCurrentProjectsChanging(value);
					this.SendPropertyChanging();
					this._CurrentProjects = value;
					this.SendPropertyChanged("CurrentProjects");
					this.OnCurrentProjectsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LikeToClimb", DbType="NVarChar(MAX)")]
		public string LikeToClimb
		{
			get
			{
				return this._LikeToClimb;
			}
			set
			{
				if ((this._LikeToClimb != value))
				{
					this.OnLikeToClimbChanging(value);
					this.SendPropertyChanging();
					this._LikeToClimb = value;
					this.SendPropertyChanged("LikeToClimb");
					this.OnLikeToClimbChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Grades", DbType="NVarChar(MAX)")]
		public string Grades
		{
			get
			{
				return this._Grades;
			}
			set
			{
				if ((this._Grades != value))
				{
					this.OnGradesChanging(value);
					this.SendPropertyChanging();
					this._Grades = value;
					this.SendPropertyChanged("Grades");
					this.OnGradesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompetitionsICompeteIn", DbType="NVarChar(MAX)")]
		public string CompetitionsICompeteIn
		{
			get
			{
				return this._CompetitionsICompeteIn;
			}
			set
			{
				if ((this._CompetitionsICompeteIn != value))
				{
					this.OnCompetitionsICompeteInChanging(value);
					this.SendPropertyChanging();
					this._CompetitionsICompeteIn = value;
					this.SendPropertyChanged("CompetitionsICompeteIn");
					this.OnCompetitionsICompeteInChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleModels", DbType="NVarChar(MAX)")]
		public string RoleModels
		{
			get
			{
				return this._RoleModels;
			}
			set
			{
				if ((this._RoleModels != value))
				{
					this.OnRoleModelsChanging(value);
					this.SendPropertyChanging();
					this._RoleModels = value;
					this.SendPropertyChanged("RoleModels");
					this.OnRoleModelsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FavoriteBrands", DbType="NVarChar(MAX)")]
		public string FavoriteBrands
		{
			get
			{
				return this._FavoriteBrands;
			}
			set
			{
				if ((this._FavoriteBrands != value))
				{
					this.OnFavoriteBrandsChanging(value);
					this.SendPropertyChanging();
					this._FavoriteBrands = value;
					this.SendPropertyChanged("FavoriteBrands");
					this.OnFavoriteBrandsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LikeAboutClimbfind", DbType="NVarChar(MAX)")]
		public string LikeAboutClimbfind
		{
			get
			{
				return this._LikeAboutClimbfind;
			}
			set
			{
				if ((this._LikeAboutClimbfind != value))
				{
					this.OnLikeAboutClimbfindChanging(value);
					this.SendPropertyChanging();
					this._LikeAboutClimbfind = value;
					this.SendPropertyChanged("LikeAboutClimbfind");
					this.OnLikeAboutClimbfindChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DislikeAboutClimbfind", DbType="NVarChar(MAX)")]
		public string DislikeAboutClimbfind
		{
			get
			{
				return this._DislikeAboutClimbfind;
			}
			set
			{
				if ((this._DislikeAboutClimbfind != value))
				{
					this.OnDislikeAboutClimbfindChanging(value);
					this.SendPropertyChanging();
					this._DislikeAboutClimbfind = value;
					this.SendPropertyChanged("DislikeAboutClimbfind");
					this.OnDislikeAboutClimbfindChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClimberProfile_ClimberProfileExtended", Storage="_ClimberProfile", ThisKey="ID", OtherKey="ID", IsForeignKey=true)]
		public ClimberProfile ClimberProfile
		{
			get
			{
				return this._ClimberProfile.Entity;
			}
			set
			{
				ClimberProfile previousValue = this._ClimberProfile.Entity;
				if (((previousValue != value) 
							|| (this._ClimberProfile.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ClimberProfile.Entity = null;
						previousValue.ClimberProfileExtended = null;
					}
					this._ClimberProfile.Entity = value;
					if ((value != null))
					{
						value.ClimberProfileExtended = this;
						this._ID = value.ID;
					}
					else
					{
						this._ID = default(System.Guid);
					}
					this.SendPropertyChanged("ClimberProfile");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="ClimbFind.ClimberProfilePartnerStatus")]
	public partial class ClimberProfilePartnerStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private byte _ID;
		
		private string _Name;
		
		private string _Description;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(byte value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public ClimberProfilePartnerStatus()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="TinyInt NOT NULL", IsPrimaryKey=true)]
		public byte ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="ClimbFind.Club")]
	public partial class Club : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private string _ShortName;
		
		private string _Website;
		
		private string _Description;
		
		private string _LogoImageFile;
		
		private string _FriendlyUrlName;
		
		private short _CountryID;
		
		private System.Guid _CreatedByUserID;
		
		private string _ContactEmail;
		
		private string _AreaCode;
		
		private decimal _Latitude;
		
		private decimal _Longitude;
		
		private EntitySet<ClubInArea> _ClubInAreas;
		
		private EntitySet<UserInClub> _UserInClubs;
		
		private EntityRef<ClimberProfile> _ClimberProfile;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnShortNameChanging(string value);
    partial void OnShortNameChanged();
    partial void OnWebsiteChanging(string value);
    partial void OnWebsiteChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnLogoImageFileChanging(string value);
    partial void OnLogoImageFileChanged();
    partial void OnFriendlyUrlNameChanging(string value);
    partial void OnFriendlyUrlNameChanged();
    partial void OnCountryIDChanging(short value);
    partial void OnCountryIDChanged();
    partial void OnCreatedByUserIDChanging(System.Guid value);
    partial void OnCreatedByUserIDChanged();
    partial void OnContactEmailChanging(string value);
    partial void OnContactEmailChanged();
    partial void OnAreaCodeChanging(string value);
    partial void OnAreaCodeChanged();
    partial void OnLatitudeChanging(decimal value);
    partial void OnLatitudeChanged();
    partial void OnLongitudeChanging(decimal value);
    partial void OnLongitudeChanged();
    #endregion
		
		public Club()
		{
			this._ClubInAreas = new EntitySet<ClubInArea>(new Action<ClubInArea>(this.attach_ClubInAreas), new Action<ClubInArea>(this.detach_ClubInAreas));
			this._UserInClubs = new EntitySet<UserInClub>(new Action<UserInClub>(this.attach_UserInClubs), new Action<UserInClub>(this.detach_UserInClubs));
			this._ClimberProfile = default(EntityRef<ClimberProfile>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="NVarChar(100)")]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this.OnShortNameChanging(value);
					this.SendPropertyChanging();
					this._ShortName = value;
					this.SendPropertyChanged("ShortName");
					this.OnShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Website", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Website
		{
			get
			{
				return this._Website;
			}
			set
			{
				if ((this._Website != value))
				{
					this.OnWebsiteChanging(value);
					this.SendPropertyChanging();
					this._Website = value;
					this.SendPropertyChanged("Website");
					this.OnWebsiteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogoImageFile", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string LogoImageFile
		{
			get
			{
				return this._LogoImageFile;
			}
			set
			{
				if ((this._LogoImageFile != value))
				{
					this.OnLogoImageFileChanging(value);
					this.SendPropertyChanging();
					this._LogoImageFile = value;
					this.SendPropertyChanged("LogoImageFile");
					this.OnLogoImageFileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FriendlyUrlName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string FriendlyUrlName
		{
			get
			{
				return this._FriendlyUrlName;
			}
			set
			{
				if ((this._FriendlyUrlName != value))
				{
					this.OnFriendlyUrlNameChanging(value);
					this.SendPropertyChanging();
					this._FriendlyUrlName = value;
					this.SendPropertyChanged("FriendlyUrlName");
					this.OnFriendlyUrlNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryID", DbType="SmallInt NOT NULL")]
		public short CountryID
		{
			get
			{
				return this._CountryID;
			}
			set
			{
				if ((this._CountryID != value))
				{
					this.OnCountryIDChanging(value);
					this.SendPropertyChanging();
					this._CountryID = value;
					this.SendPropertyChanged("CountryID");
					this.OnCountryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid CreatedByUserID
		{
			get
			{
				return this._CreatedByUserID;
			}
			set
			{
				if ((this._CreatedByUserID != value))
				{
					if (this._ClimberProfile.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserID = value;
					this.SendPropertyChanged("CreatedByUserID");
					this.OnCreatedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactEmail", DbType="NVarChar(255)")]
		public string ContactEmail
		{
			get
			{
				return this._ContactEmail;
			}
			set
			{
				if ((this._ContactEmail != value))
				{
					this.OnContactEmailChanging(value);
					this.SendPropertyChanging();
					this._ContactEmail = value;
					this.SendPropertyChanged("ContactEmail");
					this.OnContactEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AreaCode", DbType="NVarChar(50)")]
		public string AreaCode
		{
			get
			{
				return this._AreaCode;
			}
			set
			{
				if ((this._AreaCode != value))
				{
					this.OnAreaCodeChanging(value);
					this.SendPropertyChanging();
					this._AreaCode = value;
					this.SendPropertyChanged("AreaCode");
					this.OnAreaCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Latitude", DbType="Decimal(18,12) NOT NULL")]
		public decimal Latitude
		{
			get
			{
				return this._Latitude;
			}
			set
			{
				if ((this._Latitude != value))
				{
					this.OnLatitudeChanging(value);
					this.SendPropertyChanging();
					this._Latitude = value;
					this.SendPropertyChanged("Latitude");
					this.OnLatitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Longitude", DbType="Decimal(18,12) NOT NULL")]
		public decimal Longitude
		{
			get
			{
				return this._Longitude;
			}
			set
			{
				if ((this._Longitude != value))
				{
					this.OnLongitudeChanging(value);
					this.SendPropertyChanging();
					this._Longitude = value;
					this.SendPropertyChanged("Longitude");
					this.OnLongitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Club_ClubInArea", Storage="_ClubInAreas", ThisKey="ID", OtherKey="ClubID")]
		public EntitySet<ClubInArea> ClubInAreas
		{
			get
			{
				return this._ClubInAreas;
			}
			set
			{
				this._ClubInAreas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Club_UserInClub", Storage="_UserInClubs", ThisKey="ID", OtherKey="ClubID")]
		public EntitySet<UserInClub> UserInClubs
		{
			get
			{
				return this._UserInClubs;
			}
			set
			{
				this._UserInClubs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClimberProfile_Club", Storage="_ClimberProfile", ThisKey="CreatedByUserID", OtherKey="ID", IsForeignKey=true)]
		public ClimberProfile ClimberProfile
		{
			get
			{
				return this._ClimberProfile.Entity;
			}
			set
			{
				ClimberProfile previousValue = this._ClimberProfile.Entity;
				if (((previousValue != value) 
							|| (this._ClimberProfile.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ClimberProfile.Entity = null;
						previousValue.Clubs.Remove(this);
					}
					this._ClimberProfile.Entity = value;
					if ((value != null))
					{
						value.Clubs.Add(this);
						this._CreatedByUserID = value.ID;
					}
					else
					{
						this._CreatedByUserID = default(System.Guid);
					}
					this.SendPropertyChanged("ClimberProfile");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ClubInAreas(ClubInArea entity)
		{
			this.SendPropertyChanging();
			entity.Club = this;
		}
		
		private void detach_ClubInAreas(ClubInArea entity)
		{
			this.SendPropertyChanging();
			entity.Club = null;
		}
		
		private void attach_UserInClubs(UserInClub entity)
		{
			this.SendPropertyChanging();
			entity.Club = this;
		}
		
		private void detach_UserInClubs(UserInClub entity)
		{
			this.SendPropertyChanging();
			entity.Club = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="ClimbFind.ClubInArea")]
	public partial class ClubInArea : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ClubID;
		
		private int _AreaTagID;
		
		private EntityRef<AreaTag> _AreaTag;
		
		private EntityRef<Club> _Club;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnClubIDChanging(int value);
    partial void OnClubIDChanged();
    partial void OnAreaTagIDChanging(int value);
    partial void OnAreaTagIDChanged();
    #endregion
		
		public ClubInArea()
		{
			this._AreaTag = default(EntityRef<AreaTag>);
			this._Club = default(EntityRef<Club>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClubID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ClubID
		{
			get
			{
				return this._ClubID;
			}
			set
			{
				if ((this._ClubID != value))
				{
					if (this._Club.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClubIDChanging(value);
					this.SendPropertyChanging();
					this._ClubID = value;
					this.SendPropertyChanged("ClubID");
					this.OnClubIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AreaTagID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int AreaTagID
		{
			get
			{
				return this._AreaTagID;
			}
			set
			{
				if ((this._AreaTagID != value))
				{
					if (this._AreaTag.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAreaTagIDChanging(value);
					this.SendPropertyChanging();
					this._AreaTagID = value;
					this.SendPropertyChanged("AreaTagID");
					this.OnAreaTagIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AreaTag_ClubInArea", Storage="_AreaTag", ThisKey="AreaTagID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public AreaTag AreaTag
		{
			get
			{
				return this._AreaTag.Entity;
			}
			set
			{
				AreaTag previousValue = this._AreaTag.Entity;
				if (((previousValue != value) 
							|| (this._AreaTag.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AreaTag.Entity = null;
						previousValue.ClubInAreas.Remove(this);
					}
					this._AreaTag.Entity = value;
					if ((value != null))
					{
						value.ClubInAreas.Add(this);
						this._AreaTagID = value.ID;
					}
					else
					{
						this._AreaTagID = default(int);
					}
					this.SendPropertyChanged("AreaTag");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Club_ClubInArea", Storage="_Club", ThisKey="ClubID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Club Club
		{
			get
			{
				return this._Club.Entity;
			}
			set
			{
				Club previousValue = this._Club.Entity;
				if (((previousValue != value) 
							|| (this._Club.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Club.Entity = null;
						previousValue.ClubInAreas.Remove(this);
					}
					this._Club.Entity = value;
					if ((value != null))
					{
						value.ClubInAreas.Add(this);
						this._ClubID = value.ID;
					}
					else
					{
						this._ClubID = default(int);
					}
					this.SendPropertyChanged("Club");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="ClimbFind.Competition")]
	public partial class Competition : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.DateTime _Date;
		
		private string _FriendlyUrl;
		
		private string _Location;
		
		private string _ReportedBy;
		
		private string _ContentDirectory;
		
		private string _ArticleHeading;
		
		private string _ArticleTextHtml;
		
		private string _ArticleMainPhoto1;
		
		private string _ArticleMainPhoto2;
		
		private string _ArticleMainPhoto3;
		
		private string _PhotoHeading1;
		
		private string _PhotoHeading2;
		
		private string _MetaDescription;
		
		private string _MetaKeywords;
		
		private System.Nullable<System.Guid> _MessageBoardID;
		
		private EntityRef<MessageBoard> _MessageBoard;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnFriendlyUrlChanging(string value);
    partial void OnFriendlyUrlChanged();
    partial void OnLocationChanging(string value);
    partial void OnLocationChanged();
    partial void OnReportedByChanging(string value);
    partial void OnReportedByChanged();
    partial void OnContentDirectoryChanging(string value);
    partial void OnContentDirectoryChanged();
    partial void OnArticleHeadingChanging(string value);
    partial void OnArticleHeadingChanged();
    partial void OnArticleTextHtmlChanging(string value);
    partial void OnArticleTextHtmlChanged();
    partial void OnArticleMainPhoto1Changing(string value);
    partial void OnArticleMainPhoto1Changed();
    partial void OnArticleMainPhoto2Changing(string value);
    partial void OnArticleMainPhoto2Changed();
    partial void OnArticleMainPhoto3Changing(string value);
    partial void OnArticleMainPhoto3Changed();
    partial void OnPhotoHeading1Changing(string value);
    partial void OnPhotoHeading1Changed();
    partial void OnPhotoHeading2Changing(string value);
    partial void OnPhotoHeading2Changed();
    partial void OnMetaDescriptionChanging(string value);
    partial void OnMetaDescriptionChanged();
    partial void OnMetaKeywordsChanging(string value);
    partial void OnMetaKeywordsChanged();
    partial void OnMessageBoardIDChanging(System.Nullable<System.Guid> value);
    partial void OnMessageBoardIDChanged();
    #endregion
		
		public Competition()
		{
			this._MessageBoard = default(EntityRef<MessageBoard>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FriendlyUrl", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string FriendlyUrl
		{
			get
			{
				return this._FriendlyUrl;
			}
			set
			{
				if ((this._FriendlyUrl != value))
				{
					this.OnFriendlyUrlChanging(value);
					this.SendPropertyChanging();
					this._FriendlyUrl = value;
					this.SendPropertyChanged("FriendlyUrl");
					this.OnFriendlyUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Location", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Location
		{
			get
			{
				return this._Location;
			}
			set
			{
				if ((this._Location != value))
				{
					this.OnLocationChanging(value);
					this.SendPropertyChanging();
					this._Location = value;
					this.SendPropertyChanged("Location");
					this.OnLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReportedBy", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string ReportedBy
		{
			get
			{
				return this._ReportedBy;
			}
			set
			{
				if ((this._ReportedBy != value))
				{
					this.OnReportedByChanging(value);
					this.SendPropertyChanging();
					this._ReportedBy = value;
					this.SendPropertyChanged("ReportedBy");
					this.OnReportedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContentDirectory", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string ContentDirectory
		{
			get
			{
				return this._ContentDirectory;
			}
			set
			{
				if ((this._ContentDirectory != value))
				{
					this.OnContentDirectoryChanging(value);
					this.SendPropertyChanging();
					this._ContentDirectory = value;
					this.SendPropertyChanged("ContentDirectory");
					this.OnContentDirectoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArticleHeading", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string ArticleHeading
		{
			get
			{
				return this._ArticleHeading;
			}
			set
			{
				if ((this._ArticleHeading != value))
				{
					this.OnArticleHeadingChanging(value);
					this.SendPropertyChanging();
					this._ArticleHeading = value;
					this.SendPropertyChanged("ArticleHeading");
					this.OnArticleHeadingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArticleTextHtml", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string ArticleTextHtml
		{
			get
			{
				return this._ArticleTextHtml;
			}
			set
			{
				if ((this._ArticleTextHtml != value))
				{
					this.OnArticleTextHtmlChanging(value);
					this.SendPropertyChanging();
					this._ArticleTextHtml = value;
					this.SendPropertyChanged("ArticleTextHtml");
					this.OnArticleTextHtmlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArticleMainPhoto1", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string ArticleMainPhoto1
		{
			get
			{
				return this._ArticleMainPhoto1;
			}
			set
			{
				if ((this._ArticleMainPhoto1 != value))
				{
					this.OnArticleMainPhoto1Changing(value);
					this.SendPropertyChanging();
					this._ArticleMainPhoto1 = value;
					this.SendPropertyChanged("ArticleMainPhoto1");
					this.OnArticleMainPhoto1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArticleMainPhoto2", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string ArticleMainPhoto2
		{
			get
			{
				return this._ArticleMainPhoto2;
			}
			set
			{
				if ((this._ArticleMainPhoto2 != value))
				{
					this.OnArticleMainPhoto2Changing(value);
					this.SendPropertyChanging();
					this._ArticleMainPhoto2 = value;
					this.SendPropertyChanged("ArticleMainPhoto2");
					this.OnArticleMainPhoto2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArticleMainPhoto3", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string ArticleMainPhoto3
		{
			get
			{
				return this._ArticleMainPhoto3;
			}
			set
			{
				if ((this._ArticleMainPhoto3 != value))
				{
					this.OnArticleMainPhoto3Changing(value);
					this.SendPropertyChanging();
					this._ArticleMainPhoto3 = value;
					this.SendPropertyChanged("ArticleMainPhoto3");
					this.OnArticleMainPhoto3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhotoHeading1", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string PhotoHeading1
		{
			get
			{
				return this._PhotoHeading1;
			}
			set
			{
				if ((this._PhotoHeading1 != value))
				{
					this.OnPhotoHeading1Changing(value);
					this.SendPropertyChanging();
					this._PhotoHeading1 = value;
					this.SendPropertyChanged("PhotoHeading1");
					this.OnPhotoHeading1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhotoHeading2", DbType="NVarChar(150)")]
		public string PhotoHeading2
		{
			get
			{
				return this._PhotoHeading2;
			}
			set
			{
				if ((this._PhotoHeading2 != value))
				{
					this.OnPhotoHeading2Changing(value);
					this.SendPropertyChanging();
					this._PhotoHeading2 = value;
					this.SendPropertyChanged("PhotoHeading2");
					this.OnPhotoHeading2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MetaDescription", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string MetaDescription
		{
			get
			{
				return this._MetaDescription;
			}
			set
			{
				if ((this._MetaDescription != value))
				{
					this.OnMetaDescriptionChanging(value);
					this.SendPropertyChanging();
					this._MetaDescription = value;
					this.SendPropertyChanged("MetaDescription");
					this.OnMetaDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MetaKeywords", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string MetaKeywords
		{
			get
			{
				return this._MetaKeywords;
			}
			set
			{
				if ((this._MetaKeywords != value))
				{
					this.OnMetaKeywordsChanging(value);
					this.SendPropertyChanging();
					this._MetaKeywords = value;
					this.SendPropertyChanged("MetaKeywords");
					this.OnMetaKeywordsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MessageBoardID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> MessageBoardID
		{
			get
			{
				return this._MessageBoardID;
			}
			set
			{
				if ((this._MessageBoardID != value))
				{
					if (this._MessageBoard.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMessageBoardIDChanging(value);
					this.SendPropertyChanging();
					this._MessageBoardID = value;
					this.SendPropertyChanged("MessageBoardID");
					this.OnMessageBoardIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MessageBoard_Competition", Storage="_MessageBoard", ThisKey="MessageBoardID", OtherKey="ID", IsForeignKey=true)]
		public MessageBoard MessageBoard
		{
			get
			{
				return this._MessageBoard.Entity;
			}
			set
			{
				MessageBoard previousValue = this._MessageBoard.Entity;
				if (((previousValue != value) 
							|| (this._MessageBoard.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MessageBoard.Entity = null;
						previousValue.Competitions.Remove(this);
					}
					this._MessageBoard.Entity = value;
					if ((value != null))
					{
						value.Competitions.Add(this);
						this._MessageBoardID = value.ID;
					}
					else
					{
						this._MessageBoardID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("MessageBoard");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="ClimbFind.FeatureArticle")]
	public partial class FeatureArticle : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.DateTime _Date;
		
		private string _FriendlyUrl;
		
		private string _ReportedBy;
		
		private string _ContentDirectory;
		
		private string _ArticleHeading;
		
		private string _ArticleHtml;
		
		private string _MetaDescription;
		
		private string _MetaKeywords;
		
		private System.Nullable<System.Guid> _MessageBoardID;
		
		private EntitySet<FeatureArticlePhotoSet> _FeatureArticlePhotoSets;
		
		private EntityRef<MessageBoard> _MessageBoard;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnFriendlyUrlChanging(string value);
    partial void OnFriendlyUrlChanged();
    partial void OnReportedByChanging(string value);
    partial void OnReportedByChanged();
    partial void OnContentDirectoryChanging(string value);
    partial void OnContentDirectoryChanged();
    partial void OnArticleHeadingChanging(string value);
    partial void OnArticleHeadingChanged();
    partial void OnArticleHtmlChanging(string value);
    partial void OnArticleHtmlChanged();
    partial void OnMetaDescriptionChanging(string value);
    partial void OnMetaDescriptionChanged();
    partial void OnMetaKeywordsChanging(string value);
    partial void OnMetaKeywordsChanged();
    partial void OnMessageBoardIDChanging(System.Nullable<System.Guid> value);
    partial void OnMessageBoardIDChanged();
    #endregion
		
		public FeatureArticle()
		{
			this._FeatureArticlePhotoSets = new EntitySet<FeatureArticlePhotoSet>(new Action<FeatureArticlePhotoSet>(this.attach_FeatureArticlePhotoSets), new Action<FeatureArticlePhotoSet>(this.detach_FeatureArticlePhotoSets));
			this._MessageBoard = default(EntityRef<MessageBoard>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FriendlyUrl", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string FriendlyUrl
		{
			get
			{
				return this._FriendlyUrl;
			}
			set
			{
				if ((this._FriendlyUrl != value))
				{
					this.OnFriendlyUrlChanging(value);
					this.SendPropertyChanging();
					this._FriendlyUrl = value;
					this.SendPropertyChanged("FriendlyUrl");
					this.OnFriendlyUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReportedBy", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string ReportedBy
		{
			get
			{
				return this._ReportedBy;
			}
			set
			{
				if ((this._ReportedBy != value))
				{
					this.OnReportedByChanging(value);
					this.SendPropertyChanging();
					this._ReportedBy = value;
					this.SendPropertyChanged("ReportedBy");
					this.OnReportedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContentDirectory", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string ContentDirectory
		{
			get
			{
				return this._ContentDirectory;
			}
			set
			{
				if ((this._ContentDirectory != value))
				{
					this.OnContentDirectoryChanging(value);
					this.SendPropertyChanging();
					this._ContentDirectory = value;
					this.SendPropertyChanged("ContentDirectory");
					this.OnContentDirectoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArticleHeading", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string ArticleHeading
		{
			get
			{
				return this._ArticleHeading;
			}
			set
			{
				if ((this._ArticleHeading != value))
				{
					this.OnArticleHeadingChanging(value);
					this.SendPropertyChanging();
					this._ArticleHeading = value;
					this.SendPropertyChanged("ArticleHeading");
					this.OnArticleHeadingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArticleHtml", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string ArticleHtml
		{
			get
			{
				return this._ArticleHtml;
			}
			set
			{
				if ((this._ArticleHtml != value))
				{
					this.OnArticleHtmlChanging(value);
					this.SendPropertyChanging();
					this._ArticleHtml = value;
					this.SendPropertyChanged("ArticleHtml");
					this.OnArticleHtmlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MetaDescription", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string MetaDescription
		{
			get
			{
				return this._MetaDescription;
			}
			set
			{
				if ((this._MetaDescription != value))
				{
					this.OnMetaDescriptionChanging(value);
					this.SendPropertyChanging();
					this._MetaDescription = value;
					this.SendPropertyChanged("MetaDescription");
					this.OnMetaDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MetaKeywords", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string MetaKeywords
		{
			get
			{
				return this._MetaKeywords;
			}
			set
			{
				if ((this._MetaKeywords != value))
				{
					this.OnMetaKeywordsChanging(value);
					this.SendPropertyChanging();
					this._MetaKeywords = value;
					this.SendPropertyChanged("MetaKeywords");
					this.OnMetaKeywordsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MessageBoardID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> MessageBoardID
		{
			get
			{
				return this._MessageBoardID;
			}
			set
			{
				if ((this._MessageBoardID != value))
				{
					if (this._MessageBoard.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMessageBoardIDChanging(value);
					this.SendPropertyChanging();
					this._MessageBoardID = value;
					this.SendPropertyChanged("MessageBoardID");
					this.OnMessageBoardIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FeatureArticle_FeatureArticlePhotoSet", Storage="_FeatureArticlePhotoSets", ThisKey="ID", OtherKey="FeatureArticleID")]
		public EntitySet<FeatureArticlePhotoSet> FeatureArticlePhotoSets
		{
			get
			{
				return this._FeatureArticlePhotoSets;
			}
			set
			{
				this._FeatureArticlePhotoSets.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MessageBoard_FeatureArticle", Storage="_MessageBoard", ThisKey="MessageBoardID", OtherKey="ID", IsForeignKey=true)]
		public MessageBoard MessageBoard
		{
			get
			{
				return this._MessageBoard.Entity;
			}
			set
			{
				MessageBoard previousValue = this._MessageBoard.Entity;
				if (((previousValue != value) 
							|| (this._MessageBoard.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MessageBoard.Entity = null;
						previousValue.FeatureArticles.Remove(this);
					}
					this._MessageBoard.Entity = value;
					if ((value != null))
					{
						value.FeatureArticles.Add(this);
						this._MessageBoardID = value.ID;
					}
					else
					{
						this._MessageBoardID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("MessageBoard");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FeatureArticlePhotoSets(FeatureArticlePhotoSet entity)
		{
			this.SendPropertyChanging();
			entity.FeatureArticle = this;
		}
		
		private void detach_FeatureArticlePhotoSets(FeatureArticlePhotoSet entity)
		{
			this.SendPropertyChanging();
			entity.FeatureArticle = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="ClimbFind.FeatureArticlePhotoSet")]
	public partial class FeatureArticlePhotoSet : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private int _FeatureArticleID;
		
		private string _Title;
		
		private string _Directory;
		
		private EntityRef<FeatureArticle> _FeatureArticle;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnFeatureArticleIDChanging(int value);
    partial void OnFeatureArticleIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnDirectoryChanging(string value);
    partial void OnDirectoryChanged();
    #endregion
		
		public FeatureArticlePhotoSet()
		{
			this._FeatureArticle = default(EntityRef<FeatureArticle>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FeatureArticleID", DbType="Int NOT NULL")]
		public int FeatureArticleID
		{
			get
			{
				return this._FeatureArticleID;
			}
			set
			{
				if ((this._FeatureArticleID != value))
				{
					if (this._FeatureArticle.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFeatureArticleIDChanging(value);
					this.SendPropertyChanging();
					this._FeatureArticleID = value;
					this.SendPropertyChanged("FeatureArticleID");
					this.OnFeatureArticleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Directory", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string Directory
		{
			get
			{
				return this._Directory;
			}
			set
			{
				if ((this._Directory != value))
				{
					this.OnDirectoryChanging(value);
					this.SendPropertyChanging();
					this._Directory = value;
					this.SendPropertyChanged("Directory");
					this.OnDirectoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FeatureArticle_FeatureArticlePhotoSet", Storage="_FeatureArticle", ThisKey="FeatureArticleID", OtherKey="ID", IsForeignKey=true)]
		public FeatureArticle FeatureArticle
		{
			get
			{
				return this._FeatureArticle.Entity;
			}
			set
			{
				FeatureArticle previousValue = this._FeatureArticle.Entity;
				if (((previousValue != value) 
							|| (this._FeatureArticle.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FeatureArticle.Entity = null;
						previousValue.FeatureArticlePhotoSets.Remove(this);
					}
					this._FeatureArticle.Entity = value;
					if ((value != null))
					{
						value.FeatureArticlePhotoSets.Add(this);
						this._FeatureArticleID = value.ID;
					}
					else
					{
						this._FeatureArticleID = default(int);
					}
					this.SendPropertyChanged("FeatureArticle");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="ClimbFind.Feedback")]
	public partial class Feedback : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Guid _UserID;
		
		private bool _Published;
		
		private string _FeedbackFromUser;
		
		private string _ResponseFromAdmin;
		
		private System.DateTime _DateTimePosted;
		
		private System.Nullable<System.DateTime> _DateTimeFirstReplied;
		
		private System.Nullable<System.DateTime> _DateTimeLastReviewed;
		
		private EntityRef<aspnet_User> _aspnet_User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnUserIDChanging(System.Guid value);
    partial void OnUserIDChanged();
    partial void OnPublishedChanging(bool value);
    partial void OnPublishedChanged();
    partial void OnFeedbackFromUserChanging(string value);
    partial void OnFeedbackFromUserChanged();
    partial void OnResponseFromAdminChanging(string value);
    partial void OnResponseFromAdminChanged();
    partial void OnDateTimePostedChanging(System.DateTime value);
    partial void OnDateTimePostedChanged();
    partial void OnDateTimeFirstRepliedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateTimeFirstRepliedChanged();
    partial void OnDateTimeLastReviewedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateTimeLastReviewedChanged();
    #endregion
		
		public Feedback()
		{
			this._aspnet_User = default(EntityRef<aspnet_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._aspnet_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Published", DbType="Bit NOT NULL")]
		public bool Published
		{
			get
			{
				return this._Published;
			}
			set
			{
				if ((this._Published != value))
				{
					this.OnPublishedChanging(value);
					this.SendPropertyChanging();
					this._Published = value;
					this.SendPropertyChanged("Published");
					this.OnPublishedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FeedbackFromUser", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string FeedbackFromUser
		{
			get
			{
				return this._FeedbackFromUser;
			}
			set
			{
				if ((this._FeedbackFromUser != value))
				{
					this.OnFeedbackFromUserChanging(value);
					this.SendPropertyChanging();
					this._FeedbackFromUser = value;
					this.SendPropertyChanged("FeedbackFromUser");
					this.OnFeedbackFromUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResponseFromAdmin", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string ResponseFromAdmin
		{
			get
			{
				return this._ResponseFromAdmin;
			}
			set
			{
				if ((this._ResponseFromAdmin != value))
				{
					this.OnResponseFromAdminChanging(value);
					this.SendPropertyChanging();
					this._ResponseFromAdmin = value;
					this.SendPropertyChanged("ResponseFromAdmin");
					this.OnResponseFromAdminChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateTimePosted", DbType="SmallDateTime NOT NULL")]
		public System.DateTime DateTimePosted
		{
			get
			{
				return this._DateTimePosted;
			}
			set
			{
				if ((this._DateTimePosted != value))
				{
					this.OnDateTimePostedChanging(value);
					this.SendPropertyChanging();
					this._DateTimePosted = value;
					this.SendPropertyChanged("DateTimePosted");
					this.OnDateTimePostedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateTimeFirstReplied", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> DateTimeFirstReplied
		{
			get
			{
				return this._DateTimeFirstReplied;
			}
			set
			{
				if ((this._DateTimeFirstReplied != value))
				{
					this.OnDateTimeFirstRepliedChanging(value);
					this.SendPropertyChanging();
					this._DateTimeFirstReplied = value;
					this.SendPropertyChanged("DateTimeFirstReplied");
					this.OnDateTimeFirstRepliedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateTimeLastReviewed", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> DateTimeLastReviewed
		{
			get
			{
				return this._DateTimeLastReviewed;
			}
			set
			{
				if ((this._DateTimeLastReviewed != value))
				{
					this.OnDateTimeLastReviewedChanging(value);
					this.SendPropertyChanging();
					this._DateTimeLastReviewed = value;
					this.SendPropertyChanged("DateTimeLastReviewed");
					this.OnDateTimeLastReviewedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_Feedback", Storage="_aspnet_User", ThisKey="UserID", OtherKey="UserId", IsForeignKey=true)]
		public aspnet_User aspnet_User
		{
			get
			{
				return this._aspnet_User.Entity;
			}
			set
			{
				aspnet_User previousValue = this._aspnet_User.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_User.Entity = null;
						previousValue.Feedbacks.Remove(this);
					}
					this._aspnet_User.Entity = value;
					if ((value != null))
					{
						value.Feedbacks.Add(this);
						this._UserID = value.UserId;
					}
					else
					{
						this._UserID = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="ClimbFind.LogEvent")]
	public partial class LogEvent : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Guid _UserID;
		
		private int _EventType;
		
		private System.DateTime _EventDateTime;
		
		private string _Name;
		
		private bool _Archived;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnUserIDChanging(System.Guid value);
    partial void OnUserIDChanged();
    partial void OnEventTypeChanging(int value);
    partial void OnEventTypeChanged();
    partial void OnEventDateTimeChanging(System.DateTime value);
    partial void OnEventDateTimeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnArchivedChanging(bool value);
    partial void OnArchivedChanged();
    #endregion
		
		public LogEvent()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventType", DbType="Int NOT NULL")]
		public int EventType
		{
			get
			{
				return this._EventType;
			}
			set
			{
				if ((this._EventType != value))
				{
					this.OnEventTypeChanging(value);
					this.SendPropertyChanging();
					this._EventType = value;
					this.SendPropertyChanged("EventType");
					this.OnEventTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime EventDateTime
		{
			get
			{
				return this._EventDateTime;
			}
			set
			{
				if ((this._EventDateTime != value))
				{
					this.OnEventDateTimeChanging(value);
					this.SendPropertyChanging();
					this._EventDateTime = value;
					this.SendPropertyChanged("EventDateTime");
					this.OnEventDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Archived", DbType="Bit NOT NULL")]
		public bool Archived
		{
			get
			{
				return this._Archived;
			}
			set
			{
				if ((this._Archived != value))
				{
					this.OnArchivedChanging(value);
					this.SendPropertyChanging();
					this._Archived = value;
					this.SendPropertyChanged("Archived");
					this.OnArchivedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="ClimbFind.LogExceptionEvent")]
	public partial class LogExceptionEvent : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<System.DateTime> _ExceptionDateTime;
		
		private System.Nullable<System.Guid> _UserID;
		
		private string _UserEmail;
		
		private string _IP;
		
		private string _Url;
		
		private string _Browser;
		
		private string _InnerMessage;
		
		private string _StackTrace;
		
		private bool _Reviewed;
		
		private bool _Archived;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnExceptionDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnExceptionDateTimeChanged();
    partial void OnUserIDChanging(System.Nullable<System.Guid> value);
    partial void OnUserIDChanged();
    partial void OnUserEmailChanging(string value);
    partial void OnUserEmailChanged();
    partial void OnIPChanging(string value);
    partial void OnIPChanged();
    partial void OnUrlChanging(string value);
    partial void OnUrlChanged();
    partial void OnBrowserChanging(string value);
    partial void OnBrowserChanged();
    partial void OnInnerMessageChanging(string value);
    partial void OnInnerMessageChanged();
    partial void OnStackTraceChanging(string value);
    partial void OnStackTraceChanged();
    partial void OnReviewedChanging(bool value);
    partial void OnReviewedChanged();
    partial void OnArchivedChanging(bool value);
    partial void OnArchivedChanged();
    #endregion
		
		public LogExceptionEvent()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExceptionDateTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> ExceptionDateTime
		{
			get
			{
				return this._ExceptionDateTime;
			}
			set
			{
				if ((this._ExceptionDateTime != value))
				{
					this.OnExceptionDateTimeChanging(value);
					this.SendPropertyChanging();
					this._ExceptionDateTime = value;
					this.SendPropertyChanged("ExceptionDateTime");
					this.OnExceptionDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserEmail", DbType="NVarChar(MAX)")]
		public string UserEmail
		{
			get
			{
				return this._UserEmail;
			}
			set
			{
				if ((this._UserEmail != value))
				{
					this.OnUserEmailChanging(value);
					this.SendPropertyChanging();
					this._UserEmail = value;
					this.SendPropertyChanged("UserEmail");
					this.OnUserEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IP", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string IP
		{
			get
			{
				return this._IP;
			}
			set
			{
				if ((this._IP != value))
				{
					this.OnIPChanging(value);
					this.SendPropertyChanging();
					this._IP = value;
					this.SendPropertyChanged("IP");
					this.OnIPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Url", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Url
		{
			get
			{
				return this._Url;
			}
			set
			{
				if ((this._Url != value))
				{
					this.OnUrlChanging(value);
					this.SendPropertyChanging();
					this._Url = value;
					this.SendPropertyChanged("Url");
					this.OnUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Browser", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Browser
		{
			get
			{
				return this._Browser;
			}
			set
			{
				if ((this._Browser != value))
				{
					this.OnBrowserChanging(value);
					this.SendPropertyChanging();
					this._Browser = value;
					this.SendPropertyChanged("Browser");
					this.OnBrowserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InnerMessage", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string InnerMessage
		{
			get
			{
				return this._InnerMessage;
			}
			set
			{
				if ((this._InnerMessage != value))
				{
					this.OnInnerMessageChanging(value);
					this.SendPropertyChanging();
					this._InnerMessage = value;
					this.SendPropertyChanged("InnerMessage");
					this.OnInnerMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StackTrace", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string StackTrace
		{
			get
			{
				return this._StackTrace;
			}
			set
			{
				if ((this._StackTrace != value))
				{
					this.OnStackTraceChanging(value);
					this.SendPropertyChanging();
					this._StackTrace = value;
					this.SendPropertyChanged("StackTrace");
					this.OnStackTraceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reviewed", DbType="Bit NOT NULL")]
		public bool Reviewed
		{
			get
			{
				return this._Reviewed;
			}
			set
			{
				if ((this._Reviewed != value))
				{
					this.OnReviewedChanging(value);
					this.SendPropertyChanging();
					this._Reviewed = value;
					this.SendPropertyChanged("Reviewed");
					this.OnReviewedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Archived", DbType="Bit NOT NULL")]
		public bool Archived
		{
			get
			{
				return this._Archived;
			}
			set
			{
				if ((this._Archived != value))
				{
					this.OnArchivedChanging(value);
					this.SendPropertyChanging();
					this._Archived = value;
					this.SendPropertyChanged("Archived");
					this.OnArchivedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="ClimbFind.MainNewsFeedItem")]
	public partial class MainNewsFeedItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.DateTime _ID;
		
		private string _ItemHtml;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.DateTime value);
    partial void OnIDChanged();
    partial void OnItemHtmlChanging(string value);
    partial void OnItemHtmlChanged();
    #endregion
		
		public MainNewsFeedItem()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="SmallDateTime NOT NULL", IsPrimaryKey=true)]
		public System.DateTime ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemHtml", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string ItemHtml
		{
			get
			{
				return this._ItemHtml;
			}
			set
			{
				if ((this._ItemHtml != value))
				{
					this.OnItemHtmlChanging(value);
					this.SendPropertyChanging();
					this._ItemHtml = value;
					this.SendPropertyChanged("ItemHtml");
					this.OnItemHtmlChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="ClimbFind.MediaShare")]
	public partial class MediaShare : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private int _Type;
		
		private string _Uri;
		
		private string _Name;
		
		private string _Description;
		
		private System.Guid _SubmittedByUserID;
		
		private System.DateTime _SubmittedDateTime;
		
		private System.Guid _MessageBoardID;
		
		private EntitySet<OutdoorCragMediaShare> _OutdoorCragMediaShares;
		
		private EntitySet<PlaceMediaShare> _PlaceMediaShares;
		
		private EntityRef<ClimberProfile> _ClimberProfile;
		
		private EntityRef<MessageBoard> _MessageBoard;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnTypeChanging(int value);
    partial void OnTypeChanged();
    partial void OnUriChanging(string value);
    partial void OnUriChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnSubmittedByUserIDChanging(System.Guid value);
    partial void OnSubmittedByUserIDChanged();
    partial void OnSubmittedDateTimeChanging(System.DateTime value);
    partial void OnSubmittedDateTimeChanged();
    partial void OnMessageBoardIDChanging(System.Guid value);
    partial void OnMessageBoardIDChanged();
    #endregion
		
		public MediaShare()
		{
			this._OutdoorCragMediaShares = new EntitySet<OutdoorCragMediaShare>(new Action<OutdoorCragMediaShare>(this.attach_OutdoorCragMediaShares), new Action<OutdoorCragMediaShare>(this.detach_OutdoorCragMediaShares));
			this._PlaceMediaShares = new EntitySet<PlaceMediaShare>(new Action<PlaceMediaShare>(this.attach_PlaceMediaShares), new Action<PlaceMediaShare>(this.detach_PlaceMediaShares));
			this._ClimberProfile = default(EntityRef<ClimberProfile>);
			this._MessageBoard = default(EntityRef<MessageBoard>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int NOT NULL")]
		public int Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Uri", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Uri
		{
			get
			{
				return this._Uri;
			}
			set
			{
				if ((this._Uri != value))
				{
					this.OnUriChanging(value);
					this.SendPropertyChanging();
					this._Uri = value;
					this.SendPropertyChanged("Uri");
					this.OnUriChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubmittedByUserID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid SubmittedByUserID
		{
			get
			{
				return this._SubmittedByUserID;
			}
			set
			{
				if ((this._SubmittedByUserID != value))
				{
					if (this._ClimberProfile.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSubmittedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._SubmittedByUserID = value;
					this.SendPropertyChanged("SubmittedByUserID");
					this.OnSubmittedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubmittedDateTime", DbType="SmallDateTime NOT NULL")]
		public System.DateTime SubmittedDateTime
		{
			get
			{
				return this._SubmittedDateTime;
			}
			set
			{
				if ((this._SubmittedDateTime != value))
				{
					this.OnSubmittedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._SubmittedDateTime = value;
					this.SendPropertyChanged("SubmittedDateTime");
					this.OnSubmittedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MessageBoardID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid MessageBoardID
		{
			get
			{
				return this._MessageBoardID;
			}
			set
			{
				if ((this._MessageBoardID != value))
				{
					if (this._MessageBoard.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMessageBoardIDChanging(value);
					this.SendPropertyChanging();
					this._MessageBoardID = value;
					this.SendPropertyChanged("MessageBoardID");
					this.OnMessageBoardIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MediaShare_OutdoorCragMediaShare", Storage="_OutdoorCragMediaShares", ThisKey="ID", OtherKey="MediaShareID")]
		public EntitySet<OutdoorCragMediaShare> OutdoorCragMediaShares
		{
			get
			{
				return this._OutdoorCragMediaShares;
			}
			set
			{
				this._OutdoorCragMediaShares.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MediaShare_PlaceMediaShare", Storage="_PlaceMediaShares", ThisKey="ID", OtherKey="MediaShareID")]
		public EntitySet<PlaceMediaShare> PlaceMediaShares
		{
			get
			{
				return this._PlaceMediaShares;
			}
			set
			{
				this._PlaceMediaShares.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClimberProfile_MediaShare", Storage="_ClimberProfile", ThisKey="SubmittedByUserID", OtherKey="ID", IsForeignKey=true)]
		public ClimberProfile ClimberProfile
		{
			get
			{
				return this._ClimberProfile.Entity;
			}
			set
			{
				ClimberProfile previousValue = this._ClimberProfile.Entity;
				if (((previousValue != value) 
							|| (this._ClimberProfile.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ClimberProfile.Entity = null;
						previousValue.MediaShares.Remove(this);
					}
					this._ClimberProfile.Entity = value;
					if ((value != null))
					{
						value.MediaShares.Add(this);
						this._SubmittedByUserID = value.ID;
					}
					else
					{
						this._SubmittedByUserID = default(System.Guid);
					}
					this.SendPropertyChanged("ClimberProfile");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MessageBoard_MediaShare", Storage="_MessageBoard", ThisKey="MessageBoardID", OtherKey="ID", IsForeignKey=true)]
		public MessageBoard MessageBoard
		{
			get
			{
				return this._MessageBoard.Entity;
			}
			set
			{
				MessageBoard previousValue = this._MessageBoard.Entity;
				if (((previousValue != value) 
							|| (this._MessageBoard.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MessageBoard.Entity = null;
						previousValue.MediaShares.Remove(this);
					}
					this._MessageBoard.Entity = value;
					if ((value != null))
					{
						value.MediaShares.Add(this);
						this._MessageBoardID = value.ID;
					}
					else
					{
						this._MessageBoardID = default(System.Guid);
					}
					this.SendPropertyChanged("MessageBoard");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OutdoorCragMediaShares(OutdoorCragMediaShare entity)
		{
			this.SendPropertyChanging();
			entity.MediaShare = this;
		}
		
		private void detach_OutdoorCragMediaShares(OutdoorCragMediaShare entity)
		{
			this.SendPropertyChanging();
			entity.MediaShare = null;
		}
		
		private void attach_PlaceMediaShares(PlaceMediaShare entity)
		{
			this.SendPropertyChanging();
			entity.MediaShare = this;
		}
		
		private void detach_PlaceMediaShares(PlaceMediaShare entity)
		{
			this.SendPropertyChanging();
			entity.MediaShare = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="ClimbFind.MessageBoard")]
	public partial class MessageBoard : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private bool _IsVisible;
		
		private EntitySet<ClimberProfile> _ClimberProfiles;
		
		private EntitySet<Competition> _Competitions;
		
		private EntitySet<FeatureArticle> _FeatureArticles;
		
		private EntitySet<MediaShare> _MediaShares;
		
		private EntitySet<MessageBoardMessage> _MessageBoardMessages;
		
		private EntitySet<PlaceOutdoorCrag> _PlaceOutdoorCrags;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnIsVisibleChanging(bool value);
    partial void OnIsVisibleChanged();
    #endregion
		
		public MessageBoard()
		{
			this._ClimberProfiles = new EntitySet<ClimberProfile>(new Action<ClimberProfile>(this.attach_ClimberProfiles), new Action<ClimberProfile>(this.detach_ClimberProfiles));
			this._Competitions = new EntitySet<Competition>(new Action<Competition>(this.attach_Competitions), new Action<Competition>(this.detach_Competitions));
			this._FeatureArticles = new EntitySet<FeatureArticle>(new Action<FeatureArticle>(this.attach_FeatureArticles), new Action<FeatureArticle>(this.detach_FeatureArticles));
			this._MediaShares = new EntitySet<MediaShare>(new Action<MediaShare>(this.attach_MediaShares), new Action<MediaShare>(this.detach_MediaShares));
			this._MessageBoardMessages = new EntitySet<MessageBoardMessage>(new Action<MessageBoardMessage>(this.attach_MessageBoardMessages), new Action<MessageBoardMessage>(this.detach_MessageBoardMessages));
			this._PlaceOutdoorCrags = new EntitySet<PlaceOutdoorCrag>(new Action<PlaceOutdoorCrag>(this.attach_PlaceOutdoorCrags), new Action<PlaceOutdoorCrag>(this.detach_PlaceOutdoorCrags));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsVisible", DbType="Bit NOT NULL")]
		public bool IsVisible
		{
			get
			{
				return this._IsVisible;
			}
			set
			{
				if ((this._IsVisible != value))
				{
					this.OnIsVisibleChanging(value);
					this.SendPropertyChanging();
					this._IsVisible = value;
					this.SendPropertyChanged("IsVisible");
					this.OnIsVisibleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MessageBoard_ClimberProfile", Storage="_ClimberProfiles", ThisKey="ID", OtherKey="MessageBoardID")]
		public EntitySet<ClimberProfile> ClimberProfiles
		{
			get
			{
				return this._ClimberProfiles;
			}
			set
			{
				this._ClimberProfiles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MessageBoard_Competition", Storage="_Competitions", ThisKey="ID", OtherKey="MessageBoardID")]
		public EntitySet<Competition> Competitions
		{
			get
			{
				return this._Competitions;
			}
			set
			{
				this._Competitions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MessageBoard_FeatureArticle", Storage="_FeatureArticles", ThisKey="ID", OtherKey="MessageBoardID")]
		public EntitySet<FeatureArticle> FeatureArticles
		{
			get
			{
				return this._FeatureArticles;
			}
			set
			{
				this._FeatureArticles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MessageBoard_MediaShare", Storage="_MediaShares", ThisKey="ID", OtherKey="MessageBoardID")]
		public EntitySet<MediaShare> MediaShares
		{
			get
			{
				return this._MediaShares;
			}
			set
			{
				this._MediaShares.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MessageBoard_MessageBoardMessage", Storage="_MessageBoardMessages", ThisKey="ID", OtherKey="MessageBoardID")]
		public EntitySet<MessageBoardMessage> MessageBoardMessages
		{
			get
			{
				return this._MessageBoardMessages;
			}
			set
			{
				this._MessageBoardMessages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MessageBoard_PlaceOutdoorCrag", Storage="_PlaceOutdoorCrags", ThisKey="ID", OtherKey="MessageBoardID")]
		public EntitySet<PlaceOutdoorCrag> PlaceOutdoorCrags
		{
			get
			{
				return this._PlaceOutdoorCrags;
			}
			set
			{
				this._PlaceOutdoorCrags.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ClimberProfiles(ClimberProfile entity)
		{
			this.SendPropertyChanging();
			entity.MessageBoard = this;
		}
		
		private void detach_ClimberProfiles(ClimberProfile entity)
		{
			this.SendPropertyChanging();
			entity.MessageBoard = null;
		}
		
		private void attach_Competitions(Competition entity)
		{
			this.SendPropertyChanging();
			entity.MessageBoard = this;
		}
		
		private void detach_Competitions(Competition entity)
		{
			this.SendPropertyChanging();
			entity.MessageBoard = null;
		}
		
		private void attach_FeatureArticles(FeatureArticle entity)
		{
			this.SendPropertyChanging();
			entity.MessageBoard = this;
		}
		
		private void detach_FeatureArticles(FeatureArticle entity)
		{
			this.SendPropertyChanging();
			entity.MessageBoard = null;
		}
		
		private void attach_MediaShares(MediaShare entity)
		{
			this.SendPropertyChanging();
			entity.MessageBoard = this;
		}
		
		private void detach_MediaShares(MediaShare entity)
		{
			this.SendPropertyChanging();
			entity.MessageBoard = null;
		}
		
		private void attach_MessageBoardMessages(MessageBoardMessage entity)
		{
			this.SendPropertyChanging();
			entity.MessageBoard = this;
		}
		
		private void detach_MessageBoardMessages(MessageBoardMessage entity)
		{
			this.SendPropertyChanging();
			entity.MessageBoard = null;
		}
		
		private void attach_PlaceOutdoorCrags(PlaceOutdoorCrag entity)
		{
			this.SendPropertyChanging();
			entity.MessageBoard = this;
		}
		
		private void detach_PlaceOutdoorCrags(PlaceOutdoorCrag entity)
		{
			this.SendPropertyChanging();
			entity.MessageBoard = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="ClimbFind.MessageBoardMessage")]
	public partial class MessageBoardMessage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Guid _MessageBoardID;
		
		private System.Guid _UserID;
		
		private string _Message;
		
		private System.DateTime _PostedDateTime;
		
		private EntityRef<ClimberProfile> _ClimberProfile;
		
		private EntityRef<MessageBoard> _MessageBoard;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnMessageBoardIDChanging(System.Guid value);
    partial void OnMessageBoardIDChanged();
    partial void OnUserIDChanging(System.Guid value);
    partial void OnUserIDChanged();
    partial void OnMessageChanging(string value);
    partial void OnMessageChanged();
    partial void OnPostedDateTimeChanging(System.DateTime value);
    partial void OnPostedDateTimeChanged();
    #endregion
		
		public MessageBoardMessage()
		{
			this._ClimberProfile = default(EntityRef<ClimberProfile>);
			this._MessageBoard = default(EntityRef<MessageBoard>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MessageBoardID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid MessageBoardID
		{
			get
			{
				return this._MessageBoardID;
			}
			set
			{
				if ((this._MessageBoardID != value))
				{
					if (this._MessageBoard.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMessageBoardIDChanging(value);
					this.SendPropertyChanging();
					this._MessageBoardID = value;
					this.SendPropertyChanged("MessageBoardID");
					this.OnMessageBoardIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._ClimberProfile.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this.OnMessageChanging(value);
					this.SendPropertyChanging();
					this._Message = value;
					this.SendPropertyChanged("Message");
					this.OnMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostedDateTime", DbType="SmallDateTime NOT NULL")]
		public System.DateTime PostedDateTime
		{
			get
			{
				return this._PostedDateTime;
			}
			set
			{
				if ((this._PostedDateTime != value))
				{
					this.OnPostedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._PostedDateTime = value;
					this.SendPropertyChanged("PostedDateTime");
					this.OnPostedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClimberProfile_MessageBoardMessage", Storage="_ClimberProfile", ThisKey="UserID", OtherKey="ID", IsForeignKey=true)]
		public ClimberProfile ClimberProfile
		{
			get
			{
				return this._ClimberProfile.Entity;
			}
			set
			{
				ClimberProfile previousValue = this._ClimberProfile.Entity;
				if (((previousValue != value) 
							|| (this._ClimberProfile.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ClimberProfile.Entity = null;
						previousValue.MessageBoardMessages.Remove(this);
					}
					this._ClimberProfile.Entity = value;
					if ((value != null))
					{
						value.MessageBoardMessages.Add(this);
						this._UserID = value.ID;
					}
					else
					{
						this._UserID = default(System.Guid);
					}
					this.SendPropertyChanged("ClimberProfile");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MessageBoard_MessageBoardMessage", Storage="_MessageBoard", ThisKey="MessageBoardID", OtherKey="ID", IsForeignKey=true)]
		public MessageBoard MessageBoard
		{
			get
			{
				return this._MessageBoard.Entity;
			}
			set
			{
				MessageBoard previousValue = this._MessageBoard.Entity;
				if (((previousValue != value) 
							|| (this._MessageBoard.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MessageBoard.Entity = null;
						previousValue.MessageBoardMessages.Remove(this);
					}
					this._MessageBoard.Entity = value;
					if ((value != null))
					{
						value.MessageBoardMessages.Add(this);
						this._MessageBoardID = value.ID;
					}
					else
					{
						this._MessageBoardID = default(System.Guid);
					}
					this.SendPropertyChanged("MessageBoard");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="ClimbFind.OutdoorCragMediaShare")]
	public partial class OutdoorCragMediaShare : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _OutdoorCragID;
		
		private System.Guid _MediaShareID;
		
		private EntityRef<MediaShare> _MediaShare;
		
		private EntityRef<PlaceOutdoorCrag> _PlaceOutdoorCrag;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOutdoorCragIDChanging(System.Guid value);
    partial void OnOutdoorCragIDChanged();
    partial void OnMediaShareIDChanging(System.Guid value);
    partial void OnMediaShareIDChanged();
    #endregion
		
		public OutdoorCragMediaShare()
		{
			this._MediaShare = default(EntityRef<MediaShare>);
			this._PlaceOutdoorCrag = default(EntityRef<PlaceOutdoorCrag>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OutdoorCragID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid OutdoorCragID
		{
			get
			{
				return this._OutdoorCragID;
			}
			set
			{
				if ((this._OutdoorCragID != value))
				{
					if (this._PlaceOutdoorCrag.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOutdoorCragIDChanging(value);
					this.SendPropertyChanging();
					this._OutdoorCragID = value;
					this.SendPropertyChanged("OutdoorCragID");
					this.OnOutdoorCragIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MediaShareID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid MediaShareID
		{
			get
			{
				return this._MediaShareID;
			}
			set
			{
				if ((this._MediaShareID != value))
				{
					if (this._MediaShare.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMediaShareIDChanging(value);
					this.SendPropertyChanging();
					this._MediaShareID = value;
					this.SendPropertyChanged("MediaShareID");
					this.OnMediaShareIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MediaShare_OutdoorCragMediaShare", Storage="_MediaShare", ThisKey="MediaShareID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public MediaShare MediaShare
		{
			get
			{
				return this._MediaShare.Entity;
			}
			set
			{
				MediaShare previousValue = this._MediaShare.Entity;
				if (((previousValue != value) 
							|| (this._MediaShare.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MediaShare.Entity = null;
						previousValue.OutdoorCragMediaShares.Remove(this);
					}
					this._MediaShare.Entity = value;
					if ((value != null))
					{
						value.OutdoorCragMediaShares.Add(this);
						this._MediaShareID = value.ID;
					}
					else
					{
						this._MediaShareID = default(System.Guid);
					}
					this.SendPropertyChanged("MediaShare");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PlaceOutdoorCrag_OutdoorCragMediaShare", Storage="_PlaceOutdoorCrag", ThisKey="OutdoorCragID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public PlaceOutdoorCrag PlaceOutdoorCrag
		{
			get
			{
				return this._PlaceOutdoorCrag.Entity;
			}
			set
			{
				PlaceOutdoorCrag previousValue = this._PlaceOutdoorCrag.Entity;
				if (((previousValue != value) 
							|| (this._PlaceOutdoorCrag.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PlaceOutdoorCrag.Entity = null;
						previousValue.OutdoorCragMediaShares.Remove(this);
					}
					this._PlaceOutdoorCrag.Entity = value;
					if ((value != null))
					{
						value.OutdoorCragMediaShares.Add(this);
						this._OutdoorCragID = value.ID;
					}
					else
					{
						this._OutdoorCragID = default(System.Guid);
					}
					this.SendPropertyChanged("PlaceOutdoorCrag");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="ClimbFind.PartnerCallPlace")]
	public partial class PartnerCallPlace : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _PartnerCallID;
		
		private int _PlaceID;
		
		private EntityRef<Place> _Place;
		
		private EntityRef<PartnerCall> _PartnerCall;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPartnerCallIDChanging(System.Guid value);
    partial void OnPartnerCallIDChanged();
    partial void OnPlaceIDChanging(int value);
    partial void OnPlaceIDChanged();
    #endregion
		
		public PartnerCallPlace()
		{
			this._Place = default(EntityRef<Place>);
			this._PartnerCall = default(EntityRef<PartnerCall>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartnerCallID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid PartnerCallID
		{
			get
			{
				return this._PartnerCallID;
			}
			set
			{
				if ((this._PartnerCallID != value))
				{
					if (this._PartnerCall.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPartnerCallIDChanging(value);
					this.SendPropertyChanging();
					this._PartnerCallID = value;
					this.SendPropertyChanged("PartnerCallID");
					this.OnPartnerCallIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlaceID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int PlaceID
		{
			get
			{
				return this._PlaceID;
			}
			set
			{
				if ((this._PlaceID != value))
				{
					if (this._Place.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPlaceIDChanging(value);
					this.SendPropertyChanging();
					this._PlaceID = value;
					this.SendPropertyChanged("PlaceID");
					this.OnPlaceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Place_PartnerCallPlace", Storage="_Place", ThisKey="PlaceID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Place Place
		{
			get
			{
				return this._Place.Entity;
			}
			set
			{
				Place previousValue = this._Place.Entity;
				if (((previousValue != value) 
							|| (this._Place.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Place.Entity = null;
						previousValue.PartnerCallPlaces.Remove(this);
					}
					this._Place.Entity = value;
					if ((value != null))
					{
						value.PartnerCallPlaces.Add(this);
						this._PlaceID = value.ID;
					}
					else
					{
						this._PlaceID = default(int);
					}
					this.SendPropertyChanged("Place");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PartnerCall_PartnerCallPlace", Storage="_PartnerCall", ThisKey="PartnerCallID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public PartnerCall PartnerCall
		{
			get
			{
				return this._PartnerCall.Entity;
			}
			set
			{
				PartnerCall previousValue = this._PartnerCall.Entity;
				if (((previousValue != value) 
							|| (this._PartnerCall.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PartnerCall.Entity = null;
						previousValue.PartnerCallPlaces.Remove(this);
					}
					this._PartnerCall.Entity = value;
					if ((value != null))
					{
						value.PartnerCallPlaces.Add(this);
						this._PartnerCallID = value.ID;
					}
					else
					{
						this._PartnerCallID = default(System.Guid);
					}
					this.SendPropertyChanged("PartnerCall");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="ClimbFind.PartnerCallReply")]
	public partial class PartnerCallReply : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Guid _PartnerCallID;
		
		private System.Guid _ReplyingUserID;
		
		private System.DateTime _ReplyDateTime;
		
		private string _Message;
		
		private bool _Unread;
		
		private EntityRef<ClimberProfile> _ClimberProfile;
		
		private EntityRef<PartnerCall> _PartnerCall;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnPartnerCallIDChanging(System.Guid value);
    partial void OnPartnerCallIDChanged();
    partial void OnReplyingUserIDChanging(System.Guid value);
    partial void OnReplyingUserIDChanged();
    partial void OnReplyDateTimeChanging(System.DateTime value);
    partial void OnReplyDateTimeChanged();
    partial void OnMessageChanging(string value);
    partial void OnMessageChanged();
    partial void OnUnreadChanging(bool value);
    partial void OnUnreadChanged();
    #endregion
		
		public PartnerCallReply()
		{
			this._ClimberProfile = default(EntityRef<ClimberProfile>);
			this._PartnerCall = default(EntityRef<PartnerCall>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartnerCallID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid PartnerCallID
		{
			get
			{
				return this._PartnerCallID;
			}
			set
			{
				if ((this._PartnerCallID != value))
				{
					if (this._PartnerCall.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPartnerCallIDChanging(value);
					this.SendPropertyChanging();
					this._PartnerCallID = value;
					this.SendPropertyChanged("PartnerCallID");
					this.OnPartnerCallIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReplyingUserID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ReplyingUserID
		{
			get
			{
				return this._ReplyingUserID;
			}
			set
			{
				if ((this._ReplyingUserID != value))
				{
					if (this._ClimberProfile.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnReplyingUserIDChanging(value);
					this.SendPropertyChanging();
					this._ReplyingUserID = value;
					this.SendPropertyChanged("ReplyingUserID");
					this.OnReplyingUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReplyDateTime", DbType="SmallDateTime NOT NULL")]
		public System.DateTime ReplyDateTime
		{
			get
			{
				return this._ReplyDateTime;
			}
			set
			{
				if ((this._ReplyDateTime != value))
				{
					this.OnReplyDateTimeChanging(value);
					this.SendPropertyChanging();
					this._ReplyDateTime = value;
					this.SendPropertyChanged("ReplyDateTime");
					this.OnReplyDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this.OnMessageChanging(value);
					this.SendPropertyChanging();
					this._Message = value;
					this.SendPropertyChanged("Message");
					this.OnMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Unread", DbType="Bit NOT NULL")]
		public bool Unread
		{
			get
			{
				return this._Unread;
			}
			set
			{
				if ((this._Unread != value))
				{
					this.OnUnreadChanging(value);
					this.SendPropertyChanging();
					this._Unread = value;
					this.SendPropertyChanged("Unread");
					this.OnUnreadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClimberProfile_PartnerCallReply", Storage="_ClimberProfile", ThisKey="ReplyingUserID", OtherKey="ID", IsForeignKey=true)]
		public ClimberProfile ClimberProfile
		{
			get
			{
				return this._ClimberProfile.Entity;
			}
			set
			{
				ClimberProfile previousValue = this._ClimberProfile.Entity;
				if (((previousValue != value) 
							|| (this._ClimberProfile.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ClimberProfile.Entity = null;
						previousValue.PartnerCallReplies.Remove(this);
					}
					this._ClimberProfile.Entity = value;
					if ((value != null))
					{
						value.PartnerCallReplies.Add(this);
						this._ReplyingUserID = value.ID;
					}
					else
					{
						this._ReplyingUserID = default(System.Guid);
					}
					this.SendPropertyChanged("ClimberProfile");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PartnerCall_PartnerCallReply", Storage="_PartnerCall", ThisKey="PartnerCallID", OtherKey="ID", IsForeignKey=true)]
		public PartnerCall PartnerCall
		{
			get
			{
				return this._PartnerCall.Entity;
			}
			set
			{
				PartnerCall previousValue = this._PartnerCall.Entity;
				if (((previousValue != value) 
							|| (this._PartnerCall.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PartnerCall.Entity = null;
						previousValue.PartnerCallReplies.Remove(this);
					}
					this._PartnerCall.Entity = value;
					if ((value != null))
					{
						value.PartnerCallReplies.Add(this);
						this._PartnerCallID = value.ID;
					}
					else
					{
						this._PartnerCallID = default(System.Guid);
					}
					this.SendPropertyChanged("PartnerCall");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="ClimbFind.PartnerCallSubscription")]
	public partial class PartnerCallSubscription : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Guid _UserID;
		
		private int _PlaceID;
		
		private bool _Email;
		
		private bool _RSS;
		
		private EntityRef<ClimberProfile> _ClimberProfile;
		
		private EntityRef<Place> _Place;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnUserIDChanging(System.Guid value);
    partial void OnUserIDChanged();
    partial void OnPlaceIDChanging(int value);
    partial void OnPlaceIDChanged();
    partial void OnEmailChanging(bool value);
    partial void OnEmailChanged();
    partial void OnRSSChanging(bool value);
    partial void OnRSSChanged();
    #endregion
		
		public PartnerCallSubscription()
		{
			this._ClimberProfile = default(EntityRef<ClimberProfile>);
			this._Place = default(EntityRef<Place>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._ClimberProfile.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlaceID", DbType="Int NOT NULL")]
		public int PlaceID
		{
			get
			{
				return this._PlaceID;
			}
			set
			{
				if ((this._PlaceID != value))
				{
					if (this._Place.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPlaceIDChanging(value);
					this.SendPropertyChanging();
					this._PlaceID = value;
					this.SendPropertyChanged("PlaceID");
					this.OnPlaceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="Bit NOT NULL")]
		public bool Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RSS", DbType="Bit NOT NULL")]
		public bool RSS
		{
			get
			{
				return this._RSS;
			}
			set
			{
				if ((this._RSS != value))
				{
					this.OnRSSChanging(value);
					this.SendPropertyChanging();
					this._RSS = value;
					this.SendPropertyChanged("RSS");
					this.OnRSSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClimberProfile_PartnerCallSubscription", Storage="_ClimberProfile", ThisKey="UserID", OtherKey="ID", IsForeignKey=true)]
		public ClimberProfile ClimberProfile
		{
			get
			{
				return this._ClimberProfile.Entity;
			}
			set
			{
				ClimberProfile previousValue = this._ClimberProfile.Entity;
				if (((previousValue != value) 
							|| (this._ClimberProfile.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ClimberProfile.Entity = null;
						previousValue.PartnerCallSubscriptions.Remove(this);
					}
					this._ClimberProfile.Entity = value;
					if ((value != null))
					{
						value.PartnerCallSubscriptions.Add(this);
						this._UserID = value.ID;
					}
					else
					{
						this._UserID = default(System.Guid);
					}
					this.SendPropertyChanged("ClimberProfile");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Place_PartnerCallSubscription", Storage="_Place", ThisKey="PlaceID", OtherKey="ID", IsForeignKey=true)]
		public Place Place
		{
			get
			{
				return this._Place.Entity;
			}
			set
			{
				Place previousValue = this._Place.Entity;
				if (((previousValue != value) 
							|| (this._Place.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Place.Entity = null;
						previousValue.PartnerCallSubscriptions.Remove(this);
					}
					this._Place.Entity = value;
					if ((value != null))
					{
						value.PartnerCallSubscriptions.Add(this);
						this._PlaceID = value.ID;
					}
					else
					{
						this._PlaceID = default(int);
					}
					this.SendPropertyChanged("Place");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="ClimbFind.PlaceIndoorDetails")]
	public partial class PlaceIndoorDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Address;
		
		private string _MapAddress;
		
		private string _LogoImageFile;
		
		private string _Website;
		
		private string _Contact;
		
		private string _Prices;
		
		private bool _HasTopRope;
		
		private bool _HasBoulder;
		
		private bool _HasLead;
		
		private EntityRef<Place> _Place;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnMapAddressChanging(string value);
    partial void OnMapAddressChanged();
    partial void OnLogoImageFileChanging(string value);
    partial void OnLogoImageFileChanged();
    partial void OnWebsiteChanging(string value);
    partial void OnWebsiteChanged();
    partial void OnContactChanging(string value);
    partial void OnContactChanged();
    partial void OnPricesChanging(string value);
    partial void OnPricesChanged();
    partial void OnHasTopRopeChanging(bool value);
    partial void OnHasTopRopeChanged();
    partial void OnHasBoulderChanging(bool value);
    partial void OnHasBoulderChanged();
    partial void OnHasLeadChanging(bool value);
    partial void OnHasLeadChanged();
    #endregion
		
		public PlaceIndoorDetail()
		{
			this._Place = default(EntityRef<Place>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					if (this._Place.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MapAddress", DbType="NVarChar(255)")]
		public string MapAddress
		{
			get
			{
				return this._MapAddress;
			}
			set
			{
				if ((this._MapAddress != value))
				{
					this.OnMapAddressChanging(value);
					this.SendPropertyChanging();
					this._MapAddress = value;
					this.SendPropertyChanged("MapAddress");
					this.OnMapAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogoImageFile", DbType="NVarChar(100)")]
		public string LogoImageFile
		{
			get
			{
				return this._LogoImageFile;
			}
			set
			{
				if ((this._LogoImageFile != value))
				{
					this.OnLogoImageFileChanging(value);
					this.SendPropertyChanging();
					this._LogoImageFile = value;
					this.SendPropertyChanged("LogoImageFile");
					this.OnLogoImageFileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Website", DbType="NVarChar(255)")]
		public string Website
		{
			get
			{
				return this._Website;
			}
			set
			{
				if ((this._Website != value))
				{
					this.OnWebsiteChanging(value);
					this.SendPropertyChanging();
					this._Website = value;
					this.SendPropertyChanged("Website");
					this.OnWebsiteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contact", DbType="NVarChar(100)")]
		public string Contact
		{
			get
			{
				return this._Contact;
			}
			set
			{
				if ((this._Contact != value))
				{
					this.OnContactChanging(value);
					this.SendPropertyChanging();
					this._Contact = value;
					this.SendPropertyChanged("Contact");
					this.OnContactChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Prices", DbType="NVarChar(255)")]
		public string Prices
		{
			get
			{
				return this._Prices;
			}
			set
			{
				if ((this._Prices != value))
				{
					this.OnPricesChanging(value);
					this.SendPropertyChanging();
					this._Prices = value;
					this.SendPropertyChanged("Prices");
					this.OnPricesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasTopRope", DbType="Bit NOT NULL")]
		public bool HasTopRope
		{
			get
			{
				return this._HasTopRope;
			}
			set
			{
				if ((this._HasTopRope != value))
				{
					this.OnHasTopRopeChanging(value);
					this.SendPropertyChanging();
					this._HasTopRope = value;
					this.SendPropertyChanged("HasTopRope");
					this.OnHasTopRopeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasBoulder", DbType="Bit NOT NULL")]
		public bool HasBoulder
		{
			get
			{
				return this._HasBoulder;
			}
			set
			{
				if ((this._HasBoulder != value))
				{
					this.OnHasBoulderChanging(value);
					this.SendPropertyChanging();
					this._HasBoulder = value;
					this.SendPropertyChanged("HasBoulder");
					this.OnHasBoulderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasLead", DbType="Bit NOT NULL")]
		public bool HasLead
		{
			get
			{
				return this._HasLead;
			}
			set
			{
				if ((this._HasLead != value))
				{
					this.OnHasLeadChanging(value);
					this.SendPropertyChanging();
					this._HasLead = value;
					this.SendPropertyChanged("HasLead");
					this.OnHasLeadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Place_PlaceIndoorDetail", Storage="_Place", ThisKey="ID", OtherKey="ID", IsForeignKey=true)]
		public Place Place
		{
			get
			{
				return this._Place.Entity;
			}
			set
			{
				Place previousValue = this._Place.Entity;
				if (((previousValue != value) 
							|| (this._Place.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Place.Entity = null;
						previousValue.PlaceIndoorDetail = null;
					}
					this._Place.Entity = value;
					if ((value != null))
					{
						value.PlaceIndoorDetail = this;
						this._ID = value.ID;
					}
					else
					{
						this._ID = default(int);
					}
					this.SendPropertyChanged("Place");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="ClimbFind.PlaceMediaShare")]
	public partial class PlaceMediaShare : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PlaceID;
		
		private System.Guid _MediaShareID;
		
		private EntityRef<MediaShare> _MediaShare;
		
		private EntityRef<Place> _Place;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPlaceIDChanging(int value);
    partial void OnPlaceIDChanged();
    partial void OnMediaShareIDChanging(System.Guid value);
    partial void OnMediaShareIDChanged();
    #endregion
		
		public PlaceMediaShare()
		{
			this._MediaShare = default(EntityRef<MediaShare>);
			this._Place = default(EntityRef<Place>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlaceID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int PlaceID
		{
			get
			{
				return this._PlaceID;
			}
			set
			{
				if ((this._PlaceID != value))
				{
					if (this._Place.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPlaceIDChanging(value);
					this.SendPropertyChanging();
					this._PlaceID = value;
					this.SendPropertyChanged("PlaceID");
					this.OnPlaceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MediaShareID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid MediaShareID
		{
			get
			{
				return this._MediaShareID;
			}
			set
			{
				if ((this._MediaShareID != value))
				{
					if (this._MediaShare.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMediaShareIDChanging(value);
					this.SendPropertyChanging();
					this._MediaShareID = value;
					this.SendPropertyChanged("MediaShareID");
					this.OnMediaShareIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MediaShare_PlaceMediaShare", Storage="_MediaShare", ThisKey="MediaShareID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public MediaShare MediaShare
		{
			get
			{
				return this._MediaShare.Entity;
			}
			set
			{
				MediaShare previousValue = this._MediaShare.Entity;
				if (((previousValue != value) 
							|| (this._MediaShare.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MediaShare.Entity = null;
						previousValue.PlaceMediaShares.Remove(this);
					}
					this._MediaShare.Entity = value;
					if ((value != null))
					{
						value.PlaceMediaShares.Add(this);
						this._MediaShareID = value.ID;
					}
					else
					{
						this._MediaShareID = default(System.Guid);
					}
					this.SendPropertyChanged("MediaShare");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Place_PlaceMediaShare", Storage="_Place", ThisKey="PlaceID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Place Place
		{
			get
			{
				return this._Place.Entity;
			}
			set
			{
				Place previousValue = this._Place.Entity;
				if (((previousValue != value) 
							|| (this._Place.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Place.Entity = null;
						previousValue.PlaceMediaShares.Remove(this);
					}
					this._Place.Entity = value;
					if ((value != null))
					{
						value.PlaceMediaShares.Add(this);
						this._PlaceID = value.ID;
					}
					else
					{
						this._PlaceID = default(int);
					}
					this.SendPropertyChanged("Place");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="ClimbFind.PlaceOutdoorAuthority")]
	public partial class PlaceOutdoorAuthority : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _PlaceID;
		
		private string _Name;
		
		private string _Url;
		
		private EntityRef<PlaceOutdoorDetail> _PlaceOutdoorDetail;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPlaceIDChanging(int value);
    partial void OnPlaceIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnUrlChanging(string value);
    partial void OnUrlChanged();
    #endregion
		
		public PlaceOutdoorAuthority()
		{
			this._PlaceOutdoorDetail = default(EntityRef<PlaceOutdoorDetail>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlaceID", DbType="Int NOT NULL")]
		public int PlaceID
		{
			get
			{
				return this._PlaceID;
			}
			set
			{
				if ((this._PlaceID != value))
				{
					if (this._PlaceOutdoorDetail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPlaceIDChanging(value);
					this.SendPropertyChanging();
					this._PlaceID = value;
					this.SendPropertyChanged("PlaceID");
					this.OnPlaceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Url", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Url
		{
			get
			{
				return this._Url;
			}
			set
			{
				if ((this._Url != value))
				{
					this.OnUrlChanging(value);
					this.SendPropertyChanging();
					this._Url = value;
					this.SendPropertyChanged("Url");
					this.OnUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PlaceOutdoorDetail_PlaceOutdoorAuthority", Storage="_PlaceOutdoorDetail", ThisKey="PlaceID", OtherKey="ID", IsForeignKey=true)]
		public PlaceOutdoorDetail PlaceOutdoorDetail
		{
			get
			{
				return this._PlaceOutdoorDetail.Entity;
			}
			set
			{
				PlaceOutdoorDetail previousValue = this._PlaceOutdoorDetail.Entity;
				if (((previousValue != value) 
							|| (this._PlaceOutdoorDetail.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PlaceOutdoorDetail.Entity = null;
						previousValue.PlaceOutdoorAuthorities.Remove(this);
					}
					this._PlaceOutdoorDetail.Entity = value;
					if ((value != null))
					{
						value.PlaceOutdoorAuthorities.Add(this);
						this._PlaceID = value.ID;
					}
					else
					{
						this._PlaceID = default(int);
					}
					this.SendPropertyChanged("PlaceOutdoorDetail");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="ClimbFind.PlaceOutdoorCrag")]
	public partial class PlaceOutdoorCrag : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private string _Name;
		
		private string _FriendlyUrlName;
		
		private int _Type;
		
		private System.Nullable<bool> _Mosquitoes;
		
		private System.Nullable<bool> _ClimbingSummerAM;
		
		private System.Nullable<bool> _ClimbingWinterAM;
		
		private System.Nullable<bool> _ClimbingSummerPM;
		
		private System.Nullable<bool> _ClimbingWinterPM;
		
		private string _Description;
		
		private string _History;
		
		private string _Access;
		
		private string _Approach;
		
		private int _PlaceID;
		
		private System.Guid _CreatedByUserID;
		
		private System.Guid _MessageBoardID;
		
		private string _DescriptionImageFile1;
		
		private string _DescriptionImageFile2;
		
		private string _DescriptionImageFile3;
		
		private System.Nullable<System.Guid> _DescriptionImageFile1ByUserID;
		
		private System.Nullable<System.Guid> _DescriptionImageFile2ByUserID;
		
		private System.Nullable<System.Guid> _DescriptionImageFile3ByUserID;
		
		private decimal _Latitude;
		
		private decimal _Longitude;
		
		private bool _HasTopRope;
		
		private bool _HasBoulder;
		
		private bool _HasLead;
		
		private bool _HasTrad;
		
		private bool _HasSport;
		
		private bool _HasIce;
		
		private bool _HasSolo;
		
		private bool _HasDWS;
		
		private bool _HasAlpine;
		
		private bool _HasMultipitch;
		
		private bool _HasBuildering;
		
		private EntitySet<OutdoorCragMediaShare> _OutdoorCragMediaShares;
		
		private EntityRef<ClimberProfile> _ClimberProfile;
		
		private EntityRef<ClimberProfile> _ClimberProfile1;
		
		private EntityRef<ClimberProfile> _ClimberProfile2;
		
		private EntityRef<ClimberProfile> _ClimberProfile3;
		
		private EntityRef<MessageBoard> _MessageBoard;
		
		private EntityRef<PlaceOutdoorDetail> _PlaceOutdoorDetail;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnFriendlyUrlNameChanging(string value);
    partial void OnFriendlyUrlNameChanged();
    partial void OnTypeChanging(int value);
    partial void OnTypeChanged();
    partial void OnMosquitoesChanging(System.Nullable<bool> value);
    partial void OnMosquitoesChanged();
    partial void OnClimbingSummerAMChanging(System.Nullable<bool> value);
    partial void OnClimbingSummerAMChanged();
    partial void OnClimbingWinterAMChanging(System.Nullable<bool> value);
    partial void OnClimbingWinterAMChanged();
    partial void OnClimbingSummerPMChanging(System.Nullable<bool> value);
    partial void OnClimbingSummerPMChanged();
    partial void OnClimbingWinterPMChanging(System.Nullable<bool> value);
    partial void OnClimbingWinterPMChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnHistoryChanging(string value);
    partial void OnHistoryChanged();
    partial void OnAccessChanging(string value);
    partial void OnAccessChanged();
    partial void OnApproachChanging(string value);
    partial void OnApproachChanged();
    partial void OnPlaceIDChanging(int value);
    partial void OnPlaceIDChanged();
    partial void OnCreatedByUserIDChanging(System.Guid value);
    partial void OnCreatedByUserIDChanged();
    partial void OnMessageBoardIDChanging(System.Guid value);
    partial void OnMessageBoardIDChanged();
    partial void OnDescriptionImageFile1Changing(string value);
    partial void OnDescriptionImageFile1Changed();
    partial void OnDescriptionImageFile2Changing(string value);
    partial void OnDescriptionImageFile2Changed();
    partial void OnDescriptionImageFile3Changing(string value);
    partial void OnDescriptionImageFile3Changed();
    partial void OnDescriptionImageFile1ByUserIDChanging(System.Nullable<System.Guid> value);
    partial void OnDescriptionImageFile1ByUserIDChanged();
    partial void OnDescriptionImageFile2ByUserIDChanging(System.Nullable<System.Guid> value);
    partial void OnDescriptionImageFile2ByUserIDChanged();
    partial void OnDescriptionImageFile3ByUserIDChanging(System.Nullable<System.Guid> value);
    partial void OnDescriptionImageFile3ByUserIDChanged();
    partial void OnLatitudeChanging(decimal value);
    partial void OnLatitudeChanged();
    partial void OnLongitudeChanging(decimal value);
    partial void OnLongitudeChanged();
    partial void OnHasTopRopeChanging(bool value);
    partial void OnHasTopRopeChanged();
    partial void OnHasBoulderChanging(bool value);
    partial void OnHasBoulderChanged();
    partial void OnHasLeadChanging(bool value);
    partial void OnHasLeadChanged();
    partial void OnHasTradChanging(bool value);
    partial void OnHasTradChanged();
    partial void OnHasSportChanging(bool value);
    partial void OnHasSportChanged();
    partial void OnHasIceChanging(bool value);
    partial void OnHasIceChanged();
    partial void OnHasSoloChanging(bool value);
    partial void OnHasSoloChanged();
    partial void OnHasDWSChanging(bool value);
    partial void OnHasDWSChanged();
    partial void OnHasAlpineChanging(bool value);
    partial void OnHasAlpineChanged();
    partial void OnHasMultipitchChanging(bool value);
    partial void OnHasMultipitchChanged();
    partial void OnHasBuilderingChanging(bool value);
    partial void OnHasBuilderingChanged();
    #endregion
		
		public PlaceOutdoorCrag()
		{
			this._OutdoorCragMediaShares = new EntitySet<OutdoorCragMediaShare>(new Action<OutdoorCragMediaShare>(this.attach_OutdoorCragMediaShares), new Action<OutdoorCragMediaShare>(this.detach_OutdoorCragMediaShares));
			this._ClimberProfile = default(EntityRef<ClimberProfile>);
			this._ClimberProfile1 = default(EntityRef<ClimberProfile>);
			this._ClimberProfile2 = default(EntityRef<ClimberProfile>);
			this._ClimberProfile3 = default(EntityRef<ClimberProfile>);
			this._MessageBoard = default(EntityRef<MessageBoard>);
			this._PlaceOutdoorDetail = default(EntityRef<PlaceOutdoorDetail>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FriendlyUrlName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string FriendlyUrlName
		{
			get
			{
				return this._FriendlyUrlName;
			}
			set
			{
				if ((this._FriendlyUrlName != value))
				{
					this.OnFriendlyUrlNameChanging(value);
					this.SendPropertyChanging();
					this._FriendlyUrlName = value;
					this.SendPropertyChanged("FriendlyUrlName");
					this.OnFriendlyUrlNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int NOT NULL")]
		public int Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mosquitoes", DbType="Bit")]
		public System.Nullable<bool> Mosquitoes
		{
			get
			{
				return this._Mosquitoes;
			}
			set
			{
				if ((this._Mosquitoes != value))
				{
					this.OnMosquitoesChanging(value);
					this.SendPropertyChanging();
					this._Mosquitoes = value;
					this.SendPropertyChanged("Mosquitoes");
					this.OnMosquitoesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClimbingSummerAM", DbType="Bit")]
		public System.Nullable<bool> ClimbingSummerAM
		{
			get
			{
				return this._ClimbingSummerAM;
			}
			set
			{
				if ((this._ClimbingSummerAM != value))
				{
					this.OnClimbingSummerAMChanging(value);
					this.SendPropertyChanging();
					this._ClimbingSummerAM = value;
					this.SendPropertyChanged("ClimbingSummerAM");
					this.OnClimbingSummerAMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClimbingWinterAM", DbType="Bit")]
		public System.Nullable<bool> ClimbingWinterAM
		{
			get
			{
				return this._ClimbingWinterAM;
			}
			set
			{
				if ((this._ClimbingWinterAM != value))
				{
					this.OnClimbingWinterAMChanging(value);
					this.SendPropertyChanging();
					this._ClimbingWinterAM = value;
					this.SendPropertyChanged("ClimbingWinterAM");
					this.OnClimbingWinterAMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClimbingSummerPM", DbType="Bit")]
		public System.Nullable<bool> ClimbingSummerPM
		{
			get
			{
				return this._ClimbingSummerPM;
			}
			set
			{
				if ((this._ClimbingSummerPM != value))
				{
					this.OnClimbingSummerPMChanging(value);
					this.SendPropertyChanging();
					this._ClimbingSummerPM = value;
					this.SendPropertyChanged("ClimbingSummerPM");
					this.OnClimbingSummerPMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClimbingWinterPM", DbType="Bit")]
		public System.Nullable<bool> ClimbingWinterPM
		{
			get
			{
				return this._ClimbingWinterPM;
			}
			set
			{
				if ((this._ClimbingWinterPM != value))
				{
					this.OnClimbingWinterPMChanging(value);
					this.SendPropertyChanging();
					this._ClimbingWinterPM = value;
					this.SendPropertyChanged("ClimbingWinterPM");
					this.OnClimbingWinterPMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_History", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string History
		{
			get
			{
				return this._History;
			}
			set
			{
				if ((this._History != value))
				{
					this.OnHistoryChanging(value);
					this.SendPropertyChanging();
					this._History = value;
					this.SendPropertyChanged("History");
					this.OnHistoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Access", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Access
		{
			get
			{
				return this._Access;
			}
			set
			{
				if ((this._Access != value))
				{
					this.OnAccessChanging(value);
					this.SendPropertyChanging();
					this._Access = value;
					this.SendPropertyChanged("Access");
					this.OnAccessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Approach", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Approach
		{
			get
			{
				return this._Approach;
			}
			set
			{
				if ((this._Approach != value))
				{
					this.OnApproachChanging(value);
					this.SendPropertyChanging();
					this._Approach = value;
					this.SendPropertyChanged("Approach");
					this.OnApproachChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlaceID", DbType="Int NOT NULL")]
		public int PlaceID
		{
			get
			{
				return this._PlaceID;
			}
			set
			{
				if ((this._PlaceID != value))
				{
					if (this._PlaceOutdoorDetail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPlaceIDChanging(value);
					this.SendPropertyChanging();
					this._PlaceID = value;
					this.SendPropertyChanged("PlaceID");
					this.OnPlaceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid CreatedByUserID
		{
			get
			{
				return this._CreatedByUserID;
			}
			set
			{
				if ((this._CreatedByUserID != value))
				{
					if (this._ClimberProfile.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserID = value;
					this.SendPropertyChanged("CreatedByUserID");
					this.OnCreatedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MessageBoardID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid MessageBoardID
		{
			get
			{
				return this._MessageBoardID;
			}
			set
			{
				if ((this._MessageBoardID != value))
				{
					if (this._MessageBoard.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMessageBoardIDChanging(value);
					this.SendPropertyChanging();
					this._MessageBoardID = value;
					this.SendPropertyChanged("MessageBoardID");
					this.OnMessageBoardIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescriptionImageFile1", DbType="NVarChar(100)")]
		public string DescriptionImageFile1
		{
			get
			{
				return this._DescriptionImageFile1;
			}
			set
			{
				if ((this._DescriptionImageFile1 != value))
				{
					this.OnDescriptionImageFile1Changing(value);
					this.SendPropertyChanging();
					this._DescriptionImageFile1 = value;
					this.SendPropertyChanged("DescriptionImageFile1");
					this.OnDescriptionImageFile1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescriptionImageFile2", DbType="NVarChar(100)")]
		public string DescriptionImageFile2
		{
			get
			{
				return this._DescriptionImageFile2;
			}
			set
			{
				if ((this._DescriptionImageFile2 != value))
				{
					this.OnDescriptionImageFile2Changing(value);
					this.SendPropertyChanging();
					this._DescriptionImageFile2 = value;
					this.SendPropertyChanged("DescriptionImageFile2");
					this.OnDescriptionImageFile2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescriptionImageFile3", DbType="NVarChar(100)")]
		public string DescriptionImageFile3
		{
			get
			{
				return this._DescriptionImageFile3;
			}
			set
			{
				if ((this._DescriptionImageFile3 != value))
				{
					this.OnDescriptionImageFile3Changing(value);
					this.SendPropertyChanging();
					this._DescriptionImageFile3 = value;
					this.SendPropertyChanged("DescriptionImageFile3");
					this.OnDescriptionImageFile3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescriptionImageFile1ByUserID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> DescriptionImageFile1ByUserID
		{
			get
			{
				return this._DescriptionImageFile1ByUserID;
			}
			set
			{
				if ((this._DescriptionImageFile1ByUserID != value))
				{
					if (this._ClimberProfile1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDescriptionImageFile1ByUserIDChanging(value);
					this.SendPropertyChanging();
					this._DescriptionImageFile1ByUserID = value;
					this.SendPropertyChanged("DescriptionImageFile1ByUserID");
					this.OnDescriptionImageFile1ByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescriptionImageFile2ByUserID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> DescriptionImageFile2ByUserID
		{
			get
			{
				return this._DescriptionImageFile2ByUserID;
			}
			set
			{
				if ((this._DescriptionImageFile2ByUserID != value))
				{
					if (this._ClimberProfile2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDescriptionImageFile2ByUserIDChanging(value);
					this.SendPropertyChanging();
					this._DescriptionImageFile2ByUserID = value;
					this.SendPropertyChanged("DescriptionImageFile2ByUserID");
					this.OnDescriptionImageFile2ByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescriptionImageFile3ByUserID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> DescriptionImageFile3ByUserID
		{
			get
			{
				return this._DescriptionImageFile3ByUserID;
			}
			set
			{
				if ((this._DescriptionImageFile3ByUserID != value))
				{
					if (this._ClimberProfile3.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDescriptionImageFile3ByUserIDChanging(value);
					this.SendPropertyChanging();
					this._DescriptionImageFile3ByUserID = value;
					this.SendPropertyChanged("DescriptionImageFile3ByUserID");
					this.OnDescriptionImageFile3ByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Latitude", DbType="Decimal(18,12) NOT NULL")]
		public decimal Latitude
		{
			get
			{
				return this._Latitude;
			}
			set
			{
				if ((this._Latitude != value))
				{
					this.OnLatitudeChanging(value);
					this.SendPropertyChanging();
					this._Latitude = value;
					this.SendPropertyChanged("Latitude");
					this.OnLatitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Longitude", DbType="Decimal(18,12) NOT NULL")]
		public decimal Longitude
		{
			get
			{
				return this._Longitude;
			}
			set
			{
				if ((this._Longitude != value))
				{
					this.OnLongitudeChanging(value);
					this.SendPropertyChanging();
					this._Longitude = value;
					this.SendPropertyChanged("Longitude");
					this.OnLongitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasTopRope", DbType="Bit NOT NULL")]
		public bool HasTopRope
		{
			get
			{
				return this._HasTopRope;
			}
			set
			{
				if ((this._HasTopRope != value))
				{
					this.OnHasTopRopeChanging(value);
					this.SendPropertyChanging();
					this._HasTopRope = value;
					this.SendPropertyChanged("HasTopRope");
					this.OnHasTopRopeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasBoulder", DbType="Bit NOT NULL")]
		public bool HasBoulder
		{
			get
			{
				return this._HasBoulder;
			}
			set
			{
				if ((this._HasBoulder != value))
				{
					this.OnHasBoulderChanging(value);
					this.SendPropertyChanging();
					this._HasBoulder = value;
					this.SendPropertyChanged("HasBoulder");
					this.OnHasBoulderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasLead", DbType="Bit NOT NULL")]
		public bool HasLead
		{
			get
			{
				return this._HasLead;
			}
			set
			{
				if ((this._HasLead != value))
				{
					this.OnHasLeadChanging(value);
					this.SendPropertyChanging();
					this._HasLead = value;
					this.SendPropertyChanged("HasLead");
					this.OnHasLeadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasTrad", DbType="Bit NOT NULL")]
		public bool HasTrad
		{
			get
			{
				return this._HasTrad;
			}
			set
			{
				if ((this._HasTrad != value))
				{
					this.OnHasTradChanging(value);
					this.SendPropertyChanging();
					this._HasTrad = value;
					this.SendPropertyChanged("HasTrad");
					this.OnHasTradChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasSport", DbType="Bit NOT NULL")]
		public bool HasSport
		{
			get
			{
				return this._HasSport;
			}
			set
			{
				if ((this._HasSport != value))
				{
					this.OnHasSportChanging(value);
					this.SendPropertyChanging();
					this._HasSport = value;
					this.SendPropertyChanged("HasSport");
					this.OnHasSportChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasIce", DbType="Bit NOT NULL")]
		public bool HasIce
		{
			get
			{
				return this._HasIce;
			}
			set
			{
				if ((this._HasIce != value))
				{
					this.OnHasIceChanging(value);
					this.SendPropertyChanging();
					this._HasIce = value;
					this.SendPropertyChanged("HasIce");
					this.OnHasIceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasSolo", DbType="Bit NOT NULL")]
		public bool HasSolo
		{
			get
			{
				return this._HasSolo;
			}
			set
			{
				if ((this._HasSolo != value))
				{
					this.OnHasSoloChanging(value);
					this.SendPropertyChanging();
					this._HasSolo = value;
					this.SendPropertyChanged("HasSolo");
					this.OnHasSoloChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasDWS", DbType="Bit NOT NULL")]
		public bool HasDWS
		{
			get
			{
				return this._HasDWS;
			}
			set
			{
				if ((this._HasDWS != value))
				{
					this.OnHasDWSChanging(value);
					this.SendPropertyChanging();
					this._HasDWS = value;
					this.SendPropertyChanged("HasDWS");
					this.OnHasDWSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasAlpine", DbType="Bit NOT NULL")]
		public bool HasAlpine
		{
			get
			{
				return this._HasAlpine;
			}
			set
			{
				if ((this._HasAlpine != value))
				{
					this.OnHasAlpineChanging(value);
					this.SendPropertyChanging();
					this._HasAlpine = value;
					this.SendPropertyChanged("HasAlpine");
					this.OnHasAlpineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasMultipitch", DbType="Bit NOT NULL")]
		public bool HasMultipitch
		{
			get
			{
				return this._HasMultipitch;
			}
			set
			{
				if ((this._HasMultipitch != value))
				{
					this.OnHasMultipitchChanging(value);
					this.SendPropertyChanging();
					this._HasMultipitch = value;
					this.SendPropertyChanged("HasMultipitch");
					this.OnHasMultipitchChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasBuildering", DbType="Bit NOT NULL")]
		public bool HasBuildering
		{
			get
			{
				return this._HasBuildering;
			}
			set
			{
				if ((this._HasBuildering != value))
				{
					this.OnHasBuilderingChanging(value);
					this.SendPropertyChanging();
					this._HasBuildering = value;
					this.SendPropertyChanged("HasBuildering");
					this.OnHasBuilderingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PlaceOutdoorCrag_OutdoorCragMediaShare", Storage="_OutdoorCragMediaShares", ThisKey="ID", OtherKey="OutdoorCragID")]
		public EntitySet<OutdoorCragMediaShare> OutdoorCragMediaShares
		{
			get
			{
				return this._OutdoorCragMediaShares;
			}
			set
			{
				this._OutdoorCragMediaShares.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClimberProfile_PlaceOutdoorCrag", Storage="_ClimberProfile", ThisKey="CreatedByUserID", OtherKey="ID", IsForeignKey=true)]
		public ClimberProfile ClimberProfile
		{
			get
			{
				return this._ClimberProfile.Entity;
			}
			set
			{
				ClimberProfile previousValue = this._ClimberProfile.Entity;
				if (((previousValue != value) 
							|| (this._ClimberProfile.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ClimberProfile.Entity = null;
						previousValue.PlaceOutdoorCrags.Remove(this);
					}
					this._ClimberProfile.Entity = value;
					if ((value != null))
					{
						value.PlaceOutdoorCrags.Add(this);
						this._CreatedByUserID = value.ID;
					}
					else
					{
						this._CreatedByUserID = default(System.Guid);
					}
					this.SendPropertyChanged("ClimberProfile");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClimberProfile_PlaceOutdoorCrag1", Storage="_ClimberProfile1", ThisKey="DescriptionImageFile1ByUserID", OtherKey="ID", IsForeignKey=true)]
		public ClimberProfile ClimberProfile1
		{
			get
			{
				return this._ClimberProfile1.Entity;
			}
			set
			{
				ClimberProfile previousValue = this._ClimberProfile1.Entity;
				if (((previousValue != value) 
							|| (this._ClimberProfile1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ClimberProfile1.Entity = null;
						previousValue.PlaceOutdoorCrags1.Remove(this);
					}
					this._ClimberProfile1.Entity = value;
					if ((value != null))
					{
						value.PlaceOutdoorCrags1.Add(this);
						this._DescriptionImageFile1ByUserID = value.ID;
					}
					else
					{
						this._DescriptionImageFile1ByUserID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("ClimberProfile1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClimberProfile_PlaceOutdoorCrag2", Storage="_ClimberProfile2", ThisKey="DescriptionImageFile2ByUserID", OtherKey="ID", IsForeignKey=true)]
		public ClimberProfile ClimberProfile2
		{
			get
			{
				return this._ClimberProfile2.Entity;
			}
			set
			{
				ClimberProfile previousValue = this._ClimberProfile2.Entity;
				if (((previousValue != value) 
							|| (this._ClimberProfile2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ClimberProfile2.Entity = null;
						previousValue.PlaceOutdoorCrags2.Remove(this);
					}
					this._ClimberProfile2.Entity = value;
					if ((value != null))
					{
						value.PlaceOutdoorCrags2.Add(this);
						this._DescriptionImageFile2ByUserID = value.ID;
					}
					else
					{
						this._DescriptionImageFile2ByUserID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("ClimberProfile2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClimberProfile_PlaceOutdoorCrag3", Storage="_ClimberProfile3", ThisKey="DescriptionImageFile3ByUserID", OtherKey="ID", IsForeignKey=true)]
		public ClimberProfile ClimberProfile3
		{
			get
			{
				return this._ClimberProfile3.Entity;
			}
			set
			{
				ClimberProfile previousValue = this._ClimberProfile3.Entity;
				if (((previousValue != value) 
							|| (this._ClimberProfile3.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ClimberProfile3.Entity = null;
						previousValue.PlaceOutdoorCrags3.Remove(this);
					}
					this._ClimberProfile3.Entity = value;
					if ((value != null))
					{
						value.PlaceOutdoorCrags3.Add(this);
						this._DescriptionImageFile3ByUserID = value.ID;
					}
					else
					{
						this._DescriptionImageFile3ByUserID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("ClimberProfile3");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MessageBoard_PlaceOutdoorCrag", Storage="_MessageBoard", ThisKey="MessageBoardID", OtherKey="ID", IsForeignKey=true)]
		public MessageBoard MessageBoard
		{
			get
			{
				return this._MessageBoard.Entity;
			}
			set
			{
				MessageBoard previousValue = this._MessageBoard.Entity;
				if (((previousValue != value) 
							|| (this._MessageBoard.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MessageBoard.Entity = null;
						previousValue.PlaceOutdoorCrags.Remove(this);
					}
					this._MessageBoard.Entity = value;
					if ((value != null))
					{
						value.PlaceOutdoorCrags.Add(this);
						this._MessageBoardID = value.ID;
					}
					else
					{
						this._MessageBoardID = default(System.Guid);
					}
					this.SendPropertyChanged("MessageBoard");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PlaceOutdoorDetail_PlaceOutdoorCrag", Storage="_PlaceOutdoorDetail", ThisKey="PlaceID", OtherKey="ID", IsForeignKey=true)]
		public PlaceOutdoorDetail PlaceOutdoorDetail
		{
			get
			{
				return this._PlaceOutdoorDetail.Entity;
			}
			set
			{
				PlaceOutdoorDetail previousValue = this._PlaceOutdoorDetail.Entity;
				if (((previousValue != value) 
							|| (this._PlaceOutdoorDetail.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PlaceOutdoorDetail.Entity = null;
						previousValue.PlaceOutdoorCrags.Remove(this);
					}
					this._PlaceOutdoorDetail.Entity = value;
					if ((value != null))
					{
						value.PlaceOutdoorCrags.Add(this);
						this._PlaceID = value.ID;
					}
					else
					{
						this._PlaceID = default(int);
					}
					this.SendPropertyChanged("PlaceOutdoorDetail");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OutdoorCragMediaShares(OutdoorCragMediaShare entity)
		{
			this.SendPropertyChanging();
			entity.PlaceOutdoorCrag = this;
		}
		
		private void detach_OutdoorCragMediaShares(OutdoorCragMediaShare entity)
		{
			this.SendPropertyChanging();
			entity.PlaceOutdoorCrag = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="ClimbFind.PlaceOutdoorDetails")]
	public partial class PlaceOutdoorDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _DescriptionImageFile;
		
		private System.Nullable<System.Guid> _DescriptionByUserID;
		
		private System.Nullable<System.DateTime> _DescriptionLastUpdated;
		
		private string _DescriptionImageFile2;
		
		private string _DescriptionImageFile3;
		
		private System.Nullable<System.Guid> _DescriptionImageFileByUserID;
		
		private System.Nullable<System.Guid> _DescriptionImageFile2ByUserID;
		
		private System.Nullable<System.Guid> _DescriptionImageFile3ByUserID;
		
		private string _Directions;
		
		private string _Accomodation;
		
		private string _Food;
		
		private string _LocalBeta;
		
		private bool _DetailsAreLocked;
		
		private EntitySet<PlaceOutdoorAuthority> _PlaceOutdoorAuthorities;
		
		private EntitySet<PlaceOutdoorCrag> _PlaceOutdoorCrags;
		
		private EntityRef<ClimberProfile> _ClimberProfile;
		
		private EntityRef<ClimberProfile> _ClimberProfile1;
		
		private EntityRef<ClimberProfile> _ClimberProfile2;
		
		private EntityRef<ClimberProfile> _ClimberProfile3;
		
		private EntityRef<Place> _Place;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDescriptionImageFileChanging(string value);
    partial void OnDescriptionImageFileChanged();
    partial void OnDescriptionByUserIDChanging(System.Nullable<System.Guid> value);
    partial void OnDescriptionByUserIDChanged();
    partial void OnDescriptionLastUpdatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDescriptionLastUpdatedChanged();
    partial void OnDescriptionImageFile2Changing(string value);
    partial void OnDescriptionImageFile2Changed();
    partial void OnDescriptionImageFile3Changing(string value);
    partial void OnDescriptionImageFile3Changed();
    partial void OnDescriptionImageFileByUserIDChanging(System.Nullable<System.Guid> value);
    partial void OnDescriptionImageFileByUserIDChanged();
    partial void OnDescriptionImageFile2ByUserIDChanging(System.Nullable<System.Guid> value);
    partial void OnDescriptionImageFile2ByUserIDChanged();
    partial void OnDescriptionImageFile3ByUserIDChanging(System.Nullable<System.Guid> value);
    partial void OnDescriptionImageFile3ByUserIDChanged();
    partial void OnDirectionsChanging(string value);
    partial void OnDirectionsChanged();
    partial void OnAccomodationChanging(string value);
    partial void OnAccomodationChanged();
    partial void OnFoodChanging(string value);
    partial void OnFoodChanged();
    partial void OnLocalBetaChanging(string value);
    partial void OnLocalBetaChanged();
    partial void OnDetailsAreLockedChanging(bool value);
    partial void OnDetailsAreLockedChanged();
    #endregion
		
		public PlaceOutdoorDetail()
		{
			this._PlaceOutdoorAuthorities = new EntitySet<PlaceOutdoorAuthority>(new Action<PlaceOutdoorAuthority>(this.attach_PlaceOutdoorAuthorities), new Action<PlaceOutdoorAuthority>(this.detach_PlaceOutdoorAuthorities));
			this._PlaceOutdoorCrags = new EntitySet<PlaceOutdoorCrag>(new Action<PlaceOutdoorCrag>(this.attach_PlaceOutdoorCrags), new Action<PlaceOutdoorCrag>(this.detach_PlaceOutdoorCrags));
			this._ClimberProfile = default(EntityRef<ClimberProfile>);
			this._ClimberProfile1 = default(EntityRef<ClimberProfile>);
			this._ClimberProfile2 = default(EntityRef<ClimberProfile>);
			this._ClimberProfile3 = default(EntityRef<ClimberProfile>);
			this._Place = default(EntityRef<Place>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					if (this._Place.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescriptionImageFile", DbType="NVarChar(100)")]
		public string DescriptionImageFile
		{
			get
			{
				return this._DescriptionImageFile;
			}
			set
			{
				if ((this._DescriptionImageFile != value))
				{
					this.OnDescriptionImageFileChanging(value);
					this.SendPropertyChanging();
					this._DescriptionImageFile = value;
					this.SendPropertyChanged("DescriptionImageFile");
					this.OnDescriptionImageFileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescriptionByUserID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> DescriptionByUserID
		{
			get
			{
				return this._DescriptionByUserID;
			}
			set
			{
				if ((this._DescriptionByUserID != value))
				{
					if (this._ClimberProfile.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDescriptionByUserIDChanging(value);
					this.SendPropertyChanging();
					this._DescriptionByUserID = value;
					this.SendPropertyChanged("DescriptionByUserID");
					this.OnDescriptionByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescriptionLastUpdated", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> DescriptionLastUpdated
		{
			get
			{
				return this._DescriptionLastUpdated;
			}
			set
			{
				if ((this._DescriptionLastUpdated != value))
				{
					this.OnDescriptionLastUpdatedChanging(value);
					this.SendPropertyChanging();
					this._DescriptionLastUpdated = value;
					this.SendPropertyChanged("DescriptionLastUpdated");
					this.OnDescriptionLastUpdatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescriptionImageFile2", DbType="NVarChar(100)")]
		public string DescriptionImageFile2
		{
			get
			{
				return this._DescriptionImageFile2;
			}
			set
			{
				if ((this._DescriptionImageFile2 != value))
				{
					this.OnDescriptionImageFile2Changing(value);
					this.SendPropertyChanging();
					this._DescriptionImageFile2 = value;
					this.SendPropertyChanged("DescriptionImageFile2");
					this.OnDescriptionImageFile2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescriptionImageFile3", DbType="NVarChar(100)")]
		public string DescriptionImageFile3
		{
			get
			{
				return this._DescriptionImageFile3;
			}
			set
			{
				if ((this._DescriptionImageFile3 != value))
				{
					this.OnDescriptionImageFile3Changing(value);
					this.SendPropertyChanging();
					this._DescriptionImageFile3 = value;
					this.SendPropertyChanged("DescriptionImageFile3");
					this.OnDescriptionImageFile3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescriptionImageFileByUserID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> DescriptionImageFileByUserID
		{
			get
			{
				return this._DescriptionImageFileByUserID;
			}
			set
			{
				if ((this._DescriptionImageFileByUserID != value))
				{
					if (this._ClimberProfile1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDescriptionImageFileByUserIDChanging(value);
					this.SendPropertyChanging();
					this._DescriptionImageFileByUserID = value;
					this.SendPropertyChanged("DescriptionImageFileByUserID");
					this.OnDescriptionImageFileByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescriptionImageFile2ByUserID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> DescriptionImageFile2ByUserID
		{
			get
			{
				return this._DescriptionImageFile2ByUserID;
			}
			set
			{
				if ((this._DescriptionImageFile2ByUserID != value))
				{
					if (this._ClimberProfile2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDescriptionImageFile2ByUserIDChanging(value);
					this.SendPropertyChanging();
					this._DescriptionImageFile2ByUserID = value;
					this.SendPropertyChanged("DescriptionImageFile2ByUserID");
					this.OnDescriptionImageFile2ByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescriptionImageFile3ByUserID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> DescriptionImageFile3ByUserID
		{
			get
			{
				return this._DescriptionImageFile3ByUserID;
			}
			set
			{
				if ((this._DescriptionImageFile3ByUserID != value))
				{
					if (this._ClimberProfile3.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDescriptionImageFile3ByUserIDChanging(value);
					this.SendPropertyChanging();
					this._DescriptionImageFile3ByUserID = value;
					this.SendPropertyChanged("DescriptionImageFile3ByUserID");
					this.OnDescriptionImageFile3ByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Directions", DbType="NVarChar(MAX)")]
		public string Directions
		{
			get
			{
				return this._Directions;
			}
			set
			{
				if ((this._Directions != value))
				{
					this.OnDirectionsChanging(value);
					this.SendPropertyChanging();
					this._Directions = value;
					this.SendPropertyChanged("Directions");
					this.OnDirectionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Accomodation", DbType="NVarChar(MAX)")]
		public string Accomodation
		{
			get
			{
				return this._Accomodation;
			}
			set
			{
				if ((this._Accomodation != value))
				{
					this.OnAccomodationChanging(value);
					this.SendPropertyChanging();
					this._Accomodation = value;
					this.SendPropertyChanged("Accomodation");
					this.OnAccomodationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Food", DbType="NVarChar(MAX)")]
		public string Food
		{
			get
			{
				return this._Food;
			}
			set
			{
				if ((this._Food != value))
				{
					this.OnFoodChanging(value);
					this.SendPropertyChanging();
					this._Food = value;
					this.SendPropertyChanged("Food");
					this.OnFoodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocalBeta", DbType="NVarChar(MAX)")]
		public string LocalBeta
		{
			get
			{
				return this._LocalBeta;
			}
			set
			{
				if ((this._LocalBeta != value))
				{
					this.OnLocalBetaChanging(value);
					this.SendPropertyChanging();
					this._LocalBeta = value;
					this.SendPropertyChanged("LocalBeta");
					this.OnLocalBetaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetailsAreLocked", DbType="Bit NOT NULL")]
		public bool DetailsAreLocked
		{
			get
			{
				return this._DetailsAreLocked;
			}
			set
			{
				if ((this._DetailsAreLocked != value))
				{
					this.OnDetailsAreLockedChanging(value);
					this.SendPropertyChanging();
					this._DetailsAreLocked = value;
					this.SendPropertyChanged("DetailsAreLocked");
					this.OnDetailsAreLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PlaceOutdoorDetail_PlaceOutdoorAuthority", Storage="_PlaceOutdoorAuthorities", ThisKey="ID", OtherKey="PlaceID")]
		public EntitySet<PlaceOutdoorAuthority> PlaceOutdoorAuthorities
		{
			get
			{
				return this._PlaceOutdoorAuthorities;
			}
			set
			{
				this._PlaceOutdoorAuthorities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PlaceOutdoorDetail_PlaceOutdoorCrag", Storage="_PlaceOutdoorCrags", ThisKey="ID", OtherKey="PlaceID")]
		public EntitySet<PlaceOutdoorCrag> PlaceOutdoorCrags
		{
			get
			{
				return this._PlaceOutdoorCrags;
			}
			set
			{
				this._PlaceOutdoorCrags.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClimberProfile_PlaceOutdoorDetail", Storage="_ClimberProfile", ThisKey="DescriptionByUserID", OtherKey="ID", IsForeignKey=true)]
		public ClimberProfile ClimberProfile
		{
			get
			{
				return this._ClimberProfile.Entity;
			}
			set
			{
				ClimberProfile previousValue = this._ClimberProfile.Entity;
				if (((previousValue != value) 
							|| (this._ClimberProfile.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ClimberProfile.Entity = null;
						previousValue.PlaceOutdoorDetails.Remove(this);
					}
					this._ClimberProfile.Entity = value;
					if ((value != null))
					{
						value.PlaceOutdoorDetails.Add(this);
						this._DescriptionByUserID = value.ID;
					}
					else
					{
						this._DescriptionByUserID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("ClimberProfile");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClimberProfile_PlaceOutdoorDetail1", Storage="_ClimberProfile1", ThisKey="DescriptionImageFileByUserID", OtherKey="ID", IsForeignKey=true)]
		public ClimberProfile ClimberProfile1
		{
			get
			{
				return this._ClimberProfile1.Entity;
			}
			set
			{
				ClimberProfile previousValue = this._ClimberProfile1.Entity;
				if (((previousValue != value) 
							|| (this._ClimberProfile1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ClimberProfile1.Entity = null;
						previousValue.PlaceOutdoorDetails1.Remove(this);
					}
					this._ClimberProfile1.Entity = value;
					if ((value != null))
					{
						value.PlaceOutdoorDetails1.Add(this);
						this._DescriptionImageFileByUserID = value.ID;
					}
					else
					{
						this._DescriptionImageFileByUserID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("ClimberProfile1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClimberProfile_PlaceOutdoorDetail2", Storage="_ClimberProfile2", ThisKey="DescriptionImageFile2ByUserID", OtherKey="ID", IsForeignKey=true)]
		public ClimberProfile ClimberProfile2
		{
			get
			{
				return this._ClimberProfile2.Entity;
			}
			set
			{
				ClimberProfile previousValue = this._ClimberProfile2.Entity;
				if (((previousValue != value) 
							|| (this._ClimberProfile2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ClimberProfile2.Entity = null;
						previousValue.PlaceOutdoorDetails2.Remove(this);
					}
					this._ClimberProfile2.Entity = value;
					if ((value != null))
					{
						value.PlaceOutdoorDetails2.Add(this);
						this._DescriptionImageFile2ByUserID = value.ID;
					}
					else
					{
						this._DescriptionImageFile2ByUserID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("ClimberProfile2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClimberProfile_PlaceOutdoorDetail3", Storage="_ClimberProfile3", ThisKey="DescriptionImageFile3ByUserID", OtherKey="ID", IsForeignKey=true)]
		public ClimberProfile ClimberProfile3
		{
			get
			{
				return this._ClimberProfile3.Entity;
			}
			set
			{
				ClimberProfile previousValue = this._ClimberProfile3.Entity;
				if (((previousValue != value) 
							|| (this._ClimberProfile3.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ClimberProfile3.Entity = null;
						previousValue.PlaceOutdoorDetails3.Remove(this);
					}
					this._ClimberProfile3.Entity = value;
					if ((value != null))
					{
						value.PlaceOutdoorDetails3.Add(this);
						this._DescriptionImageFile3ByUserID = value.ID;
					}
					else
					{
						this._DescriptionImageFile3ByUserID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("ClimberProfile3");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Place_PlaceOutdoorDetail", Storage="_Place", ThisKey="ID", OtherKey="ID", IsForeignKey=true)]
		public Place Place
		{
			get
			{
				return this._Place.Entity;
			}
			set
			{
				Place previousValue = this._Place.Entity;
				if (((previousValue != value) 
							|| (this._Place.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Place.Entity = null;
						previousValue.PlaceOutdoorDetail = null;
					}
					this._Place.Entity = value;
					if ((value != null))
					{
						value.PlaceOutdoorDetail = this;
						this._ID = value.ID;
					}
					else
					{
						this._ID = default(int);
					}
					this.SendPropertyChanged("Place");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PlaceOutdoorAuthorities(PlaceOutdoorAuthority entity)
		{
			this.SendPropertyChanging();
			entity.PlaceOutdoorDetail = this;
		}
		
		private void detach_PlaceOutdoorAuthorities(PlaceOutdoorAuthority entity)
		{
			this.SendPropertyChanging();
			entity.PlaceOutdoorDetail = null;
		}
		
		private void attach_PlaceOutdoorCrags(PlaceOutdoorCrag entity)
		{
			this.SendPropertyChanging();
			entity.PlaceOutdoorDetail = this;
		}
		
		private void detach_PlaceOutdoorCrags(PlaceOutdoorCrag entity)
		{
			this.SendPropertyChanging();
			entity.PlaceOutdoorDetail = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="ClimbFind.PlacesInAreas")]
	public partial class PlacesInArea : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AreaTagID;
		
		private int _PlaceID;
		
		private EntityRef<AreaTag> _AreaTag;
		
		private EntityRef<Place> _Place;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAreaTagIDChanging(int value);
    partial void OnAreaTagIDChanged();
    partial void OnPlaceIDChanging(int value);
    partial void OnPlaceIDChanged();
    #endregion
		
		public PlacesInArea()
		{
			this._AreaTag = default(EntityRef<AreaTag>);
			this._Place = default(EntityRef<Place>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AreaTagID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int AreaTagID
		{
			get
			{
				return this._AreaTagID;
			}
			set
			{
				if ((this._AreaTagID != value))
				{
					if (this._AreaTag.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAreaTagIDChanging(value);
					this.SendPropertyChanging();
					this._AreaTagID = value;
					this.SendPropertyChanged("AreaTagID");
					this.OnAreaTagIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlaceID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int PlaceID
		{
			get
			{
				return this._PlaceID;
			}
			set
			{
				if ((this._PlaceID != value))
				{
					if (this._Place.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPlaceIDChanging(value);
					this.SendPropertyChanging();
					this._PlaceID = value;
					this.SendPropertyChanged("PlaceID");
					this.OnPlaceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AreaTag_PlacesInArea", Storage="_AreaTag", ThisKey="AreaTagID", OtherKey="ID", IsForeignKey=true)]
		public AreaTag AreaTag
		{
			get
			{
				return this._AreaTag.Entity;
			}
			set
			{
				AreaTag previousValue = this._AreaTag.Entity;
				if (((previousValue != value) 
							|| (this._AreaTag.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AreaTag.Entity = null;
						previousValue.PlacesInAreas.Remove(this);
					}
					this._AreaTag.Entity = value;
					if ((value != null))
					{
						value.PlacesInAreas.Add(this);
						this._AreaTagID = value.ID;
					}
					else
					{
						this._AreaTagID = default(int);
					}
					this.SendPropertyChanged("AreaTag");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Place_PlacesInArea", Storage="_Place", ThisKey="PlaceID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Place Place
		{
			get
			{
				return this._Place.Entity;
			}
			set
			{
				Place previousValue = this._Place.Entity;
				if (((previousValue != value) 
							|| (this._Place.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Place.Entity = null;
						previousValue.PlacesInAreas.Remove(this);
					}
					this._Place.Entity = value;
					if ((value != null))
					{
						value.PlacesInAreas.Add(this);
						this._PlaceID = value.ID;
					}
					else
					{
						this._PlaceID = default(int);
					}
					this.SendPropertyChanged("Place");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="ClimbFind.PlaceUserClimbs")]
	public partial class PlaceUserClimb : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PlaceID;
		
		private System.Guid _UserID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPlaceIDChanging(int value);
    partial void OnPlaceIDChanged();
    partial void OnUserIDChanging(System.Guid value);
    partial void OnUserIDChanged();
    #endregion
		
		public PlaceUserClimb()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlaceID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int PlaceID
		{
			get
			{
				return this._PlaceID;
			}
			set
			{
				if ((this._PlaceID != value))
				{
					this.OnPlaceIDChanging(value);
					this.SendPropertyChanging();
					this._PlaceID = value;
					this.SendPropertyChanged("PlaceID");
					this.OnPlaceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="ClimbFind.SpecialPagesHTML")]
	public partial class SpecialPagesHTML
	{
		
		private int _ID;
		
		private string _ForPage;
		
		private string _PageHtml;
		
		public SpecialPagesHTML()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ForPage", DbType="NChar(45) NOT NULL", CanBeNull=false)]
		public string ForPage
		{
			get
			{
				return this._ForPage;
			}
			set
			{
				if ((this._ForPage != value))
				{
					this._ForPage = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageHtml", DbType="NVarChar(MAX)")]
		public string PageHtml
		{
			get
			{
				return this._PageHtml;
			}
			set
			{
				if ((this._PageHtml != value))
				{
					this._PageHtml = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="ClimbFind.UserInClub")]
	public partial class UserInClub : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ClubID;
		
		private System.Guid _UserID;
		
		private EntityRef<Club> _Club;
		
		private EntityRef<ClimberProfile> _ClimberProfile;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnClubIDChanging(int value);
    partial void OnClubIDChanged();
    partial void OnUserIDChanging(System.Guid value);
    partial void OnUserIDChanged();
    #endregion
		
		public UserInClub()
		{
			this._Club = default(EntityRef<Club>);
			this._ClimberProfile = default(EntityRef<ClimberProfile>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClubID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ClubID
		{
			get
			{
				return this._ClubID;
			}
			set
			{
				if ((this._ClubID != value))
				{
					if (this._Club.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClubIDChanging(value);
					this.SendPropertyChanging();
					this._ClubID = value;
					this.SendPropertyChanged("ClubID");
					this.OnClubIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._ClimberProfile.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Club_UserInClub", Storage="_Club", ThisKey="ClubID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Club Club
		{
			get
			{
				return this._Club.Entity;
			}
			set
			{
				Club previousValue = this._Club.Entity;
				if (((previousValue != value) 
							|| (this._Club.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Club.Entity = null;
						previousValue.UserInClubs.Remove(this);
					}
					this._Club.Entity = value;
					if ((value != null))
					{
						value.UserInClubs.Add(this);
						this._ClubID = value.ID;
					}
					else
					{
						this._ClubID = default(int);
					}
					this.SendPropertyChanged("Club");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClimberProfile_UserInClub", Storage="_ClimberProfile", ThisKey="UserID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public ClimberProfile ClimberProfile
		{
			get
			{
				return this._ClimberProfile.Entity;
			}
			set
			{
				ClimberProfile previousValue = this._ClimberProfile.Entity;
				if (((previousValue != value) 
							|| (this._ClimberProfile.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ClimberProfile.Entity = null;
						previousValue.UserInClubs.Remove(this);
					}
					this._ClimberProfile.Entity = value;
					if ((value != null))
					{
						value.UserInClubs.Add(this);
						this._UserID = value.ID;
					}
					else
					{
						this._UserID = default(System.Guid);
					}
					this.SendPropertyChanged("ClimberProfile");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="ClimbFind.UserMessage")]
	public partial class UserMessage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Guid _SendingUserID;
		
		private System.Guid _ReceivingUserID;
		
		private string _Subject;
		
		private string _Message;
		
		private System.DateTime _SentDateTime;
		
		private bool _SenderDeleted;
		
		private bool _ReceiverDeleted;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnSendingUserIDChanging(System.Guid value);
    partial void OnSendingUserIDChanged();
    partial void OnReceivingUserIDChanging(System.Guid value);
    partial void OnReceivingUserIDChanged();
    partial void OnSubjectChanging(string value);
    partial void OnSubjectChanged();
    partial void OnMessageChanging(string value);
    partial void OnMessageChanged();
    partial void OnSentDateTimeChanging(System.DateTime value);
    partial void OnSentDateTimeChanged();
    partial void OnSenderDeletedChanging(bool value);
    partial void OnSenderDeletedChanged();
    partial void OnReceiverDeletedChanging(bool value);
    partial void OnReceiverDeletedChanged();
    #endregion
		
		public UserMessage()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SendingUserID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid SendingUserID
		{
			get
			{
				return this._SendingUserID;
			}
			set
			{
				if ((this._SendingUserID != value))
				{
					this.OnSendingUserIDChanging(value);
					this.SendPropertyChanging();
					this._SendingUserID = value;
					this.SendPropertyChanged("SendingUserID");
					this.OnSendingUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceivingUserID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ReceivingUserID
		{
			get
			{
				return this._ReceivingUserID;
			}
			set
			{
				if ((this._ReceivingUserID != value))
				{
					this.OnReceivingUserIDChanging(value);
					this.SendPropertyChanging();
					this._ReceivingUserID = value;
					this.SendPropertyChanged("ReceivingUserID");
					this.OnReceivingUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Subject", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Subject
		{
			get
			{
				return this._Subject;
			}
			set
			{
				if ((this._Subject != value))
				{
					this.OnSubjectChanging(value);
					this.SendPropertyChanging();
					this._Subject = value;
					this.SendPropertyChanged("Subject");
					this.OnSubjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this.OnMessageChanging(value);
					this.SendPropertyChanging();
					this._Message = value;
					this.SendPropertyChanged("Message");
					this.OnMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SentDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime SentDateTime
		{
			get
			{
				return this._SentDateTime;
			}
			set
			{
				if ((this._SentDateTime != value))
				{
					this.OnSentDateTimeChanging(value);
					this.SendPropertyChanging();
					this._SentDateTime = value;
					this.SendPropertyChanged("SentDateTime");
					this.OnSentDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SenderDeleted", DbType="Bit NOT NULL")]
		public bool SenderDeleted
		{
			get
			{
				return this._SenderDeleted;
			}
			set
			{
				if ((this._SenderDeleted != value))
				{
					this.OnSenderDeletedChanging(value);
					this.SendPropertyChanging();
					this._SenderDeleted = value;
					this.SendPropertyChanged("SenderDeleted");
					this.OnSenderDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiverDeleted", DbType="Bit NOT NULL")]
		public bool ReceiverDeleted
		{
			get
			{
				return this._ReceiverDeleted;
			}
			set
			{
				if ((this._ReceiverDeleted != value))
				{
					this.OnReceiverDeletedChanging(value);
					this.SendPropertyChanging();
					this._ReceiverDeleted = value;
					this.SendPropertyChanged("ReceiverDeleted");
					this.OnReceiverDeletedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="ClimbFind.UserSettings")]
	public partial class UserSetting : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private int _PartnerSearchPlaceID;
		
		private short _PartnerSearchCountryID;
		
		private string _PartnerSearchArea;
		
		private short _PartnerSearchPlaceType;
		
		private short _HomePartnerCallCountries;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnPartnerSearchPlaceIDChanging(int value);
    partial void OnPartnerSearchPlaceIDChanged();
    partial void OnPartnerSearchCountryIDChanging(short value);
    partial void OnPartnerSearchCountryIDChanged();
    partial void OnPartnerSearchAreaChanging(string value);
    partial void OnPartnerSearchAreaChanged();
    partial void OnPartnerSearchPlaceTypeChanging(short value);
    partial void OnPartnerSearchPlaceTypeChanged();
    partial void OnHomePartnerCallCountriesChanging(short value);
    partial void OnHomePartnerCallCountriesChanged();
    #endregion
		
		public UserSetting()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartnerSearchPlaceID", DbType="Int NOT NULL")]
		public int PartnerSearchPlaceID
		{
			get
			{
				return this._PartnerSearchPlaceID;
			}
			set
			{
				if ((this._PartnerSearchPlaceID != value))
				{
					this.OnPartnerSearchPlaceIDChanging(value);
					this.SendPropertyChanging();
					this._PartnerSearchPlaceID = value;
					this.SendPropertyChanged("PartnerSearchPlaceID");
					this.OnPartnerSearchPlaceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartnerSearchCountryID", DbType="SmallInt NOT NULL")]
		public short PartnerSearchCountryID
		{
			get
			{
				return this._PartnerSearchCountryID;
			}
			set
			{
				if ((this._PartnerSearchCountryID != value))
				{
					this.OnPartnerSearchCountryIDChanging(value);
					this.SendPropertyChanging();
					this._PartnerSearchCountryID = value;
					this.SendPropertyChanged("PartnerSearchCountryID");
					this.OnPartnerSearchCountryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartnerSearchArea", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string PartnerSearchArea
		{
			get
			{
				return this._PartnerSearchArea;
			}
			set
			{
				if ((this._PartnerSearchArea != value))
				{
					this.OnPartnerSearchAreaChanging(value);
					this.SendPropertyChanging();
					this._PartnerSearchArea = value;
					this.SendPropertyChanged("PartnerSearchArea");
					this.OnPartnerSearchAreaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartnerSearchPlaceType", DbType="SmallInt NOT NULL")]
		public short PartnerSearchPlaceType
		{
			get
			{
				return this._PartnerSearchPlaceType;
			}
			set
			{
				if ((this._PartnerSearchPlaceType != value))
				{
					this.OnPartnerSearchPlaceTypeChanging(value);
					this.SendPropertyChanging();
					this._PartnerSearchPlaceType = value;
					this.SendPropertyChanged("PartnerSearchPlaceType");
					this.OnPartnerSearchPlaceTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HomePartnerCallCountries", DbType="SmallInt NOT NULL")]
		public short HomePartnerCallCountries
		{
			get
			{
				return this._HomePartnerCallCountries;
			}
			set
			{
				if ((this._HomePartnerCallCountries != value))
				{
					this.OnHomePartnerCallCountriesChanging(value);
					this.SendPropertyChanging();
					this._HomePartnerCallCountries = value;
					this.SendPropertyChanged("HomePartnerCallCountries");
					this.OnHomePartnerCallCountriesChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Applications")]
	public partial class aspnet_Application : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ApplicationName;
		
		private string _LoweredApplicationName;
		
		private System.Guid _ApplicationId;
		
		private string _Description;
		
		private EntitySet<aspnet_Membership> _aspnet_Memberships;
		
		private EntitySet<aspnet_User> _aspnet_Users;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationNameChanging(string value);
    partial void OnApplicationNameChanged();
    partial void OnLoweredApplicationNameChanging(string value);
    partial void OnLoweredApplicationNameChanged();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public aspnet_Application()
		{
			this._aspnet_Memberships = new EntitySet<aspnet_Membership>(new Action<aspnet_Membership>(this.attach_aspnet_Memberships), new Action<aspnet_Membership>(this.detach_aspnet_Memberships));
			this._aspnet_Users = new EntitySet<aspnet_User>(new Action<aspnet_User>(this.attach_aspnet_Users), new Action<aspnet_User>(this.detach_aspnet_Users));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string ApplicationName
		{
			get
			{
				return this._ApplicationName;
			}
			set
			{
				if ((this._ApplicationName != value))
				{
					this.OnApplicationNameChanging(value);
					this.SendPropertyChanging();
					this._ApplicationName = value;
					this.SendPropertyChanged("ApplicationName");
					this.OnApplicationNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoweredApplicationName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string LoweredApplicationName
		{
			get
			{
				return this._LoweredApplicationName;
			}
			set
			{
				if ((this._LoweredApplicationName != value))
				{
					this.OnLoweredApplicationNameChanging(value);
					this.SendPropertyChanging();
					this._LoweredApplicationName = value;
					this.SendPropertyChanged("LoweredApplicationName");
					this.OnLoweredApplicationNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(256)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Application_aspnet_Membership", Storage="_aspnet_Memberships", ThisKey="ApplicationId", OtherKey="ApplicationId")]
		public EntitySet<aspnet_Membership> aspnet_Memberships
		{
			get
			{
				return this._aspnet_Memberships;
			}
			set
			{
				this._aspnet_Memberships.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Application_aspnet_User", Storage="_aspnet_Users", ThisKey="ApplicationId", OtherKey="ApplicationId")]
		public EntitySet<aspnet_User> aspnet_Users
		{
			get
			{
				return this._aspnet_Users;
			}
			set
			{
				this._aspnet_Users.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_aspnet_Memberships(aspnet_Membership entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Application = this;
		}
		
		private void detach_aspnet_Memberships(aspnet_Membership entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Application = null;
		}
		
		private void attach_aspnet_Users(aspnet_User entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Application = this;
		}
		
		private void detach_aspnet_Users(aspnet_User entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Application = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Membership")]
	public partial class aspnet_Membership : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ApplicationId;
		
		private System.Guid _UserId;
		
		private string _Password;
		
		private int _PasswordFormat;
		
		private string _PasswordSalt;
		
		private string _MobilePIN;
		
		private string _Email;
		
		private string _LoweredEmail;
		
		private string _PasswordQuestion;
		
		private string _PasswordAnswer;
		
		private bool _IsApproved;
		
		private bool _IsLockedOut;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _LastLoginDate;
		
		private System.DateTime _LastPasswordChangedDate;
		
		private System.DateTime _LastLockoutDate;
		
		private int _FailedPasswordAttemptCount;
		
		private System.DateTime _FailedPasswordAttemptWindowStart;
		
		private int _FailedPasswordAnswerAttemptCount;
		
		private System.DateTime _FailedPasswordAnswerAttemptWindowStart;
		
		private string _Comment;
		
		private EntityRef<ClimberProfile> _ClimberProfile;
		
		private EntityRef<aspnet_Application> _aspnet_Application;
		
		private EntityRef<aspnet_User> _aspnet_User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnPasswordFormatChanging(int value);
    partial void OnPasswordFormatChanged();
    partial void OnPasswordSaltChanging(string value);
    partial void OnPasswordSaltChanged();
    partial void OnMobilePINChanging(string value);
    partial void OnMobilePINChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnLoweredEmailChanging(string value);
    partial void OnLoweredEmailChanged();
    partial void OnPasswordQuestionChanging(string value);
    partial void OnPasswordQuestionChanged();
    partial void OnPasswordAnswerChanging(string value);
    partial void OnPasswordAnswerChanged();
    partial void OnIsApprovedChanging(bool value);
    partial void OnIsApprovedChanged();
    partial void OnIsLockedOutChanging(bool value);
    partial void OnIsLockedOutChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnLastLoginDateChanging(System.DateTime value);
    partial void OnLastLoginDateChanged();
    partial void OnLastPasswordChangedDateChanging(System.DateTime value);
    partial void OnLastPasswordChangedDateChanged();
    partial void OnLastLockoutDateChanging(System.DateTime value);
    partial void OnLastLockoutDateChanged();
    partial void OnFailedPasswordAttemptCountChanging(int value);
    partial void OnFailedPasswordAttemptCountChanged();
    partial void OnFailedPasswordAttemptWindowStartChanging(System.DateTime value);
    partial void OnFailedPasswordAttemptWindowStartChanged();
    partial void OnFailedPasswordAnswerAttemptCountChanging(int value);
    partial void OnFailedPasswordAnswerAttemptCountChanged();
    partial void OnFailedPasswordAnswerAttemptWindowStartChanging(System.DateTime value);
    partial void OnFailedPasswordAnswerAttemptWindowStartChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    #endregion
		
		public aspnet_Membership()
		{
			this._ClimberProfile = default(EntityRef<ClimberProfile>);
			this._aspnet_Application = default(EntityRef<aspnet_Application>);
			this._aspnet_User = default(EntityRef<aspnet_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					if (this._aspnet_Application.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._aspnet_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordFormat", DbType="Int NOT NULL")]
		public int PasswordFormat
		{
			get
			{
				return this._PasswordFormat;
			}
			set
			{
				if ((this._PasswordFormat != value))
				{
					this.OnPasswordFormatChanging(value);
					this.SendPropertyChanging();
					this._PasswordFormat = value;
					this.SendPropertyChanged("PasswordFormat");
					this.OnPasswordFormatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordSalt", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string PasswordSalt
		{
			get
			{
				return this._PasswordSalt;
			}
			set
			{
				if ((this._PasswordSalt != value))
				{
					this.OnPasswordSaltChanging(value);
					this.SendPropertyChanging();
					this._PasswordSalt = value;
					this.SendPropertyChanged("PasswordSalt");
					this.OnPasswordSaltChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobilePIN", DbType="NVarChar(16)")]
		public string MobilePIN
		{
			get
			{
				return this._MobilePIN;
			}
			set
			{
				if ((this._MobilePIN != value))
				{
					this.OnMobilePINChanging(value);
					this.SendPropertyChanging();
					this._MobilePIN = value;
					this.SendPropertyChanged("MobilePIN");
					this.OnMobilePINChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(256)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoweredEmail", DbType="NVarChar(256)")]
		public string LoweredEmail
		{
			get
			{
				return this._LoweredEmail;
			}
			set
			{
				if ((this._LoweredEmail != value))
				{
					this.OnLoweredEmailChanging(value);
					this.SendPropertyChanging();
					this._LoweredEmail = value;
					this.SendPropertyChanged("LoweredEmail");
					this.OnLoweredEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordQuestion", DbType="NVarChar(256)")]
		public string PasswordQuestion
		{
			get
			{
				return this._PasswordQuestion;
			}
			set
			{
				if ((this._PasswordQuestion != value))
				{
					this.OnPasswordQuestionChanging(value);
					this.SendPropertyChanging();
					this._PasswordQuestion = value;
					this.SendPropertyChanged("PasswordQuestion");
					this.OnPasswordQuestionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordAnswer", DbType="NVarChar(128)")]
		public string PasswordAnswer
		{
			get
			{
				return this._PasswordAnswer;
			}
			set
			{
				if ((this._PasswordAnswer != value))
				{
					this.OnPasswordAnswerChanging(value);
					this.SendPropertyChanging();
					this._PasswordAnswer = value;
					this.SendPropertyChanged("PasswordAnswer");
					this.OnPasswordAnswerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsApproved", DbType="Bit NOT NULL")]
		public bool IsApproved
		{
			get
			{
				return this._IsApproved;
			}
			set
			{
				if ((this._IsApproved != value))
				{
					this.OnIsApprovedChanging(value);
					this.SendPropertyChanging();
					this._IsApproved = value;
					this.SendPropertyChanged("IsApproved");
					this.OnIsApprovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLockedOut", DbType="Bit NOT NULL")]
		public bool IsLockedOut
		{
			get
			{
				return this._IsLockedOut;
			}
			set
			{
				if ((this._IsLockedOut != value))
				{
					this.OnIsLockedOutChanging(value);
					this.SendPropertyChanging();
					this._IsLockedOut = value;
					this.SendPropertyChanged("IsLockedOut");
					this.OnIsLockedOutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLoginDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastLoginDate
		{
			get
			{
				return this._LastLoginDate;
			}
			set
			{
				if ((this._LastLoginDate != value))
				{
					this.OnLastLoginDateChanging(value);
					this.SendPropertyChanging();
					this._LastLoginDate = value;
					this.SendPropertyChanged("LastLoginDate");
					this.OnLastLoginDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastPasswordChangedDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastPasswordChangedDate
		{
			get
			{
				return this._LastPasswordChangedDate;
			}
			set
			{
				if ((this._LastPasswordChangedDate != value))
				{
					this.OnLastPasswordChangedDateChanging(value);
					this.SendPropertyChanging();
					this._LastPasswordChangedDate = value;
					this.SendPropertyChanged("LastPasswordChangedDate");
					this.OnLastPasswordChangedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLockoutDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastLockoutDate
		{
			get
			{
				return this._LastLockoutDate;
			}
			set
			{
				if ((this._LastLockoutDate != value))
				{
					this.OnLastLockoutDateChanging(value);
					this.SendPropertyChanging();
					this._LastLockoutDate = value;
					this.SendPropertyChanged("LastLockoutDate");
					this.OnLastLockoutDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAttemptCount", DbType="Int NOT NULL")]
		public int FailedPasswordAttemptCount
		{
			get
			{
				return this._FailedPasswordAttemptCount;
			}
			set
			{
				if ((this._FailedPasswordAttemptCount != value))
				{
					this.OnFailedPasswordAttemptCountChanging(value);
					this.SendPropertyChanging();
					this._FailedPasswordAttemptCount = value;
					this.SendPropertyChanged("FailedPasswordAttemptCount");
					this.OnFailedPasswordAttemptCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAttemptWindowStart", DbType="DateTime NOT NULL")]
		public System.DateTime FailedPasswordAttemptWindowStart
		{
			get
			{
				return this._FailedPasswordAttemptWindowStart;
			}
			set
			{
				if ((this._FailedPasswordAttemptWindowStart != value))
				{
					this.OnFailedPasswordAttemptWindowStartChanging(value);
					this.SendPropertyChanging();
					this._FailedPasswordAttemptWindowStart = value;
					this.SendPropertyChanged("FailedPasswordAttemptWindowStart");
					this.OnFailedPasswordAttemptWindowStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAnswerAttemptCount", DbType="Int NOT NULL")]
		public int FailedPasswordAnswerAttemptCount
		{
			get
			{
				return this._FailedPasswordAnswerAttemptCount;
			}
			set
			{
				if ((this._FailedPasswordAnswerAttemptCount != value))
				{
					this.OnFailedPasswordAnswerAttemptCountChanging(value);
					this.SendPropertyChanging();
					this._FailedPasswordAnswerAttemptCount = value;
					this.SendPropertyChanged("FailedPasswordAnswerAttemptCount");
					this.OnFailedPasswordAnswerAttemptCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAnswerAttemptWindowStart", DbType="DateTime NOT NULL")]
		public System.DateTime FailedPasswordAnswerAttemptWindowStart
		{
			get
			{
				return this._FailedPasswordAnswerAttemptWindowStart;
			}
			set
			{
				if ((this._FailedPasswordAnswerAttemptWindowStart != value))
				{
					this.OnFailedPasswordAnswerAttemptWindowStartChanging(value);
					this.SendPropertyChanging();
					this._FailedPasswordAnswerAttemptWindowStart = value;
					this.SendPropertyChanged("FailedPasswordAnswerAttemptWindowStart");
					this.OnFailedPasswordAnswerAttemptWindowStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Membership_ClimberProfile", Storage="_ClimberProfile", ThisKey="UserId", OtherKey="ID", IsUnique=true, IsForeignKey=false)]
		public ClimberProfile ClimberProfile
		{
			get
			{
				return this._ClimberProfile.Entity;
			}
			set
			{
				ClimberProfile previousValue = this._ClimberProfile.Entity;
				if (((previousValue != value) 
							|| (this._ClimberProfile.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ClimberProfile.Entity = null;
						previousValue.aspnet_Membership = null;
					}
					this._ClimberProfile.Entity = value;
					if ((value != null))
					{
						value.aspnet_Membership = this;
					}
					this.SendPropertyChanged("ClimberProfile");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Application_aspnet_Membership", Storage="_aspnet_Application", ThisKey="ApplicationId", OtherKey="ApplicationId", IsForeignKey=true)]
		public aspnet_Application aspnet_Application
		{
			get
			{
				return this._aspnet_Application.Entity;
			}
			set
			{
				aspnet_Application previousValue = this._aspnet_Application.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Application.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Application.Entity = null;
						previousValue.aspnet_Memberships.Remove(this);
					}
					this._aspnet_Application.Entity = value;
					if ((value != null))
					{
						value.aspnet_Memberships.Add(this);
						this._ApplicationId = value.ApplicationId;
					}
					else
					{
						this._ApplicationId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_Application");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_Membership", Storage="_aspnet_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public aspnet_User aspnet_User
		{
			get
			{
				return this._aspnet_User.Entity;
			}
			set
			{
				aspnet_User previousValue = this._aspnet_User.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_User.Entity = null;
						previousValue.aspnet_Membership = null;
					}
					this._aspnet_User.Entity = value;
					if ((value != null))
					{
						value.aspnet_Membership = this;
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Profile")]
	public partial class aspnet_Profile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UserId;
		
		private string _PropertyNames;
		
		private string _PropertyValuesString;
		
		private System.Data.Linq.Binary _PropertyValuesBinary;
		
		private System.DateTime _LastUpdatedDate;
		
		private EntityRef<aspnet_User> _aspnet_User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnPropertyNamesChanging(string value);
    partial void OnPropertyNamesChanged();
    partial void OnPropertyValuesStringChanging(string value);
    partial void OnPropertyValuesStringChanged();
    partial void OnPropertyValuesBinaryChanging(System.Data.Linq.Binary value);
    partial void OnPropertyValuesBinaryChanged();
    partial void OnLastUpdatedDateChanging(System.DateTime value);
    partial void OnLastUpdatedDateChanged();
    #endregion
		
		public aspnet_Profile()
		{
			this._aspnet_User = default(EntityRef<aspnet_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._aspnet_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropertyNames", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string PropertyNames
		{
			get
			{
				return this._PropertyNames;
			}
			set
			{
				if ((this._PropertyNames != value))
				{
					this.OnPropertyNamesChanging(value);
					this.SendPropertyChanging();
					this._PropertyNames = value;
					this.SendPropertyChanged("PropertyNames");
					this.OnPropertyNamesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropertyValuesString", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string PropertyValuesString
		{
			get
			{
				return this._PropertyValuesString;
			}
			set
			{
				if ((this._PropertyValuesString != value))
				{
					this.OnPropertyValuesStringChanging(value);
					this.SendPropertyChanging();
					this._PropertyValuesString = value;
					this.SendPropertyChanged("PropertyValuesString");
					this.OnPropertyValuesStringChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropertyValuesBinary", DbType="Image NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary PropertyValuesBinary
		{
			get
			{
				return this._PropertyValuesBinary;
			}
			set
			{
				if ((this._PropertyValuesBinary != value))
				{
					this.OnPropertyValuesBinaryChanging(value);
					this.SendPropertyChanging();
					this._PropertyValuesBinary = value;
					this.SendPropertyChanged("PropertyValuesBinary");
					this.OnPropertyValuesBinaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastUpdatedDate
		{
			get
			{
				return this._LastUpdatedDate;
			}
			set
			{
				if ((this._LastUpdatedDate != value))
				{
					this.OnLastUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedDate = value;
					this.SendPropertyChanged("LastUpdatedDate");
					this.OnLastUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_Profile", Storage="_aspnet_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public aspnet_User aspnet_User
		{
			get
			{
				return this._aspnet_User.Entity;
			}
			set
			{
				aspnet_User previousValue = this._aspnet_User.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_User.Entity = null;
						previousValue.aspnet_Profile = null;
					}
					this._aspnet_User.Entity = value;
					if ((value != null))
					{
						value.aspnet_Profile = this;
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Users")]
	public partial class aspnet_User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ApplicationId;
		
		private System.Guid _UserId;
		
		private string _UserName;
		
		private string _LoweredUserName;
		
		private string _MobileAlias;
		
		private bool _IsAnonymous;
		
		private System.DateTime _LastActivityDate;
		
		private EntityRef<ClimberProfile> _ClimberProfile;
		
		private EntitySet<Feedback> _Feedbacks;
		
		private EntityRef<aspnet_Membership> _aspnet_Membership;
		
		private EntityRef<aspnet_Profile> _aspnet_Profile;
		
		private EntityRef<aspnet_Application> _aspnet_Application;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnLoweredUserNameChanging(string value);
    partial void OnLoweredUserNameChanged();
    partial void OnMobileAliasChanging(string value);
    partial void OnMobileAliasChanged();
    partial void OnIsAnonymousChanging(bool value);
    partial void OnIsAnonymousChanged();
    partial void OnLastActivityDateChanging(System.DateTime value);
    partial void OnLastActivityDateChanged();
    #endregion
		
		public aspnet_User()
		{
			this._ClimberProfile = default(EntityRef<ClimberProfile>);
			this._Feedbacks = new EntitySet<Feedback>(new Action<Feedback>(this.attach_Feedbacks), new Action<Feedback>(this.detach_Feedbacks));
			this._aspnet_Membership = default(EntityRef<aspnet_Membership>);
			this._aspnet_Profile = default(EntityRef<aspnet_Profile>);
			this._aspnet_Application = default(EntityRef<aspnet_Application>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					if (this._aspnet_Application.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoweredUserName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string LoweredUserName
		{
			get
			{
				return this._LoweredUserName;
			}
			set
			{
				if ((this._LoweredUserName != value))
				{
					this.OnLoweredUserNameChanging(value);
					this.SendPropertyChanging();
					this._LoweredUserName = value;
					this.SendPropertyChanged("LoweredUserName");
					this.OnLoweredUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileAlias", DbType="NVarChar(16)")]
		public string MobileAlias
		{
			get
			{
				return this._MobileAlias;
			}
			set
			{
				if ((this._MobileAlias != value))
				{
					this.OnMobileAliasChanging(value);
					this.SendPropertyChanging();
					this._MobileAlias = value;
					this.SendPropertyChanged("MobileAlias");
					this.OnMobileAliasChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAnonymous", DbType="Bit NOT NULL")]
		public bool IsAnonymous
		{
			get
			{
				return this._IsAnonymous;
			}
			set
			{
				if ((this._IsAnonymous != value))
				{
					this.OnIsAnonymousChanging(value);
					this.SendPropertyChanging();
					this._IsAnonymous = value;
					this.SendPropertyChanged("IsAnonymous");
					this.OnIsAnonymousChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastActivityDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastActivityDate
		{
			get
			{
				return this._LastActivityDate;
			}
			set
			{
				if ((this._LastActivityDate != value))
				{
					this.OnLastActivityDateChanging(value);
					this.SendPropertyChanging();
					this._LastActivityDate = value;
					this.SendPropertyChanged("LastActivityDate");
					this.OnLastActivityDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_ClimberProfile", Storage="_ClimberProfile", ThisKey="UserId", OtherKey="ID", IsUnique=true, IsForeignKey=false)]
		public ClimberProfile ClimberProfile
		{
			get
			{
				return this._ClimberProfile.Entity;
			}
			set
			{
				ClimberProfile previousValue = this._ClimberProfile.Entity;
				if (((previousValue != value) 
							|| (this._ClimberProfile.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ClimberProfile.Entity = null;
						previousValue.aspnet_User = null;
					}
					this._ClimberProfile.Entity = value;
					if ((value != null))
					{
						value.aspnet_User = this;
					}
					this.SendPropertyChanged("ClimberProfile");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_Feedback", Storage="_Feedbacks", ThisKey="UserId", OtherKey="UserID")]
		public EntitySet<Feedback> Feedbacks
		{
			get
			{
				return this._Feedbacks;
			}
			set
			{
				this._Feedbacks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_Membership", Storage="_aspnet_Membership", ThisKey="UserId", OtherKey="UserId", IsUnique=true, IsForeignKey=false)]
		public aspnet_Membership aspnet_Membership
		{
			get
			{
				return this._aspnet_Membership.Entity;
			}
			set
			{
				aspnet_Membership previousValue = this._aspnet_Membership.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Membership.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Membership.Entity = null;
						previousValue.aspnet_User = null;
					}
					this._aspnet_Membership.Entity = value;
					if ((value != null))
					{
						value.aspnet_User = this;
					}
					this.SendPropertyChanged("aspnet_Membership");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_Profile", Storage="_aspnet_Profile", ThisKey="UserId", OtherKey="UserId", IsUnique=true, IsForeignKey=false)]
		public aspnet_Profile aspnet_Profile
		{
			get
			{
				return this._aspnet_Profile.Entity;
			}
			set
			{
				aspnet_Profile previousValue = this._aspnet_Profile.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Profile.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Profile.Entity = null;
						previousValue.aspnet_User = null;
					}
					this._aspnet_Profile.Entity = value;
					if ((value != null))
					{
						value.aspnet_User = this;
					}
					this.SendPropertyChanged("aspnet_Profile");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Application_aspnet_User", Storage="_aspnet_Application", ThisKey="ApplicationId", OtherKey="ApplicationId", IsForeignKey=true)]
		public aspnet_Application aspnet_Application
		{
			get
			{
				return this._aspnet_Application.Entity;
			}
			set
			{
				aspnet_Application previousValue = this._aspnet_Application.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Application.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Application.Entity = null;
						previousValue.aspnet_Users.Remove(this);
					}
					this._aspnet_Application.Entity = value;
					if ((value != null))
					{
						value.aspnet_Users.Add(this);
						this._ApplicationId = value.ApplicationId;
					}
					else
					{
						this._ApplicationId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_Application");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Feedbacks(Feedback entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_User = this;
		}
		
		private void detach_Feedbacks(Feedback entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_User = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="ClimbFind.Place")]
	public partial class Place : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private string _ShortName;
		
		private short _CountryID;
		
		private string _Description;
		
		private string _FriendlyUrlName;
		
		private string _FriendlyUrlLocation;
		
		private string _MetaKeywords;
		
		private string _MetaDescription;
		
		private bool _IsIndoor;
		
		private decimal _Latitude;
		
		private decimal _Longitude;
		
		private System.Guid _MessageBoardID;
		
		private string _PrimaryImageFile;
		
		private System.Guid _CreatedByUserID;
		
		private EntitySet<PartnerCallPlace> _PartnerCallPlaces;
		
		private EntitySet<PartnerCallSubscription> _PartnerCallSubscriptions;
		
		private EntityRef<PlaceIndoorDetail> _PlaceIndoorDetail;
		
		private EntitySet<PlaceMediaShare> _PlaceMediaShares;
		
		private EntityRef<PlaceOutdoorDetail> _PlaceOutdoorDetail;
		
		private EntitySet<PlacesInArea> _PlacesInAreas;
		
		private EntityRef<ClimberProfile> _ClimberProfile;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnShortNameChanging(string value);
    partial void OnShortNameChanged();
    partial void OnCountryIDChanging(short value);
    partial void OnCountryIDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnFriendlyUrlNameChanging(string value);
    partial void OnFriendlyUrlNameChanged();
    partial void OnFriendlyUrlLocationChanging(string value);
    partial void OnFriendlyUrlLocationChanged();
    partial void OnMetaKeywordsChanging(string value);
    partial void OnMetaKeywordsChanged();
    partial void OnMetaDescriptionChanging(string value);
    partial void OnMetaDescriptionChanged();
    partial void OnIsIndoorChanging(bool value);
    partial void OnIsIndoorChanged();
    partial void OnLatitudeChanging(decimal value);
    partial void OnLatitudeChanged();
    partial void OnLongitudeChanging(decimal value);
    partial void OnLongitudeChanged();
    partial void OnMessageBoardIDChanging(System.Guid value);
    partial void OnMessageBoardIDChanged();
    partial void OnPrimaryImageFileChanging(string value);
    partial void OnPrimaryImageFileChanged();
    partial void OnCreatedByUserIDChanging(System.Guid value);
    partial void OnCreatedByUserIDChanged();
    #endregion
		
		public Place()
		{
			this._PartnerCallPlaces = new EntitySet<PartnerCallPlace>(new Action<PartnerCallPlace>(this.attach_PartnerCallPlaces), new Action<PartnerCallPlace>(this.detach_PartnerCallPlaces));
			this._PartnerCallSubscriptions = new EntitySet<PartnerCallSubscription>(new Action<PartnerCallSubscription>(this.attach_PartnerCallSubscriptions), new Action<PartnerCallSubscription>(this.detach_PartnerCallSubscriptions));
			this._PlaceIndoorDetail = default(EntityRef<PlaceIndoorDetail>);
			this._PlaceMediaShares = new EntitySet<PlaceMediaShare>(new Action<PlaceMediaShare>(this.attach_PlaceMediaShares), new Action<PlaceMediaShare>(this.detach_PlaceMediaShares));
			this._PlaceOutdoorDetail = default(EntityRef<PlaceOutdoorDetail>);
			this._PlacesInAreas = new EntitySet<PlacesInArea>(new Action<PlacesInArea>(this.attach_PlacesInAreas), new Action<PlacesInArea>(this.detach_PlacesInAreas));
			this._ClimberProfile = default(EntityRef<ClimberProfile>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="NVarChar(50)")]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this.OnShortNameChanging(value);
					this.SendPropertyChanging();
					this._ShortName = value;
					this.SendPropertyChanged("ShortName");
					this.OnShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryID", DbType="SmallInt NOT NULL")]
		public short CountryID
		{
			get
			{
				return this._CountryID;
			}
			set
			{
				if ((this._CountryID != value))
				{
					this.OnCountryIDChanging(value);
					this.SendPropertyChanging();
					this._CountryID = value;
					this.SendPropertyChanged("CountryID");
					this.OnCountryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FriendlyUrlName", DbType="NVarChar(150)")]
		public string FriendlyUrlName
		{
			get
			{
				return this._FriendlyUrlName;
			}
			set
			{
				if ((this._FriendlyUrlName != value))
				{
					this.OnFriendlyUrlNameChanging(value);
					this.SendPropertyChanging();
					this._FriendlyUrlName = value;
					this.SendPropertyChanged("FriendlyUrlName");
					this.OnFriendlyUrlNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FriendlyUrlLocation", DbType="NVarChar(150)")]
		public string FriendlyUrlLocation
		{
			get
			{
				return this._FriendlyUrlLocation;
			}
			set
			{
				if ((this._FriendlyUrlLocation != value))
				{
					this.OnFriendlyUrlLocationChanging(value);
					this.SendPropertyChanging();
					this._FriendlyUrlLocation = value;
					this.SendPropertyChanged("FriendlyUrlLocation");
					this.OnFriendlyUrlLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MetaKeywords", DbType="NVarChar(255)")]
		public string MetaKeywords
		{
			get
			{
				return this._MetaKeywords;
			}
			set
			{
				if ((this._MetaKeywords != value))
				{
					this.OnMetaKeywordsChanging(value);
					this.SendPropertyChanging();
					this._MetaKeywords = value;
					this.SendPropertyChanged("MetaKeywords");
					this.OnMetaKeywordsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MetaDescription", DbType="NVarChar(255)")]
		public string MetaDescription
		{
			get
			{
				return this._MetaDescription;
			}
			set
			{
				if ((this._MetaDescription != value))
				{
					this.OnMetaDescriptionChanging(value);
					this.SendPropertyChanging();
					this._MetaDescription = value;
					this.SendPropertyChanged("MetaDescription");
					this.OnMetaDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsIndoor", DbType="Bit NOT NULL")]
		public bool IsIndoor
		{
			get
			{
				return this._IsIndoor;
			}
			set
			{
				if ((this._IsIndoor != value))
				{
					this.OnIsIndoorChanging(value);
					this.SendPropertyChanging();
					this._IsIndoor = value;
					this.SendPropertyChanged("IsIndoor");
					this.OnIsIndoorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Latitude", DbType="Decimal(18,12) NOT NULL")]
		public decimal Latitude
		{
			get
			{
				return this._Latitude;
			}
			set
			{
				if ((this._Latitude != value))
				{
					this.OnLatitudeChanging(value);
					this.SendPropertyChanging();
					this._Latitude = value;
					this.SendPropertyChanged("Latitude");
					this.OnLatitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Longitude", DbType="Decimal(18,12) NOT NULL")]
		public decimal Longitude
		{
			get
			{
				return this._Longitude;
			}
			set
			{
				if ((this._Longitude != value))
				{
					this.OnLongitudeChanging(value);
					this.SendPropertyChanging();
					this._Longitude = value;
					this.SendPropertyChanged("Longitude");
					this.OnLongitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MessageBoardID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid MessageBoardID
		{
			get
			{
				return this._MessageBoardID;
			}
			set
			{
				if ((this._MessageBoardID != value))
				{
					this.OnMessageBoardIDChanging(value);
					this.SendPropertyChanging();
					this._MessageBoardID = value;
					this.SendPropertyChanged("MessageBoardID");
					this.OnMessageBoardIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrimaryImageFile", DbType="NVarChar(100)")]
		public string PrimaryImageFile
		{
			get
			{
				return this._PrimaryImageFile;
			}
			set
			{
				if ((this._PrimaryImageFile != value))
				{
					this.OnPrimaryImageFileChanging(value);
					this.SendPropertyChanging();
					this._PrimaryImageFile = value;
					this.SendPropertyChanged("PrimaryImageFile");
					this.OnPrimaryImageFileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid CreatedByUserID
		{
			get
			{
				return this._CreatedByUserID;
			}
			set
			{
				if ((this._CreatedByUserID != value))
				{
					if (this._ClimberProfile.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserID = value;
					this.SendPropertyChanged("CreatedByUserID");
					this.OnCreatedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Place_PartnerCallPlace", Storage="_PartnerCallPlaces", ThisKey="ID", OtherKey="PlaceID")]
		public EntitySet<PartnerCallPlace> PartnerCallPlaces
		{
			get
			{
				return this._PartnerCallPlaces;
			}
			set
			{
				this._PartnerCallPlaces.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Place_PartnerCallSubscription", Storage="_PartnerCallSubscriptions", ThisKey="ID", OtherKey="PlaceID")]
		public EntitySet<PartnerCallSubscription> PartnerCallSubscriptions
		{
			get
			{
				return this._PartnerCallSubscriptions;
			}
			set
			{
				this._PartnerCallSubscriptions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Place_PlaceIndoorDetail", Storage="_PlaceIndoorDetail", ThisKey="ID", OtherKey="ID", IsUnique=true, IsForeignKey=false)]
		public PlaceIndoorDetail PlaceIndoorDetail
		{
			get
			{
				return this._PlaceIndoorDetail.Entity;
			}
			set
			{
				PlaceIndoorDetail previousValue = this._PlaceIndoorDetail.Entity;
				if (((previousValue != value) 
							|| (this._PlaceIndoorDetail.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PlaceIndoorDetail.Entity = null;
						previousValue.Place = null;
					}
					this._PlaceIndoorDetail.Entity = value;
					if ((value != null))
					{
						value.Place = this;
					}
					this.SendPropertyChanged("PlaceIndoorDetail");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Place_PlaceMediaShare", Storage="_PlaceMediaShares", ThisKey="ID", OtherKey="PlaceID")]
		public EntitySet<PlaceMediaShare> PlaceMediaShares
		{
			get
			{
				return this._PlaceMediaShares;
			}
			set
			{
				this._PlaceMediaShares.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Place_PlaceOutdoorDetail", Storage="_PlaceOutdoorDetail", ThisKey="ID", OtherKey="ID", IsUnique=true, IsForeignKey=false)]
		public PlaceOutdoorDetail PlaceOutdoorDetail
		{
			get
			{
				return this._PlaceOutdoorDetail.Entity;
			}
			set
			{
				PlaceOutdoorDetail previousValue = this._PlaceOutdoorDetail.Entity;
				if (((previousValue != value) 
							|| (this._PlaceOutdoorDetail.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PlaceOutdoorDetail.Entity = null;
						previousValue.Place = null;
					}
					this._PlaceOutdoorDetail.Entity = value;
					if ((value != null))
					{
						value.Place = this;
					}
					this.SendPropertyChanged("PlaceOutdoorDetail");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Place_PlacesInArea", Storage="_PlacesInAreas", ThisKey="ID", OtherKey="PlaceID")]
		public EntitySet<PlacesInArea> PlacesInAreas
		{
			get
			{
				return this._PlacesInAreas;
			}
			set
			{
				this._PlacesInAreas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClimberProfile_Place", Storage="_ClimberProfile", ThisKey="CreatedByUserID", OtherKey="ID", IsForeignKey=true)]
		public ClimberProfile ClimberProfile
		{
			get
			{
				return this._ClimberProfile.Entity;
			}
			set
			{
				ClimberProfile previousValue = this._ClimberProfile.Entity;
				if (((previousValue != value) 
							|| (this._ClimberProfile.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ClimberProfile.Entity = null;
						previousValue.Places.Remove(this);
					}
					this._ClimberProfile.Entity = value;
					if ((value != null))
					{
						value.Places.Add(this);
						this._CreatedByUserID = value.ID;
					}
					else
					{
						this._CreatedByUserID = default(System.Guid);
					}
					this.SendPropertyChanged("ClimberProfile");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PartnerCallPlaces(PartnerCallPlace entity)
		{
			this.SendPropertyChanging();
			entity.Place = this;
		}
		
		private void detach_PartnerCallPlaces(PartnerCallPlace entity)
		{
			this.SendPropertyChanging();
			entity.Place = null;
		}
		
		private void attach_PartnerCallSubscriptions(PartnerCallSubscription entity)
		{
			this.SendPropertyChanging();
			entity.Place = this;
		}
		
		private void detach_PartnerCallSubscriptions(PartnerCallSubscription entity)
		{
			this.SendPropertyChanging();
			entity.Place = null;
		}
		
		private void attach_PlaceMediaShares(PlaceMediaShare entity)
		{
			this.SendPropertyChanging();
			entity.Place = this;
		}
		
		private void detach_PlaceMediaShares(PlaceMediaShare entity)
		{
			this.SendPropertyChanging();
			entity.Place = null;
		}
		
		private void attach_PlacesInAreas(PlacesInArea entity)
		{
			this.SendPropertyChanging();
			entity.Place = this;
		}
		
		private void detach_PlacesInAreas(PlacesInArea entity)
		{
			this.SendPropertyChanging();
			entity.Place = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="ClimbFind.PartnerCallSurvey")]
	public partial class PartnerCallSurvey : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Guid _UserID;
		
		private System.Guid _PartnerCallID;
		
		private string _Reason;
		
		private int _NumberOfPeopleWhoContacted;
		
		private System.DateTime _DeletedDateTime;
		
		private EntityRef<PartnerCall> _PartnerCall;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnUserIDChanging(System.Guid value);
    partial void OnUserIDChanged();
    partial void OnPartnerCallIDChanging(System.Guid value);
    partial void OnPartnerCallIDChanged();
    partial void OnReasonChanging(string value);
    partial void OnReasonChanged();
    partial void OnNumberOfPeopleWhoContactedChanging(int value);
    partial void OnNumberOfPeopleWhoContactedChanged();
    partial void OnDeletedDateTimeChanging(System.DateTime value);
    partial void OnDeletedDateTimeChanged();
    #endregion
		
		public PartnerCallSurvey()
		{
			this._PartnerCall = default(EntityRef<PartnerCall>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartnerCallID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid PartnerCallID
		{
			get
			{
				return this._PartnerCallID;
			}
			set
			{
				if ((this._PartnerCallID != value))
				{
					if (this._PartnerCall.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPartnerCallIDChanging(value);
					this.SendPropertyChanging();
					this._PartnerCallID = value;
					this.SendPropertyChanged("PartnerCallID");
					this.OnPartnerCallIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reason", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Reason
		{
			get
			{
				return this._Reason;
			}
			set
			{
				if ((this._Reason != value))
				{
					this.OnReasonChanging(value);
					this.SendPropertyChanging();
					this._Reason = value;
					this.SendPropertyChanged("Reason");
					this.OnReasonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberOfPeopleWhoContacted", DbType="Int NOT NULL")]
		public int NumberOfPeopleWhoContacted
		{
			get
			{
				return this._NumberOfPeopleWhoContacted;
			}
			set
			{
				if ((this._NumberOfPeopleWhoContacted != value))
				{
					this.OnNumberOfPeopleWhoContactedChanging(value);
					this.SendPropertyChanging();
					this._NumberOfPeopleWhoContacted = value;
					this.SendPropertyChanged("NumberOfPeopleWhoContacted");
					this.OnNumberOfPeopleWhoContactedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeletedDateTime", DbType="SmallDateTime NOT NULL")]
		public System.DateTime DeletedDateTime
		{
			get
			{
				return this._DeletedDateTime;
			}
			set
			{
				if ((this._DeletedDateTime != value))
				{
					this.OnDeletedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._DeletedDateTime = value;
					this.SendPropertyChanged("DeletedDateTime");
					this.OnDeletedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PartnerCall_PartnerCallSurvey", Storage="_PartnerCall", ThisKey="PartnerCallID", OtherKey="ID", IsForeignKey=true)]
		public PartnerCall PartnerCall
		{
			get
			{
				return this._PartnerCall.Entity;
			}
			set
			{
				PartnerCall previousValue = this._PartnerCall.Entity;
				if (((previousValue != value) 
							|| (this._PartnerCall.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PartnerCall.Entity = null;
						previousValue.PartnerCallSurveys.Remove(this);
					}
					this._PartnerCall.Entity = value;
					if ((value != null))
					{
						value.PartnerCallSurveys.Add(this);
						this._PartnerCallID = value.ID;
					}
					else
					{
						this._PartnerCallID = default(System.Guid);
					}
					this.SendPropertyChanged("PartnerCall");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="ClimbFind.PartnerCall")]
	public partial class PartnerCall : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Guid _ClimberProfileID;
		
		private bool _ToAlpine;
		
		private bool _ToBoulder;
		
		private bool _ToTopRope;
		
		private bool _ToTrad;
		
		private bool _ToLeadClimb;
		
		private string _Message;
		
		private bool _IsIndoor;
		
		private System.DateTime _PostedDateTime;
		
		private short _CountryID;
		
		private bool _Deleted;
		
		private bool _HiddenOnGymPartnerPage;
		
		private EntitySet<PartnerCallPlace> _PartnerCallPlaces;
		
		private EntitySet<PartnerCallReply> _PartnerCallReplies;
		
		private EntitySet<PartnerCallSurvey> _PartnerCallSurveys;
		
		private EntityRef<ClimberProfile> _ClimberProfile;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnClimberProfileIDChanging(System.Guid value);
    partial void OnClimberProfileIDChanged();
    partial void OnToAlpineChanging(bool value);
    partial void OnToAlpineChanged();
    partial void OnToBoulderChanging(bool value);
    partial void OnToBoulderChanged();
    partial void OnToTopRopeChanging(bool value);
    partial void OnToTopRopeChanged();
    partial void OnToTradChanging(bool value);
    partial void OnToTradChanged();
    partial void OnToLeadClimbChanging(bool value);
    partial void OnToLeadClimbChanged();
    partial void OnMessageChanging(string value);
    partial void OnMessageChanged();
    partial void OnIsIndoorChanging(bool value);
    partial void OnIsIndoorChanged();
    partial void OnPostedDateTimeChanging(System.DateTime value);
    partial void OnPostedDateTimeChanged();
    partial void OnCountryIDChanging(short value);
    partial void OnCountryIDChanged();
    partial void OnDeletedChanging(bool value);
    partial void OnDeletedChanged();
    partial void OnHiddenOnGymPartnerPageChanging(bool value);
    partial void OnHiddenOnGymPartnerPageChanged();
    #endregion
		
		public PartnerCall()
		{
			this._PartnerCallPlaces = new EntitySet<PartnerCallPlace>(new Action<PartnerCallPlace>(this.attach_PartnerCallPlaces), new Action<PartnerCallPlace>(this.detach_PartnerCallPlaces));
			this._PartnerCallReplies = new EntitySet<PartnerCallReply>(new Action<PartnerCallReply>(this.attach_PartnerCallReplies), new Action<PartnerCallReply>(this.detach_PartnerCallReplies));
			this._PartnerCallSurveys = new EntitySet<PartnerCallSurvey>(new Action<PartnerCallSurvey>(this.attach_PartnerCallSurveys), new Action<PartnerCallSurvey>(this.detach_PartnerCallSurveys));
			this._ClimberProfile = default(EntityRef<ClimberProfile>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClimberProfileID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ClimberProfileID
		{
			get
			{
				return this._ClimberProfileID;
			}
			set
			{
				if ((this._ClimberProfileID != value))
				{
					if (this._ClimberProfile.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClimberProfileIDChanging(value);
					this.SendPropertyChanging();
					this._ClimberProfileID = value;
					this.SendPropertyChanged("ClimberProfileID");
					this.OnClimberProfileIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToAlpine", DbType="Bit NOT NULL")]
		public bool ToAlpine
		{
			get
			{
				return this._ToAlpine;
			}
			set
			{
				if ((this._ToAlpine != value))
				{
					this.OnToAlpineChanging(value);
					this.SendPropertyChanging();
					this._ToAlpine = value;
					this.SendPropertyChanged("ToAlpine");
					this.OnToAlpineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToBoulder", DbType="Bit NOT NULL")]
		public bool ToBoulder
		{
			get
			{
				return this._ToBoulder;
			}
			set
			{
				if ((this._ToBoulder != value))
				{
					this.OnToBoulderChanging(value);
					this.SendPropertyChanging();
					this._ToBoulder = value;
					this.SendPropertyChanged("ToBoulder");
					this.OnToBoulderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToTopRope", DbType="Bit NOT NULL")]
		public bool ToTopRope
		{
			get
			{
				return this._ToTopRope;
			}
			set
			{
				if ((this._ToTopRope != value))
				{
					this.OnToTopRopeChanging(value);
					this.SendPropertyChanging();
					this._ToTopRope = value;
					this.SendPropertyChanged("ToTopRope");
					this.OnToTopRopeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToTrad", DbType="Bit NOT NULL")]
		public bool ToTrad
		{
			get
			{
				return this._ToTrad;
			}
			set
			{
				if ((this._ToTrad != value))
				{
					this.OnToTradChanging(value);
					this.SendPropertyChanging();
					this._ToTrad = value;
					this.SendPropertyChanged("ToTrad");
					this.OnToTradChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToLeadClimb", DbType="Bit NOT NULL")]
		public bool ToLeadClimb
		{
			get
			{
				return this._ToLeadClimb;
			}
			set
			{
				if ((this._ToLeadClimb != value))
				{
					this.OnToLeadClimbChanging(value);
					this.SendPropertyChanging();
					this._ToLeadClimb = value;
					this.SendPropertyChanged("ToLeadClimb");
					this.OnToLeadClimbChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this.OnMessageChanging(value);
					this.SendPropertyChanging();
					this._Message = value;
					this.SendPropertyChanged("Message");
					this.OnMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsIndoor", DbType="Bit NOT NULL")]
		public bool IsIndoor
		{
			get
			{
				return this._IsIndoor;
			}
			set
			{
				if ((this._IsIndoor != value))
				{
					this.OnIsIndoorChanging(value);
					this.SendPropertyChanging();
					this._IsIndoor = value;
					this.SendPropertyChanged("IsIndoor");
					this.OnIsIndoorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostedDateTime", DbType="SmallDateTime NOT NULL")]
		public System.DateTime PostedDateTime
		{
			get
			{
				return this._PostedDateTime;
			}
			set
			{
				if ((this._PostedDateTime != value))
				{
					this.OnPostedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._PostedDateTime = value;
					this.SendPropertyChanged("PostedDateTime");
					this.OnPostedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryID", DbType="SmallInt NOT NULL")]
		public short CountryID
		{
			get
			{
				return this._CountryID;
			}
			set
			{
				if ((this._CountryID != value))
				{
					this.OnCountryIDChanging(value);
					this.SendPropertyChanging();
					this._CountryID = value;
					this.SendPropertyChanged("CountryID");
					this.OnCountryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deleted", DbType="Bit NOT NULL")]
		public bool Deleted
		{
			get
			{
				return this._Deleted;
			}
			set
			{
				if ((this._Deleted != value))
				{
					this.OnDeletedChanging(value);
					this.SendPropertyChanging();
					this._Deleted = value;
					this.SendPropertyChanged("Deleted");
					this.OnDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HiddenOnGymPartnerPage", DbType="Bit NOT NULL")]
		public bool HiddenOnGymPartnerPage
		{
			get
			{
				return this._HiddenOnGymPartnerPage;
			}
			set
			{
				if ((this._HiddenOnGymPartnerPage != value))
				{
					this.OnHiddenOnGymPartnerPageChanging(value);
					this.SendPropertyChanging();
					this._HiddenOnGymPartnerPage = value;
					this.SendPropertyChanged("HiddenOnGymPartnerPage");
					this.OnHiddenOnGymPartnerPageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PartnerCall_PartnerCallPlace", Storage="_PartnerCallPlaces", ThisKey="ID", OtherKey="PartnerCallID")]
		public EntitySet<PartnerCallPlace> PartnerCallPlaces
		{
			get
			{
				return this._PartnerCallPlaces;
			}
			set
			{
				this._PartnerCallPlaces.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PartnerCall_PartnerCallReply", Storage="_PartnerCallReplies", ThisKey="ID", OtherKey="PartnerCallID")]
		public EntitySet<PartnerCallReply> PartnerCallReplies
		{
			get
			{
				return this._PartnerCallReplies;
			}
			set
			{
				this._PartnerCallReplies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PartnerCall_PartnerCallSurvey", Storage="_PartnerCallSurveys", ThisKey="ID", OtherKey="PartnerCallID")]
		public EntitySet<PartnerCallSurvey> PartnerCallSurveys
		{
			get
			{
				return this._PartnerCallSurveys;
			}
			set
			{
				this._PartnerCallSurveys.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClimberProfile_PartnerCall", Storage="_ClimberProfile", ThisKey="ClimberProfileID", OtherKey="ID", IsForeignKey=true)]
		public ClimberProfile ClimberProfile
		{
			get
			{
				return this._ClimberProfile.Entity;
			}
			set
			{
				ClimberProfile previousValue = this._ClimberProfile.Entity;
				if (((previousValue != value) 
							|| (this._ClimberProfile.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ClimberProfile.Entity = null;
						previousValue.PartnerCalls.Remove(this);
					}
					this._ClimberProfile.Entity = value;
					if ((value != null))
					{
						value.PartnerCalls.Add(this);
						this._ClimberProfileID = value.ID;
					}
					else
					{
						this._ClimberProfileID = default(System.Guid);
					}
					this.SendPropertyChanged("ClimberProfile");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PartnerCallPlaces(PartnerCallPlace entity)
		{
			this.SendPropertyChanging();
			entity.PartnerCall = this;
		}
		
		private void detach_PartnerCallPlaces(PartnerCallPlace entity)
		{
			this.SendPropertyChanging();
			entity.PartnerCall = null;
		}
		
		private void attach_PartnerCallReplies(PartnerCallReply entity)
		{
			this.SendPropertyChanging();
			entity.PartnerCall = this;
		}
		
		private void detach_PartnerCallReplies(PartnerCallReply entity)
		{
			this.SendPropertyChanging();
			entity.PartnerCall = null;
		}
		
		private void attach_PartnerCallSurveys(PartnerCallSurvey entity)
		{
			this.SendPropertyChanging();
			entity.PartnerCall = this;
		}
		
		private void detach_PartnerCallSurveys(PartnerCallSurvey entity)
		{
			this.SendPropertyChanging();
			entity.PartnerCall = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="ClimbFind.PartnerWidgetCSS")]
	public partial class PartnerWidgetCSS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _CSS;
		
		private short _Results;
		
		private string _AdminEmail;
		
		private short _WidgetVersion;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnCSSChanging(string value);
    partial void OnCSSChanged();
    partial void OnResultsChanging(short value);
    partial void OnResultsChanged();
    partial void OnAdminEmailChanging(string value);
    partial void OnAdminEmailChanged();
    partial void OnWidgetVersionChanging(short value);
    partial void OnWidgetVersionChanged();
    #endregion
		
		public PartnerWidgetCSS()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CSS", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string CSS
		{
			get
			{
				return this._CSS;
			}
			set
			{
				if ((this._CSS != value))
				{
					this.OnCSSChanging(value);
					this.SendPropertyChanging();
					this._CSS = value;
					this.SendPropertyChanged("CSS");
					this.OnCSSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Results", DbType="SmallInt NOT NULL")]
		public short Results
		{
			get
			{
				return this._Results;
			}
			set
			{
				if ((this._Results != value))
				{
					this.OnResultsChanging(value);
					this.SendPropertyChanging();
					this._Results = value;
					this.SendPropertyChanged("Results");
					this.OnResultsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminEmail", DbType="NVarChar(150)")]
		public string AdminEmail
		{
			get
			{
				return this._AdminEmail;
			}
			set
			{
				if ((this._AdminEmail != value))
				{
					this.OnAdminEmailChanging(value);
					this.SendPropertyChanging();
					this._AdminEmail = value;
					this.SendPropertyChanged("AdminEmail");
					this.OnAdminEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WidgetVersion", DbType="SmallInt NOT NULL")]
		public short WidgetVersion
		{
			get
			{
				return this._WidgetVersion;
			}
			set
			{
				if ((this._WidgetVersion != value))
				{
					this.OnWidgetVersionChanging(value);
					this.SendPropertyChanging();
					this._WidgetVersion = value;
					this.SendPropertyChanged("WidgetVersion");
					this.OnWidgetVersionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
